[
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "Button Template",
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 16,
                  "offset": 15
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 16,
              "offset": 15
            },
            "indent": []
          }
        }
      ],
      "position": {
        "start": {
          "line": 1,
          "column": 1,
          "offset": 0
        },
        "end": {
          "line": 1,
          "column": 16,
          "offset": 15
        }
      }
    },
    "tags": [],
    "loc": {
      "start": {
        "line": 8,
        "column": 0
      },
      "end": {
        "line": 10,
        "column": 2
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 12,
          "column": 0
        },
        "end": {
          "line": 222,
          "column": 1
        }
      },
      "file": "/Library/WebServer/Documents/mt/lib/components/buttontemplate.js"
    },
    "name": "ButtonTemplate",
    "augments": [
      {
        "title": "augments",
        "name": "Interface"
      }
    ],
    "kind": "class",
    "members": {
      "instance": [
        {
          "description": {
            "type": "root",
            "children": [
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "Whether the button is on (pressed) or off (not pressed)",
                    "position": {
                      "start": {
                        "line": 1,
                        "column": 1,
                        "offset": 0
                      },
                      "end": {
                        "line": 1,
                        "column": 56,
                        "offset": 55
                      },
                      "indent": []
                    }
                  }
                ],
                "position": {
                  "start": {
                    "line": 1,
                    "column": 1,
                    "offset": 0
                  },
                  "end": {
                    "line": 1,
                    "column": 56,
                    "offset": 55
                  },
                  "indent": []
                }
              }
            ],
            "position": {
              "start": {
                "line": 1,
                "column": 1,
                "offset": 0
              },
              "end": {
                "line": 1,
                "column": 56,
                "offset": 55
              }
            }
          },
          "tags": [
            {
              "title": "type",
              "description": null,
              "lineNumber": 2,
              "type": {
                "type": "NameExpression",
                "name": "boolean"
              }
            },
            {
              "title": "example",
              "description": "button.state = true;",
              "lineNumber": 3
            }
          ],
          "loc": {
            "start": {
              "line": 141,
              "column": 2
            },
            "end": {
              "line": 145,
              "column": 4
            }
          },
          "context": {
            "loc": {
              "start": {
                "line": 146,
                "column": 2
              },
              "end": {
                "line": 148,
                "column": 3
              }
            },
            "file": "/Library/WebServer/Documents/mt/lib/components/buttontemplate.js"
          },
          "examples": [
            {
              "description": "button.state = true;"
            }
          ],
          "name": "state",
          "kind": "member",
          "memberof": "ButtonTemplate",
          "scope": "instance",
          "members": {
            "instance": [],
            "static": [],
            "events": []
          },
          "path": [
            {
              "name": "ButtonTemplate",
              "kind": "class"
            },
            {
              "name": "state",
              "kind": "member",
              "scope": "instance"
            }
          ],
          "namespace": "ButtonTemplate#state"
        },
        {
          "description": {
            "type": "root",
            "children": [
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "Change the button to its alternate state (off=>on, on=>off), or flip it to a specified state.",
                    "position": {
                      "start": {
                        "line": 1,
                        "column": 1,
                        "offset": 0
                      },
                      "end": {
                        "line": 1,
                        "column": 94,
                        "offset": 93
                      },
                      "indent": []
                    }
                  }
                ],
                "position": {
                  "start": {
                    "line": 1,
                    "column": 1,
                    "offset": 0
                  },
                  "end": {
                    "line": 1,
                    "column": 94,
                    "offset": 93
                  },
                  "indent": []
                }
              }
            ],
            "position": {
              "start": {
                "line": 1,
                "column": 1,
                "offset": 0
              },
              "end": {
                "line": 1,
                "column": 94,
                "offset": 93
              }
            }
          },
          "tags": [
            {
              "title": "param",
              "description": "{boolean} (Optional) State to flip to.",
              "lineNumber": 2,
              "type": null,
              "name": "value"
            },
            {
              "title": "example",
              "description": "button.flip();",
              "lineNumber": 3
            }
          ],
          "loc": {
            "start": {
              "line": 163,
              "column": 2
            },
            "end": {
              "line": 167,
              "column": 4
            }
          },
          "context": {
            "loc": {
              "start": {
                "line": 168,
                "column": 2
              },
              "end": {
                "line": 180,
                "column": 3
              }
            },
            "file": "/Library/WebServer/Documents/mt/lib/components/buttontemplate.js"
          },
          "params": [
            {
              "name": "value",
              "lineNumber": 2,
              "description": {
                "type": "root",
                "children": [
                  {
                    "type": "paragraph",
                    "children": [
                      {
                        "type": "text",
                        "value": "{boolean} (Optional) State to flip to.",
                        "position": {
                          "start": {
                            "line": 1,
                            "column": 1,
                            "offset": 0
                          },
                          "end": {
                            "line": 1,
                            "column": 39,
                            "offset": 38
                          },
                          "indent": []
                        }
                      }
                    ],
                    "position": {
                      "start": {
                        "line": 1,
                        "column": 1,
                        "offset": 0
                      },
                      "end": {
                        "line": 1,
                        "column": 39,
                        "offset": 38
                      },
                      "indent": []
                    }
                  }
                ],
                "position": {
                  "start": {
                    "line": 1,
                    "column": 1,
                    "offset": 0
                  },
                  "end": {
                    "line": 1,
                    "column": 39,
                    "offset": 38
                  }
                }
              }
            }
          ],
          "examples": [
            {
              "description": "button.flip();"
            }
          ],
          "name": "flip",
          "kind": "function",
          "memberof": "ButtonTemplate",
          "scope": "instance",
          "members": {
            "instance": [],
            "static": [],
            "events": []
          },
          "path": [
            {
              "name": "ButtonTemplate",
              "kind": "class"
            },
            {
              "name": "flip",
              "kind": "function",
              "scope": "instance"
            }
          ],
          "namespace": "ButtonTemplate#flip"
        },
        {
          "description": {
            "type": "root",
            "children": [
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "Turn the button's state to true.",
                    "position": {
                      "start": {
                        "line": 1,
                        "column": 1,
                        "offset": 0
                      },
                      "end": {
                        "line": 1,
                        "column": 33,
                        "offset": 32
                      },
                      "indent": []
                    }
                  }
                ],
                "position": {
                  "start": {
                    "line": 1,
                    "column": 1,
                    "offset": 0
                  },
                  "end": {
                    "line": 1,
                    "column": 33,
                    "offset": 32
                  },
                  "indent": []
                }
              }
            ],
            "position": {
              "start": {
                "line": 1,
                "column": 1,
                "offset": 0
              },
              "end": {
                "line": 1,
                "column": 33,
                "offset": 32
              }
            }
          },
          "tags": [
            {
              "title": "example",
              "description": "button.turnOn();",
              "lineNumber": 2
            }
          ],
          "loc": {
            "start": {
              "line": 182,
              "column": 2
            },
            "end": {
              "line": 185,
              "column": 4
            }
          },
          "context": {
            "loc": {
              "start": {
                "line": 186,
                "column": 2
              },
              "end": {
                "line": 200,
                "column": 3
              }
            },
            "file": "/Library/WebServer/Documents/mt/lib/components/buttontemplate.js"
          },
          "examples": [
            {
              "description": "button.turnOn();"
            }
          ],
          "name": "turnOn",
          "kind": "function",
          "params": [
            {
              "title": "param",
              "name": "emitting",
              "lineNumber": 186
            }
          ],
          "memberof": "ButtonTemplate",
          "scope": "instance",
          "members": {
            "instance": [],
            "static": [],
            "events": []
          },
          "path": [
            {
              "name": "ButtonTemplate",
              "kind": "class"
            },
            {
              "name": "turnOn",
              "kind": "function",
              "scope": "instance"
            }
          ],
          "namespace": "ButtonTemplate#turnOn"
        },
        {
          "description": {
            "type": "root",
            "children": [
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "Turn the button's state to false.",
                    "position": {
                      "start": {
                        "line": 1,
                        "column": 1,
                        "offset": 0
                      },
                      "end": {
                        "line": 1,
                        "column": 34,
                        "offset": 33
                      },
                      "indent": []
                    }
                  }
                ],
                "position": {
                  "start": {
                    "line": 1,
                    "column": 1,
                    "offset": 0
                  },
                  "end": {
                    "line": 1,
                    "column": 34,
                    "offset": 33
                  },
                  "indent": []
                }
              }
            ],
            "position": {
              "start": {
                "line": 1,
                "column": 1,
                "offset": 0
              },
              "end": {
                "line": 1,
                "column": 34,
                "offset": 33
              }
            }
          },
          "tags": [
            {
              "title": "example",
              "description": "button.turnOff();",
              "lineNumber": 2
            }
          ],
          "loc": {
            "start": {
              "line": 202,
              "column": 2
            },
            "end": {
              "line": 205,
              "column": 4
            }
          },
          "context": {
            "loc": {
              "start": {
                "line": 206,
                "column": 2
              },
              "end": {
                "line": 220,
                "column": 3
              }
            },
            "file": "/Library/WebServer/Documents/mt/lib/components/buttontemplate.js"
          },
          "examples": [
            {
              "description": "button.turnOff();"
            }
          ],
          "name": "turnOff",
          "kind": "function",
          "params": [
            {
              "title": "param",
              "name": "emitting",
              "lineNumber": 206
            }
          ],
          "memberof": "ButtonTemplate",
          "scope": "instance",
          "members": {
            "instance": [],
            "static": [],
            "events": []
          },
          "path": [
            {
              "name": "ButtonTemplate",
              "kind": "class"
            },
            {
              "name": "turnOff",
              "kind": "function",
              "scope": "instance"
            }
          ],
          "namespace": "ButtonTemplate#turnOff"
        }
      ],
      "static": [],
      "events": []
    },
    "path": [
      {
        "name": "ButtonTemplate",
        "kind": "class"
      }
    ],
    "namespace": "ButtonTemplate"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "The slider's current value. If set manually, will update the interface and trigger the output event.",
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 101,
                  "offset": 100
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 101,
              "offset": 100
            },
            "indent": []
          }
        }
      ],
      "position": {
        "start": {
          "line": 1,
          "column": 1,
          "offset": 0
        },
        "end": {
          "line": 1,
          "column": 101,
          "offset": 100
        }
      }
    },
    "tags": [
      {
        "title": "type",
        "description": null,
        "lineNumber": 2,
        "type": {
          "type": "NameExpression",
          "name": "number"
        }
      },
      {
        "title": "example",
        "description": "slider.value = 10;",
        "lineNumber": 3
      }
    ],
    "loc": {
      "start": {
        "line": 185,
        "column": 2
      },
      "end": {
        "line": 189,
        "column": 4
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 190,
          "column": 2
        },
        "end": {
          "line": 192,
          "column": 3
        }
      },
      "file": "/Library/WebServer/Documents/mt/lib/components/slidertemplate.js"
    },
    "examples": [
      {
        "description": "slider.value = 10;"
      }
    ],
    "name": "value",
    "kind": "member",
    "memberof": "SliderTemplate",
    "scope": "instance",
    "members": {
      "instance": [],
      "static": [],
      "events": []
    },
    "path": [
      {
        "name": "value",
        "kind": "member",
        "scope": "instance"
      }
    ],
    "namespace": "#value"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "Lower limit of the sliders's output range",
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 42,
                  "offset": 41
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 42,
              "offset": 41
            },
            "indent": []
          }
        }
      ],
      "position": {
        "start": {
          "line": 1,
          "column": 1,
          "offset": 0
        },
        "end": {
          "line": 1,
          "column": 42,
          "offset": 41
        }
      }
    },
    "tags": [
      {
        "title": "type",
        "description": null,
        "lineNumber": 2,
        "type": {
          "type": "NameExpression",
          "name": "number"
        }
      },
      {
        "title": "example",
        "description": "slider.min = 1000;",
        "lineNumber": 3
      }
    ],
    "loc": {
      "start": {
        "line": 199,
        "column": 2
      },
      "end": {
        "line": 203,
        "column": 4
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 204,
          "column": 2
        },
        "end": {
          "line": 206,
          "column": 3
        }
      },
      "file": "/Library/WebServer/Documents/mt/lib/components/slidertemplate.js"
    },
    "examples": [
      {
        "description": "slider.min = 1000;"
      }
    ],
    "name": "min",
    "kind": "member",
    "memberof": "SliderTemplate",
    "scope": "instance",
    "members": {
      "instance": [],
      "static": [],
      "events": []
    },
    "path": [
      {
        "name": "min",
        "kind": "member",
        "scope": "instance"
      }
    ],
    "namespace": "#min"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "Upper limit of the slider's output range",
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 41,
                  "offset": 40
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 41,
              "offset": 40
            },
            "indent": []
          }
        }
      ],
      "position": {
        "start": {
          "line": 1,
          "column": 1,
          "offset": 0
        },
        "end": {
          "line": 1,
          "column": 41,
          "offset": 40
        }
      }
    },
    "tags": [
      {
        "title": "type",
        "description": null,
        "lineNumber": 2,
        "type": {
          "type": "NameExpression",
          "name": "number"
        }
      },
      {
        "title": "example",
        "description": "slider.max = 1000;",
        "lineNumber": 3
      }
    ],
    "loc": {
      "start": {
        "line": 211,
        "column": 2
      },
      "end": {
        "line": 215,
        "column": 4
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 216,
          "column": 2
        },
        "end": {
          "line": 218,
          "column": 3
        }
      },
      "file": "/Library/WebServer/Documents/mt/lib/components/slidertemplate.js"
    },
    "examples": [
      {
        "description": "slider.max = 1000;"
      }
    ],
    "name": "max",
    "kind": "member",
    "memberof": "SliderTemplate",
    "scope": "instance",
    "members": {
      "instance": [],
      "static": [],
      "events": []
    },
    "path": [
      {
        "name": "max",
        "kind": "member",
        "scope": "instance"
      }
    ],
    "namespace": "#max"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "The increment that the slider's value changes by.",
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 50,
                  "offset": 49
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 50,
              "offset": 49
            },
            "indent": []
          }
        }
      ],
      "position": {
        "start": {
          "line": 1,
          "column": 1,
          "offset": 0
        },
        "end": {
          "line": 1,
          "column": 50,
          "offset": 49
        }
      }
    },
    "tags": [
      {
        "title": "type",
        "description": null,
        "lineNumber": 2,
        "type": {
          "type": "NameExpression",
          "name": "number"
        }
      },
      {
        "title": "example",
        "description": "slider.step = 5;",
        "lineNumber": 3
      }
    ],
    "loc": {
      "start": {
        "line": 223,
        "column": 2
      },
      "end": {
        "line": 227,
        "column": 4
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 228,
          "column": 2
        },
        "end": {
          "line": 230,
          "column": 3
        }
      },
      "file": "/Library/WebServer/Documents/mt/lib/components/slidertemplate.js"
    },
    "examples": [
      {
        "description": "slider.step = 5;"
      }
    ],
    "name": "step",
    "kind": "member",
    "memberof": "SliderTemplate",
    "scope": "instance",
    "members": {
      "instance": [],
      "static": [],
      "events": []
    },
    "path": [
      {
        "name": "step",
        "kind": "member",
        "scope": "instance"
      }
    ],
    "namespace": "#step"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "Absolute mode (slider's value jumps to mouse click position) or relative mode (mouse drag changes value relative to its current position). Default: \"relative\".",
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 160,
                  "offset": 159
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 160,
              "offset": 159
            },
            "indent": []
          }
        }
      ],
      "position": {
        "start": {
          "line": 1,
          "column": 1,
          "offset": 0
        },
        "end": {
          "line": 1,
          "column": 160,
          "offset": 159
        }
      }
    },
    "tags": [
      {
        "title": "type",
        "description": null,
        "lineNumber": 2,
        "type": {
          "type": "NameExpression",
          "name": "string"
        }
      },
      {
        "title": "example",
        "description": "slider.mode = \"relative\";",
        "lineNumber": 3
      }
    ],
    "loc": {
      "start": {
        "line": 235,
        "column": 2
      },
      "end": {
        "line": 239,
        "column": 4
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 240,
          "column": 2
        },
        "end": {
          "line": 242,
          "column": 3
        }
      },
      "file": "/Library/WebServer/Documents/mt/lib/components/slidertemplate.js"
    },
    "examples": [
      {
        "description": "slider.mode = \"relative\";"
      }
    ],
    "name": "mode",
    "kind": "member",
    "memberof": "SliderTemplate",
    "scope": "instance",
    "members": {
      "instance": [],
      "static": [],
      "events": []
    },
    "path": [
      {
        "name": "mode",
        "kind": "member",
        "scope": "instance"
      }
    ],
    "namespace": "#mode"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "Interface",
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 10,
                  "offset": 9
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 10,
              "offset": 9
            },
            "indent": []
          }
        }
      ],
      "position": {
        "start": {
          "line": 1,
          "column": 1,
          "offset": 0
        },
        "end": {
          "line": 1,
          "column": 10,
          "offset": 9
        }
      }
    },
    "tags": [],
    "loc": {
      "start": {
        "line": 9,
        "column": 0
      },
      "end": {
        "line": 11,
        "column": 2
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 12,
          "column": 0
        },
        "end": {
          "line": 332,
          "column": 1
        }
      },
      "file": "/Library/WebServer/Documents/mt/lib/core/interface.js"
    },
    "name": "Interface",
    "augments": [
      {
        "title": "augments",
        "name": "EventEmitter"
      }
    ],
    "kind": "class",
    "members": {
      "instance": [
        {
          "description": {
            "type": "root",
            "children": [
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "Resize the interface",
                    "position": {
                      "start": {
                        "line": 1,
                        "column": 1,
                        "offset": 0
                      },
                      "end": {
                        "line": 1,
                        "column": 21,
                        "offset": 20
                      },
                      "indent": []
                    }
                  }
                ],
                "position": {
                  "start": {
                    "line": 1,
                    "column": 1,
                    "offset": 0
                  },
                  "end": {
                    "line": 1,
                    "column": 21,
                    "offset": 20
                  },
                  "indent": []
                }
              }
            ],
            "position": {
              "start": {
                "line": 1,
                "column": 1,
                "offset": 0
              },
              "end": {
                "line": 1,
                "column": 21,
                "offset": 20
              }
            }
          },
          "tags": [
            {
              "title": "param",
              "description": "{number} New width in pixels",
              "lineNumber": 2,
              "type": null,
              "name": "width"
            },
            {
              "title": "param",
              "description": "{number} New height in pixels",
              "lineNumber": 3,
              "type": null,
              "name": "height"
            },
            {
              "title": "example",
              "description": "button.resize(100,100);",
              "lineNumber": 5
            }
          ],
          "loc": {
            "start": {
              "line": 283,
              "column": 2
            },
            "end": {
              "line": 290,
              "column": 4
            }
          },
          "context": {
            "loc": {
              "start": {
                "line": 291,
                "column": 2
              },
              "end": {
                "line": 299,
                "column": 3
              }
            },
            "file": "/Library/WebServer/Documents/mt/lib/core/interface.js"
          },
          "params": [
            {
              "name": "width",
              "lineNumber": 2,
              "description": {
                "type": "root",
                "children": [
                  {
                    "type": "paragraph",
                    "children": [
                      {
                        "type": "text",
                        "value": "{number} New width in pixels",
                        "position": {
                          "start": {
                            "line": 1,
                            "column": 1,
                            "offset": 0
                          },
                          "end": {
                            "line": 1,
                            "column": 29,
                            "offset": 28
                          },
                          "indent": []
                        }
                      }
                    ],
                    "position": {
                      "start": {
                        "line": 1,
                        "column": 1,
                        "offset": 0
                      },
                      "end": {
                        "line": 1,
                        "column": 29,
                        "offset": 28
                      },
                      "indent": []
                    }
                  }
                ],
                "position": {
                  "start": {
                    "line": 1,
                    "column": 1,
                    "offset": 0
                  },
                  "end": {
                    "line": 1,
                    "column": 29,
                    "offset": 28
                  }
                }
              }
            },
            {
              "name": "height",
              "lineNumber": 3,
              "description": {
                "type": "root",
                "children": [
                  {
                    "type": "paragraph",
                    "children": [
                      {
                        "type": "text",
                        "value": "{number} New height in pixels",
                        "position": {
                          "start": {
                            "line": 1,
                            "column": 1,
                            "offset": 0
                          },
                          "end": {
                            "line": 1,
                            "column": 30,
                            "offset": 29
                          },
                          "indent": []
                        }
                      }
                    ],
                    "position": {
                      "start": {
                        "line": 1,
                        "column": 1,
                        "offset": 0
                      },
                      "end": {
                        "line": 1,
                        "column": 30,
                        "offset": 29
                      },
                      "indent": []
                    }
                  }
                ],
                "position": {
                  "start": {
                    "line": 1,
                    "column": 1,
                    "offset": 0
                  },
                  "end": {
                    "line": 1,
                    "column": 30,
                    "offset": 29
                  }
                }
              }
            }
          ],
          "examples": [
            {
              "description": "button.resize(100,100);"
            }
          ],
          "name": "resize",
          "kind": "function",
          "memberof": "Interface",
          "scope": "instance",
          "members": {
            "instance": [],
            "static": [],
            "events": []
          },
          "path": [
            {
              "name": "Interface",
              "kind": "class"
            },
            {
              "name": "resize",
              "kind": "function",
              "scope": "instance"
            }
          ],
          "namespace": "Interface#resize"
        },
        {
          "description": {
            "type": "root",
            "children": [
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "Remove the interface from the page and cancel its event listener(s).",
                    "position": {
                      "start": {
                        "line": 1,
                        "column": 1,
                        "offset": 0
                      },
                      "end": {
                        "line": 1,
                        "column": 69,
                        "offset": 68
                      },
                      "indent": []
                    }
                  }
                ],
                "position": {
                  "start": {
                    "line": 1,
                    "column": 1,
                    "offset": 0
                  },
                  "end": {
                    "line": 1,
                    "column": 69,
                    "offset": 68
                  },
                  "indent": []
                }
              }
            ],
            "position": {
              "start": {
                "line": 1,
                "column": 1,
                "offset": 0
              },
              "end": {
                "line": 1,
                "column": 69,
                "offset": 68
              }
            }
          },
          "tags": [
            {
              "title": "example",
              "description": "button.destroy());",
              "lineNumber": 3
            }
          ],
          "loc": {
            "start": {
              "line": 307,
              "column": 2
            },
            "end": {
              "line": 312,
              "column": 4
            }
          },
          "context": {
            "loc": {
              "start": {
                "line": 313,
                "column": 2
              },
              "end": {
                "line": 321,
                "column": 3
              }
            },
            "file": "/Library/WebServer/Documents/mt/lib/core/interface.js"
          },
          "examples": [
            {
              "description": "button.destroy());"
            }
          ],
          "name": "destroy",
          "kind": "function",
          "memberof": "Interface",
          "scope": "instance",
          "members": {
            "instance": [],
            "static": [],
            "events": []
          },
          "path": [
            {
              "name": "Interface",
              "kind": "class"
            },
            {
              "name": "destroy",
              "kind": "function",
              "scope": "instance"
            }
          ],
          "namespace": "Interface#destroy"
        }
      ],
      "static": [],
      "events": []
    },
    "path": [
      {
        "name": "Interface",
        "kind": "class"
      }
    ],
    "namespace": "Interface"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "Circular button with optional aftertouch.",
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 42,
                  "offset": 41
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 42,
              "offset": 41
            },
            "indent": []
          }
        }
      ],
      "position": {
        "start": {
          "line": 1,
          "column": 1,
          "offset": 0
        },
        "end": {
          "line": 1,
          "column": 42,
          "offset": 41
        }
      }
    },
    "tags": [
      {
        "title": "description",
        "description": "Circular button with optional aftertouch.",
        "lineNumber": 3
      },
      {
        "title": "demo",
        "description": "<span nexus-ui=\"button\"></span>",
        "lineNumber": 5
      },
      {
        "title": "example",
        "description": "var button = new Nexus.Button('#target')",
        "lineNumber": 7
      },
      {
        "title": "example",
        "description": "var button = new Nexus.Button('#target',{\n  'mode': 'toggle',\n  'state': true,\n  'size': [100,100]\n})",
        "lineNumber": 10
      },
      {
        "title": "output",
        "description": "change\nFires any time the interface's value changes. <br>\nIn <b>button mode</b>, <b>toggle mode</b>, and <b>impulse mode</b>, the output data is a boolean describing the state of the button.<br>\nIn <b>aftertouch mode</b>, the output data is an object containing x (0-1) and y (0-1) positions of aftertouch.",
        "lineNumber": 17
      },
      {
        "title": "outputexample",
        "description": "button.on('change',function(v) {\n  // v is the value of the button\n  console.log(v);\n})",
        "lineNumber": 23
      }
    ],
    "loc": {
      "start": {
        "line": 6,
        "column": 0
      },
      "end": {
        "line": 35,
        "column": 2
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 37,
          "column": 0
        },
        "end": {
          "line": 121,
          "column": 1
        }
      },
      "file": "/Library/WebServer/Documents/mt/lib/interfaces/button.js"
    },
    "examples": [
      {
        "description": "var button = new Nexus.Button('#target')"
      },
      {
        "description": "var button = new Nexus.Button('#target',{\n  'mode': 'toggle',\n  'state': true,\n  'size': [100,100]\n})"
      }
    ],
    "name": "Button",
    "augments": [
      {
        "title": "augments",
        "name": "ButtonTemplate"
      }
    ],
    "kind": "class",
    "members": {
      "instance": [
        {
          "description": {
            "type": "root",
            "children": [
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "Interaction mode",
                    "position": {
                      "start": {
                        "line": 1,
                        "column": 1,
                        "offset": 0
                      },
                      "end": {
                        "line": 1,
                        "column": 17,
                        "offset": 16
                      },
                      "indent": []
                    }
                  }
                ],
                "position": {
                  "start": {
                    "line": 1,
                    "column": 1,
                    "offset": 0
                  },
                  "end": {
                    "line": 1,
                    "column": 17,
                    "offset": 16
                  },
                  "indent": []
                }
              }
            ],
            "position": {
              "start": {
                "line": 1,
                "column": 1,
                "offset": 0
              },
              "end": {
                "line": 1,
                "column": 17,
                "offset": 16
              }
            }
          },
          "tags": [
            {
              "title": "type",
              "description": null,
              "lineNumber": 2,
              "type": {
                "type": "NameExpression",
                "name": "string"
              }
            },
            {
              "title": "example",
              "description": "button.mode = 'toggle';",
              "lineNumber": 3
            }
          ],
          "loc": {
            "start": {
              "line": 54,
              "column": 4
            },
            "end": {
              "line": 58,
              "column": 6
            }
          },
          "context": {
            "loc": {
              "start": {
                "line": 59,
                "column": 4
              },
              "end": {
                "line": 59,
                "column": 35
              }
            },
            "file": "/Library/WebServer/Documents/mt/lib/interfaces/button.js"
          },
          "examples": [
            {
              "description": "button.mode = 'toggle';"
            }
          ],
          "name": "mode",
          "memberof": "Button",
          "scope": "instance",
          "members": {
            "instance": [],
            "static": [],
            "events": []
          },
          "path": [
            {
              "name": "Button",
              "kind": "class"
            },
            {
              "name": "mode",
              "scope": "instance"
            }
          ],
          "namespace": "Button#mode"
        }
      ],
      "static": [],
      "events": []
    },
    "path": [
      {
        "name": "Button",
        "kind": "class"
      }
    ],
    "namespace": "Button"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "Dial with radial or linear interaction.",
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 40,
                  "offset": 39
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 40,
              "offset": 39
            },
            "indent": []
          }
        }
      ],
      "position": {
        "start": {
          "line": 1,
          "column": 1,
          "offset": 0
        },
        "end": {
          "line": 1,
          "column": 40,
          "offset": 39
        }
      }
    },
    "tags": [
      {
        "title": "description",
        "description": "Dial with radial or linear interaction.",
        "lineNumber": 4
      },
      {
        "title": "demo",
        "description": "<span nexus-ui=\"dial\"></span>",
        "lineNumber": 6
      },
      {
        "title": "example",
        "description": "var dial = new Nexus.Dial('#target')",
        "lineNumber": 8
      },
      {
        "title": "example",
        "description": "var dial = new Nexus.Dial('#target',{\n  'size': [75,75],\n  'interaction': 'radial', // \"radial\", \"vertical\", or \"horizontal\"\n  'mode': 'relative', // \"absolute\" or \"relative\"\n  'min': 0,\n  'max': 1,\n  'step': 0,\n  'value': 0\n})",
        "lineNumber": 11
      },
      {
        "title": "output",
        "description": "change\nFires any time the interface's value changes. <br>\nThe event data is the number value of the interface.",
        "lineNumber": 22
      },
      {
        "title": "outputexample",
        "description": "dial.on('change',function(v) {\n  console.log(v);\n})",
        "lineNumber": 27
      },
      {
        "title": "tutorial",
        "description": "Dial\nygGMxq",
        "lineNumber": 32
      }
    ],
    "loc": {
      "start": {
        "line": 9,
        "column": 0
      },
      "end": {
        "line": 45,
        "column": 2
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 47,
          "column": 0
        },
        "end": {
          "line": 376,
          "column": 1
        }
      },
      "file": "/Library/WebServer/Documents/mt/lib/interfaces/dial.js"
    },
    "examples": [
      {
        "description": "var dial = new Nexus.Dial('#target')"
      },
      {
        "description": "var dial = new Nexus.Dial('#target',{\n  'size': [75,75],\n  'interaction': 'radial', // \"radial\", \"vertical\", or \"horizontal\"\n  'mode': 'relative', // \"absolute\" or \"relative\"\n  'min': 0,\n  'max': 1,\n  'step': 0,\n  'value': 0\n})"
      }
    ],
    "name": "Dial",
    "augments": [
      {
        "title": "augments",
        "name": "Interface"
      }
    ],
    "kind": "class",
    "members": {
      "instance": [
        {
          "description": {
            "type": "root",
            "children": [
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "Dial's value. When set, it will automatically be adjust to fit min/max/step settings of the interface.",
                    "position": {
                      "start": {
                        "line": 1,
                        "column": 1,
                        "offset": 0
                      },
                      "end": {
                        "line": 1,
                        "column": 103,
                        "offset": 102
                      },
                      "indent": []
                    }
                  }
                ],
                "position": {
                  "start": {
                    "line": 1,
                    "column": 1,
                    "offset": 0
                  },
                  "end": {
                    "line": 1,
                    "column": 103,
                    "offset": 102
                  },
                  "indent": []
                }
              }
            ],
            "position": {
              "start": {
                "line": 1,
                "column": 1,
                "offset": 0
              },
              "end": {
                "line": 1,
                "column": 103,
                "offset": 102
              }
            }
          },
          "tags": [
            {
              "title": "type",
              "description": null,
              "lineNumber": 2,
              "type": {
                "type": "NameExpression",
                "name": "number"
              }
            },
            {
              "title": "example",
              "description": "dial.value = 10;",
              "lineNumber": 3
            }
          ],
          "loc": {
            "start": {
              "line": 298,
              "column": 4
            },
            "end": {
              "line": 302,
              "column": 6
            }
          },
          "context": {
            "loc": {
              "start": {
                "line": 303,
                "column": 4
              },
              "end": {
                "line": 305,
                "column": 5
              }
            },
            "file": "/Library/WebServer/Documents/mt/lib/interfaces/dial.js"
          },
          "examples": [
            {
              "description": "dial.value = 10;"
            }
          ],
          "name": "value",
          "kind": "member",
          "memberof": "Dial",
          "scope": "instance",
          "members": {
            "instance": [],
            "static": [],
            "events": []
          },
          "path": [
            {
              "name": "Dial",
              "kind": "class"
            },
            {
              "name": "value",
              "kind": "member",
              "scope": "instance"
            }
          ],
          "namespace": "Dial#value"
        },
        {
          "description": {
            "type": "root",
            "children": [
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "Lower limit of the dial's output range",
                    "position": {
                      "start": {
                        "line": 1,
                        "column": 1,
                        "offset": 0
                      },
                      "end": {
                        "line": 1,
                        "column": 39,
                        "offset": 38
                      },
                      "indent": []
                    }
                  }
                ],
                "position": {
                  "start": {
                    "line": 1,
                    "column": 1,
                    "offset": 0
                  },
                  "end": {
                    "line": 1,
                    "column": 39,
                    "offset": 38
                  },
                  "indent": []
                }
              }
            ],
            "position": {
              "start": {
                "line": 1,
                "column": 1,
                "offset": 0
              },
              "end": {
                "line": 1,
                "column": 39,
                "offset": 38
              }
            }
          },
          "tags": [
            {
              "title": "type",
              "description": null,
              "lineNumber": 2,
              "type": {
                "type": "NameExpression",
                "name": "number"
              }
            },
            {
              "title": "example",
              "description": "dial.min = 1000;",
              "lineNumber": 3
            }
          ],
          "loc": {
            "start": {
              "line": 313,
              "column": 4
            },
            "end": {
              "line": 317,
              "column": 6
            }
          },
          "context": {
            "loc": {
              "start": {
                "line": 318,
                "column": 4
              },
              "end": {
                "line": 320,
                "column": 5
              }
            },
            "file": "/Library/WebServer/Documents/mt/lib/interfaces/dial.js"
          },
          "examples": [
            {
              "description": "dial.min = 1000;"
            }
          ],
          "name": "min",
          "kind": "member",
          "memberof": "Dial",
          "scope": "instance",
          "members": {
            "instance": [],
            "static": [],
            "events": []
          },
          "path": [
            {
              "name": "Dial",
              "kind": "class"
            },
            {
              "name": "min",
              "kind": "member",
              "scope": "instance"
            }
          ],
          "namespace": "Dial#min"
        },
        {
          "description": {
            "type": "root",
            "children": [
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "Upper limit of the dial's output range",
                    "position": {
                      "start": {
                        "line": 1,
                        "column": 1,
                        "offset": 0
                      },
                      "end": {
                        "line": 1,
                        "column": 39,
                        "offset": 38
                      },
                      "indent": []
                    }
                  }
                ],
                "position": {
                  "start": {
                    "line": 1,
                    "column": 1,
                    "offset": 0
                  },
                  "end": {
                    "line": 1,
                    "column": 39,
                    "offset": 38
                  },
                  "indent": []
                }
              }
            ],
            "position": {
              "start": {
                "line": 1,
                "column": 1,
                "offset": 0
              },
              "end": {
                "line": 1,
                "column": 39,
                "offset": 38
              }
            }
          },
          "tags": [
            {
              "title": "type",
              "description": null,
              "lineNumber": 2,
              "type": {
                "type": "NameExpression",
                "name": "number"
              }
            },
            {
              "title": "example",
              "description": "dial.max = 1000;",
              "lineNumber": 3
            }
          ],
          "loc": {
            "start": {
              "line": 325,
              "column": 4
            },
            "end": {
              "line": 329,
              "column": 6
            }
          },
          "context": {
            "loc": {
              "start": {
                "line": 330,
                "column": 4
              },
              "end": {
                "line": 332,
                "column": 5
              }
            },
            "file": "/Library/WebServer/Documents/mt/lib/interfaces/dial.js"
          },
          "examples": [
            {
              "description": "dial.max = 1000;"
            }
          ],
          "name": "max",
          "kind": "member",
          "memberof": "Dial",
          "scope": "instance",
          "members": {
            "instance": [],
            "static": [],
            "events": []
          },
          "path": [
            {
              "name": "Dial",
              "kind": "class"
            },
            {
              "name": "max",
              "kind": "member",
              "scope": "instance"
            }
          ],
          "namespace": "Dial#max"
        },
        {
          "description": {
            "type": "root",
            "children": [
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "The increment that the dial's value changes by.",
                    "position": {
                      "start": {
                        "line": 1,
                        "column": 1,
                        "offset": 0
                      },
                      "end": {
                        "line": 1,
                        "column": 48,
                        "offset": 47
                      },
                      "indent": []
                    }
                  }
                ],
                "position": {
                  "start": {
                    "line": 1,
                    "column": 1,
                    "offset": 0
                  },
                  "end": {
                    "line": 1,
                    "column": 48,
                    "offset": 47
                  },
                  "indent": []
                }
              }
            ],
            "position": {
              "start": {
                "line": 1,
                "column": 1,
                "offset": 0
              },
              "end": {
                "line": 1,
                "column": 48,
                "offset": 47
              }
            }
          },
          "tags": [
            {
              "title": "type",
              "description": null,
              "lineNumber": 2,
              "type": {
                "type": "NameExpression",
                "name": "number"
              }
            },
            {
              "title": "example",
              "description": "dial.step = 5;",
              "lineNumber": 3
            }
          ],
          "loc": {
            "start": {
              "line": 337,
              "column": 4
            },
            "end": {
              "line": 341,
              "column": 6
            }
          },
          "context": {
            "loc": {
              "start": {
                "line": 342,
                "column": 4
              },
              "end": {
                "line": 344,
                "column": 5
              }
            },
            "file": "/Library/WebServer/Documents/mt/lib/interfaces/dial.js"
          },
          "examples": [
            {
              "description": "dial.step = 5;"
            }
          ],
          "name": "step",
          "kind": "member",
          "memberof": "Dial",
          "scope": "instance",
          "members": {
            "instance": [],
            "static": [],
            "events": []
          },
          "path": [
            {
              "name": "Dial",
              "kind": "class"
            },
            {
              "name": "step",
              "kind": "member",
              "scope": "instance"
            }
          ],
          "namespace": "Dial#step"
        },
        {
          "description": {
            "type": "root",
            "children": [
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "Absolute mode (dial's value jumps to mouse click position) or relative mode (mouse drag changes value relative to its current position). Default: \"relative\".",
                    "position": {
                      "start": {
                        "line": 1,
                        "column": 1,
                        "offset": 0
                      },
                      "end": {
                        "line": 1,
                        "column": 158,
                        "offset": 157
                      },
                      "indent": []
                    }
                  }
                ],
                "position": {
                  "start": {
                    "line": 1,
                    "column": 1,
                    "offset": 0
                  },
                  "end": {
                    "line": 1,
                    "column": 158,
                    "offset": 157
                  },
                  "indent": []
                }
              }
            ],
            "position": {
              "start": {
                "line": 1,
                "column": 1,
                "offset": 0
              },
              "end": {
                "line": 1,
                "column": 158,
                "offset": 157
              }
            }
          },
          "tags": [
            {
              "title": "type",
              "description": null,
              "lineNumber": 2,
              "type": {
                "type": "NameExpression",
                "name": "string"
              }
            },
            {
              "title": "example",
              "description": "dial.mode = \"relative\";",
              "lineNumber": 3
            }
          ],
          "loc": {
            "start": {
              "line": 349,
              "column": 4
            },
            "end": {
              "line": 353,
              "column": 6
            }
          },
          "context": {
            "loc": {
              "start": {
                "line": 354,
                "column": 4
              },
              "end": {
                "line": 356,
                "column": 5
              }
            },
            "file": "/Library/WebServer/Documents/mt/lib/interfaces/dial.js"
          },
          "examples": [
            {
              "description": "dial.mode = \"relative\";"
            }
          ],
          "name": "mode",
          "kind": "member",
          "memberof": "Dial",
          "scope": "instance",
          "members": {
            "instance": [],
            "static": [],
            "events": []
          },
          "path": [
            {
              "name": "Dial",
              "kind": "class"
            },
            {
              "name": "mode",
              "kind": "member",
              "scope": "instance"
            }
          ],
          "namespace": "Dial#mode"
        },
        {
          "description": {
            "type": "root",
            "children": [
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "Normalized value of the dial.",
                    "position": {
                      "start": {
                        "line": 1,
                        "column": 1,
                        "offset": 0
                      },
                      "end": {
                        "line": 1,
                        "column": 30,
                        "offset": 29
                      },
                      "indent": []
                    }
                  }
                ],
                "position": {
                  "start": {
                    "line": 1,
                    "column": 1,
                    "offset": 0
                  },
                  "end": {
                    "line": 1,
                    "column": 30,
                    "offset": 29
                  },
                  "indent": []
                }
              }
            ],
            "position": {
              "start": {
                "line": 1,
                "column": 1,
                "offset": 0
              },
              "end": {
                "line": 1,
                "column": 30,
                "offset": 29
              }
            }
          },
          "tags": [
            {
              "title": "type",
              "description": null,
              "lineNumber": 2,
              "type": {
                "type": "NameExpression",
                "name": "number"
              }
            },
            {
              "title": "example",
              "description": "dial.normalized = 0.5;",
              "lineNumber": 3
            }
          ],
          "loc": {
            "start": {
              "line": 362,
              "column": 2
            },
            "end": {
              "line": 366,
              "column": 4
            }
          },
          "context": {
            "loc": {
              "start": {
                "line": 367,
                "column": 2
              },
              "end": {
                "line": 369,
                "column": 3
              }
            },
            "file": "/Library/WebServer/Documents/mt/lib/interfaces/dial.js"
          },
          "examples": [
            {
              "description": "dial.normalized = 0.5;"
            }
          ],
          "name": "normalized",
          "kind": "member",
          "memberof": "Dial",
          "scope": "instance",
          "members": {
            "instance": [],
            "static": [],
            "events": []
          },
          "path": [
            {
              "name": "Dial",
              "kind": "class"
            },
            {
              "name": "normalized",
              "kind": "member",
              "scope": "instance"
            }
          ],
          "namespace": "Dial#normalized"
        }
      ],
      "static": [],
      "events": []
    },
    "path": [
      {
        "name": "Dial",
        "kind": "class"
      }
    ],
    "namespace": "Dial"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "Interactive linear ramp visualization.",
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 39,
                  "offset": 38
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 39,
              "offset": 38
            },
            "indent": []
          }
        }
      ],
      "position": {
        "start": {
          "line": 1,
          "column": 1,
          "offset": 0
        },
        "end": {
          "line": 1,
          "column": 39,
          "offset": 38
        }
      }
    },
    "tags": [
      {
        "title": "description",
        "description": "Interactive linear ramp visualization.",
        "lineNumber": 3
      },
      {
        "title": "demo",
        "description": "<span nexus-ui=\"envelope\"></span>",
        "lineNumber": 5
      },
      {
        "title": "example",
        "description": "var envelope = new Nexus.Envelope('#target')",
        "lineNumber": 7
      },
      {
        "title": "example",
        "description": "var envelope = new Nexus.Envelope('#target',{\n  'size': [300,150],\n  'points': [\n    {\n      x: 0.1,\n      y: 0.4\n    },\n    {\n      x: 0.35,\n      y: 0.6\n    },\n    {\n      x: 0.65,\n      y: 0.2\n    },\n    {\n      x: 0.9,\n      y: 0.4\n    },\n  ]\n})",
        "lineNumber": 10
      },
      {
        "title": "output",
        "description": "change\nFires any time a node is moved. <br>\nThe event data is an array of point locations. Each item in the array is an object containing <i>x</i> and <i>y</i> properties describing the location of a point on the envelope.",
        "lineNumber": 33
      },
      {
        "title": "outputexample",
        "description": "envelope.on('change',function(v) {\n  console.log(v);\n})",
        "lineNumber": 38
      }
    ],
    "loc": {
      "start": {
        "line": 68,
        "column": 0
      },
      "end": {
        "line": 111,
        "column": 2
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 113,
          "column": 0
        },
        "end": {
          "line": 463,
          "column": 1
        }
      },
      "file": "/Library/WebServer/Documents/mt/lib/interfaces/envelope.js"
    },
    "examples": [
      {
        "description": "var envelope = new Nexus.Envelope('#target')"
      },
      {
        "description": "var envelope = new Nexus.Envelope('#target',{\n  'size': [300,150],\n  'points': [\n    {\n      x: 0.1,\n      y: 0.4\n    },\n    {\n      x: 0.35,\n      y: 0.6\n    },\n    {\n      x: 0.65,\n      y: 0.2\n    },\n    {\n      x: 0.9,\n      y: 0.4\n    },\n  ]\n})"
      }
    ],
    "name": "Envelope",
    "augments": [
      {
        "title": "augments",
        "name": "Interface"
      }
    ],
    "kind": "class",
    "members": {
      "instance": [
        {
          "description": {
            "type": "root",
            "children": [
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "Sort the this.points array from left-most point to right-most point. You should not regularly need to use this, however it may be useful if the points get unordered.",
                    "position": {
                      "start": {
                        "line": 1,
                        "column": 1,
                        "offset": 0
                      },
                      "end": {
                        "line": 1,
                        "column": 166,
                        "offset": 165
                      },
                      "indent": []
                    }
                  }
                ],
                "position": {
                  "start": {
                    "line": 1,
                    "column": 1,
                    "offset": 0
                  },
                  "end": {
                    "line": 1,
                    "column": 166,
                    "offset": 165
                  },
                  "indent": []
                }
              }
            ],
            "position": {
              "start": {
                "line": 1,
                "column": 1,
                "offset": 0
              },
              "end": {
                "line": 1,
                "column": 166,
                "offset": 165
              }
            }
          },
          "tags": [],
          "loc": {
            "start": {
              "line": 341,
              "column": 2
            },
            "end": {
              "line": 343,
              "column": 4
            }
          },
          "context": {
            "loc": {
              "start": {
                "line": 344,
                "column": 2
              },
              "end": {
                "line": 348,
                "column": 3
              }
            },
            "file": "/Library/WebServer/Documents/mt/lib/interfaces/envelope.js"
          },
          "name": "sortPoints",
          "kind": "function",
          "memberof": "Envelope",
          "scope": "instance",
          "members": {
            "instance": [],
            "static": [],
            "events": []
          },
          "path": [
            {
              "name": "Envelope",
              "kind": "class"
            },
            {
              "name": "sortPoints",
              "kind": "function",
              "scope": "instance"
            }
          ],
          "namespace": "Envelope#sortPoints"
        },
        {
          "description": {
            "type": "root",
            "children": [
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "Add a breakpoint on the envelope.",
                    "position": {
                      "start": {
                        "line": 1,
                        "column": 1,
                        "offset": 0
                      },
                      "end": {
                        "line": 1,
                        "column": 34,
                        "offset": 33
                      },
                      "indent": []
                    }
                  }
                ],
                "position": {
                  "start": {
                    "line": 1,
                    "column": 1,
                    "offset": 0
                  },
                  "end": {
                    "line": 1,
                    "column": 34,
                    "offset": 33
                  },
                  "indent": []
                }
              }
            ],
            "position": {
              "start": {
                "line": 1,
                "column": 1,
                "offset": 0
              },
              "end": {
                "line": 1,
                "column": 34,
                "offset": 33
              }
            }
          },
          "tags": [
            {
              "title": "param",
              "description": "{number} x location of the point, normalized (0-1)",
              "lineNumber": 2,
              "type": null,
              "name": "x"
            },
            {
              "title": "param",
              "description": "{number} y location of the point, normalized (0-1)",
              "lineNumber": 3,
              "type": null,
              "name": "y"
            }
          ],
          "loc": {
            "start": {
              "line": 351,
              "column": 2
            },
            "end": {
              "line": 355,
              "column": 4
            }
          },
          "context": {
            "loc": {
              "start": {
                "line": 356,
                "column": 2
              },
              "end": {
                "line": 379,
                "column": 3
              }
            },
            "file": "/Library/WebServer/Documents/mt/lib/interfaces/envelope.js"
          },
          "params": [
            {
              "name": "x",
              "lineNumber": 2,
              "description": {
                "type": "root",
                "children": [
                  {
                    "type": "paragraph",
                    "children": [
                      {
                        "type": "text",
                        "value": "{number} x location of the point, normalized (0-1)",
                        "position": {
                          "start": {
                            "line": 1,
                            "column": 1,
                            "offset": 0
                          },
                          "end": {
                            "line": 1,
                            "column": 51,
                            "offset": 50
                          },
                          "indent": []
                        }
                      }
                    ],
                    "position": {
                      "start": {
                        "line": 1,
                        "column": 1,
                        "offset": 0
                      },
                      "end": {
                        "line": 1,
                        "column": 51,
                        "offset": 50
                      },
                      "indent": []
                    }
                  }
                ],
                "position": {
                  "start": {
                    "line": 1,
                    "column": 1,
                    "offset": 0
                  },
                  "end": {
                    "line": 1,
                    "column": 51,
                    "offset": 50
                  }
                }
              }
            },
            {
              "name": "y",
              "lineNumber": 3,
              "description": {
                "type": "root",
                "children": [
                  {
                    "type": "paragraph",
                    "children": [
                      {
                        "type": "text",
                        "value": "{number} y location of the point, normalized (0-1)",
                        "position": {
                          "start": {
                            "line": 1,
                            "column": 1,
                            "offset": 0
                          },
                          "end": {
                            "line": 1,
                            "column": 51,
                            "offset": 50
                          },
                          "indent": []
                        }
                      }
                    ],
                    "position": {
                      "start": {
                        "line": 1,
                        "column": 1,
                        "offset": 0
                      },
                      "end": {
                        "line": 1,
                        "column": 51,
                        "offset": 50
                      },
                      "indent": []
                    }
                  }
                ],
                "position": {
                  "start": {
                    "line": 1,
                    "column": 1,
                    "offset": 0
                  },
                  "end": {
                    "line": 1,
                    "column": 51,
                    "offset": 50
                  }
                }
              }
            }
          ],
          "name": "addPoint",
          "kind": "function",
          "memberof": "Envelope",
          "scope": "instance",
          "members": {
            "instance": [],
            "static": [],
            "events": []
          },
          "path": [
            {
              "name": "Envelope",
              "kind": "class"
            },
            {
              "name": "addPoint",
              "kind": "function",
              "scope": "instance"
            }
          ],
          "namespace": "Envelope#addPoint"
        },
        {
          "description": {
            "type": "root",
            "children": [
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "Find the level at a certain x location on the envelope.",
                    "position": {
                      "start": {
                        "line": 1,
                        "column": 1,
                        "offset": 0
                      },
                      "end": {
                        "line": 1,
                        "column": 56,
                        "offset": 55
                      },
                      "indent": []
                    }
                  }
                ],
                "position": {
                  "start": {
                    "line": 1,
                    "column": 1,
                    "offset": 0
                  },
                  "end": {
                    "line": 1,
                    "column": 56,
                    "offset": 55
                  },
                  "indent": []
                }
              }
            ],
            "position": {
              "start": {
                "line": 1,
                "column": 1,
                "offset": 0
              },
              "end": {
                "line": 1,
                "column": 56,
                "offset": 55
              }
            }
          },
          "tags": [
            {
              "title": "param",
              "description": "{number} The x location to find the level of, normalized 0-1",
              "lineNumber": 2,
              "type": null,
              "name": "x"
            }
          ],
          "loc": {
            "start": {
              "line": 382,
              "column": 2
            },
            "end": {
              "line": 385,
              "column": 4
            }
          },
          "context": {
            "loc": {
              "start": {
                "line": 386,
                "column": 2
              },
              "end": {
                "line": 402,
                "column": 3
              }
            },
            "file": "/Library/WebServer/Documents/mt/lib/interfaces/envelope.js"
          },
          "params": [
            {
              "name": "x",
              "lineNumber": 2,
              "description": {
                "type": "root",
                "children": [
                  {
                    "type": "paragraph",
                    "children": [
                      {
                        "type": "text",
                        "value": "{number} The x location to find the level of, normalized 0-1",
                        "position": {
                          "start": {
                            "line": 1,
                            "column": 1,
                            "offset": 0
                          },
                          "end": {
                            "line": 1,
                            "column": 61,
                            "offset": 60
                          },
                          "indent": []
                        }
                      }
                    ],
                    "position": {
                      "start": {
                        "line": 1,
                        "column": 1,
                        "offset": 0
                      },
                      "end": {
                        "line": 1,
                        "column": 61,
                        "offset": 60
                      },
                      "indent": []
                    }
                  }
                ],
                "position": {
                  "start": {
                    "line": 1,
                    "column": 1,
                    "offset": 0
                  },
                  "end": {
                    "line": 1,
                    "column": 61,
                    "offset": 60
                  }
                }
              }
            }
          ],
          "name": "scan",
          "kind": "function",
          "memberof": "Envelope",
          "scope": "instance",
          "members": {
            "instance": [],
            "static": [],
            "events": []
          },
          "path": [
            {
              "name": "Envelope",
              "kind": "class"
            },
            {
              "name": "scan",
              "kind": "function",
              "scope": "instance"
            }
          ],
          "namespace": "Envelope#scan"
        },
        {
          "description": {
            "type": "root",
            "children": [
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "Move a breakpoint on the envelope.",
                    "position": {
                      "start": {
                        "line": 1,
                        "column": 1,
                        "offset": 0
                      },
                      "end": {
                        "line": 1,
                        "column": 35,
                        "offset": 34
                      },
                      "indent": []
                    }
                  }
                ],
                "position": {
                  "start": {
                    "line": 1,
                    "column": 1,
                    "offset": 0
                  },
                  "end": {
                    "line": 1,
                    "column": 35,
                    "offset": 34
                  },
                  "indent": []
                }
              }
            ],
            "position": {
              "start": {
                "line": 1,
                "column": 1,
                "offset": 0
              },
              "end": {
                "line": 1,
                "column": 35,
                "offset": 34
              }
            }
          },
          "tags": [
            {
              "title": "param",
              "description": "{number} The index of the breakpoint to move",
              "lineNumber": 2,
              "type": null,
              "name": "index"
            },
            {
              "title": "param",
              "description": "{number} New x location, normalized 0-1",
              "lineNumber": 3,
              "type": null,
              "name": "x"
            },
            {
              "title": "param",
              "description": "{number} New y location, normalized 0-1",
              "lineNumber": 4,
              "type": null,
              "name": "y"
            }
          ],
          "loc": {
            "start": {
              "line": 405,
              "column": 2
            },
            "end": {
              "line": 410,
              "column": 4
            }
          },
          "context": {
            "loc": {
              "start": {
                "line": 411,
                "column": 2
              },
              "end": {
                "line": 417,
                "column": 3
              }
            },
            "file": "/Library/WebServer/Documents/mt/lib/interfaces/envelope.js"
          },
          "params": [
            {
              "name": "index",
              "lineNumber": 2,
              "description": {
                "type": "root",
                "children": [
                  {
                    "type": "paragraph",
                    "children": [
                      {
                        "type": "text",
                        "value": "{number} The index of the breakpoint to move",
                        "position": {
                          "start": {
                            "line": 1,
                            "column": 1,
                            "offset": 0
                          },
                          "end": {
                            "line": 1,
                            "column": 45,
                            "offset": 44
                          },
                          "indent": []
                        }
                      }
                    ],
                    "position": {
                      "start": {
                        "line": 1,
                        "column": 1,
                        "offset": 0
                      },
                      "end": {
                        "line": 1,
                        "column": 45,
                        "offset": 44
                      },
                      "indent": []
                    }
                  }
                ],
                "position": {
                  "start": {
                    "line": 1,
                    "column": 1,
                    "offset": 0
                  },
                  "end": {
                    "line": 1,
                    "column": 45,
                    "offset": 44
                  }
                }
              }
            },
            {
              "name": "x",
              "lineNumber": 3,
              "description": {
                "type": "root",
                "children": [
                  {
                    "type": "paragraph",
                    "children": [
                      {
                        "type": "text",
                        "value": "{number} New x location, normalized 0-1",
                        "position": {
                          "start": {
                            "line": 1,
                            "column": 1,
                            "offset": 0
                          },
                          "end": {
                            "line": 1,
                            "column": 40,
                            "offset": 39
                          },
                          "indent": []
                        }
                      }
                    ],
                    "position": {
                      "start": {
                        "line": 1,
                        "column": 1,
                        "offset": 0
                      },
                      "end": {
                        "line": 1,
                        "column": 40,
                        "offset": 39
                      },
                      "indent": []
                    }
                  }
                ],
                "position": {
                  "start": {
                    "line": 1,
                    "column": 1,
                    "offset": 0
                  },
                  "end": {
                    "line": 1,
                    "column": 40,
                    "offset": 39
                  }
                }
              }
            },
            {
              "name": "y",
              "lineNumber": 4,
              "description": {
                "type": "root",
                "children": [
                  {
                    "type": "paragraph",
                    "children": [
                      {
                        "type": "text",
                        "value": "{number} New y location, normalized 0-1",
                        "position": {
                          "start": {
                            "line": 1,
                            "column": 1,
                            "offset": 0
                          },
                          "end": {
                            "line": 1,
                            "column": 40,
                            "offset": 39
                          },
                          "indent": []
                        }
                      }
                    ],
                    "position": {
                      "start": {
                        "line": 1,
                        "column": 1,
                        "offset": 0
                      },
                      "end": {
                        "line": 1,
                        "column": 40,
                        "offset": 39
                      },
                      "indent": []
                    }
                  }
                ],
                "position": {
                  "start": {
                    "line": 1,
                    "column": 1,
                    "offset": 0
                  },
                  "end": {
                    "line": 1,
                    "column": 40,
                    "offset": 39
                  }
                }
              }
            }
          ],
          "name": "movePoint",
          "kind": "function",
          "memberof": "Envelope",
          "scope": "instance",
          "members": {
            "instance": [],
            "static": [],
            "events": []
          },
          "path": [
            {
              "name": "Envelope",
              "kind": "class"
            },
            {
              "name": "movePoint",
              "kind": "function",
              "scope": "instance"
            }
          ],
          "namespace": "Envelope#movePoint"
        },
        {
          "description": {
            "type": "root",
            "children": [
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "Move a breakpoint on the envelope by a certain amount.",
                    "position": {
                      "start": {
                        "line": 1,
                        "column": 1,
                        "offset": 0
                      },
                      "end": {
                        "line": 1,
                        "column": 55,
                        "offset": 54
                      },
                      "indent": []
                    }
                  }
                ],
                "position": {
                  "start": {
                    "line": 1,
                    "column": 1,
                    "offset": 0
                  },
                  "end": {
                    "line": 1,
                    "column": 55,
                    "offset": 54
                  },
                  "indent": []
                }
              }
            ],
            "position": {
              "start": {
                "line": 1,
                "column": 1,
                "offset": 0
              },
              "end": {
                "line": 1,
                "column": 55,
                "offset": 54
              }
            }
          },
          "tags": [
            {
              "title": "param",
              "description": "{number} The index of the breakpoint to move",
              "lineNumber": 2,
              "type": null,
              "name": "index"
            },
            {
              "title": "param",
              "description": "{number} X displacement, normalized 0-1",
              "lineNumber": 3,
              "type": null,
              "name": "xOffset"
            },
            {
              "title": "param",
              "description": "{number} Y displacement, normalized 0-1",
              "lineNumber": 4,
              "type": null,
              "name": "yOffset"
            }
          ],
          "loc": {
            "start": {
              "line": 420,
              "column": 2
            },
            "end": {
              "line": 425,
              "column": 4
            }
          },
          "context": {
            "loc": {
              "start": {
                "line": 426,
                "column": 2
              },
              "end": {
                "line": 432,
                "column": 3
              }
            },
            "file": "/Library/WebServer/Documents/mt/lib/interfaces/envelope.js"
          },
          "params": [
            {
              "name": "index",
              "lineNumber": 2,
              "description": {
                "type": "root",
                "children": [
                  {
                    "type": "paragraph",
                    "children": [
                      {
                        "type": "text",
                        "value": "{number} The index of the breakpoint to move",
                        "position": {
                          "start": {
                            "line": 1,
                            "column": 1,
                            "offset": 0
                          },
                          "end": {
                            "line": 1,
                            "column": 45,
                            "offset": 44
                          },
                          "indent": []
                        }
                      }
                    ],
                    "position": {
                      "start": {
                        "line": 1,
                        "column": 1,
                        "offset": 0
                      },
                      "end": {
                        "line": 1,
                        "column": 45,
                        "offset": 44
                      },
                      "indent": []
                    }
                  }
                ],
                "position": {
                  "start": {
                    "line": 1,
                    "column": 1,
                    "offset": 0
                  },
                  "end": {
                    "line": 1,
                    "column": 45,
                    "offset": 44
                  }
                }
              }
            },
            {
              "name": "xOffset",
              "lineNumber": 3,
              "description": {
                "type": "root",
                "children": [
                  {
                    "type": "paragraph",
                    "children": [
                      {
                        "type": "text",
                        "value": "{number} X displacement, normalized 0-1",
                        "position": {
                          "start": {
                            "line": 1,
                            "column": 1,
                            "offset": 0
                          },
                          "end": {
                            "line": 1,
                            "column": 40,
                            "offset": 39
                          },
                          "indent": []
                        }
                      }
                    ],
                    "position": {
                      "start": {
                        "line": 1,
                        "column": 1,
                        "offset": 0
                      },
                      "end": {
                        "line": 1,
                        "column": 40,
                        "offset": 39
                      },
                      "indent": []
                    }
                  }
                ],
                "position": {
                  "start": {
                    "line": 1,
                    "column": 1,
                    "offset": 0
                  },
                  "end": {
                    "line": 1,
                    "column": 40,
                    "offset": 39
                  }
                }
              }
            },
            {
              "name": "yOffset",
              "lineNumber": 4,
              "description": {
                "type": "root",
                "children": [
                  {
                    "type": "paragraph",
                    "children": [
                      {
                        "type": "text",
                        "value": "{number} Y displacement, normalized 0-1",
                        "position": {
                          "start": {
                            "line": 1,
                            "column": 1,
                            "offset": 0
                          },
                          "end": {
                            "line": 1,
                            "column": 40,
                            "offset": 39
                          },
                          "indent": []
                        }
                      }
                    ],
                    "position": {
                      "start": {
                        "line": 1,
                        "column": 1,
                        "offset": 0
                      },
                      "end": {
                        "line": 1,
                        "column": 40,
                        "offset": 39
                      },
                      "indent": []
                    }
                  }
                ],
                "position": {
                  "start": {
                    "line": 1,
                    "column": 1,
                    "offset": 0
                  },
                  "end": {
                    "line": 1,
                    "column": 40,
                    "offset": 39
                  }
                }
              }
            }
          ],
          "name": "adjustPoint",
          "kind": "function",
          "memberof": "Envelope",
          "scope": "instance",
          "members": {
            "instance": [],
            "static": [],
            "events": []
          },
          "path": [
            {
              "name": "Envelope",
              "kind": "class"
            },
            {
              "name": "adjustPoint",
              "kind": "function",
              "scope": "instance"
            }
          ],
          "namespace": "Envelope#adjustPoint"
        },
        {
          "description": {
            "type": "root",
            "children": [
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "Remove a breakpoint from the envelope.",
                    "position": {
                      "start": {
                        "line": 1,
                        "column": 1,
                        "offset": 0
                      },
                      "end": {
                        "line": 1,
                        "column": 39,
                        "offset": 38
                      },
                      "indent": []
                    }
                  }
                ],
                "position": {
                  "start": {
                    "line": 1,
                    "column": 1,
                    "offset": 0
                  },
                  "end": {
                    "line": 1,
                    "column": 39,
                    "offset": 38
                  },
                  "indent": []
                }
              }
            ],
            "position": {
              "start": {
                "line": 1,
                "column": 1,
                "offset": 0
              },
              "end": {
                "line": 1,
                "column": 39,
                "offset": 38
              }
            }
          },
          "tags": [
            {
              "title": "param",
              "description": "{number} Index of the breakpoint to remove",
              "lineNumber": 2,
              "type": null,
              "name": "index"
            }
          ],
          "loc": {
            "start": {
              "line": 435,
              "column": 2
            },
            "end": {
              "line": 438,
              "column": 4
            }
          },
          "context": {
            "loc": {
              "start": {
                "line": 439,
                "column": 2
              },
              "end": {
                "line": 444,
                "column": 3
              }
            },
            "file": "/Library/WebServer/Documents/mt/lib/interfaces/envelope.js"
          },
          "params": [
            {
              "name": "index",
              "lineNumber": 2,
              "description": {
                "type": "root",
                "children": [
                  {
                    "type": "paragraph",
                    "children": [
                      {
                        "type": "text",
                        "value": "{number} Index of the breakpoint to remove",
                        "position": {
                          "start": {
                            "line": 1,
                            "column": 1,
                            "offset": 0
                          },
                          "end": {
                            "line": 1,
                            "column": 43,
                            "offset": 42
                          },
                          "indent": []
                        }
                      }
                    ],
                    "position": {
                      "start": {
                        "line": 1,
                        "column": 1,
                        "offset": 0
                      },
                      "end": {
                        "line": 1,
                        "column": 43,
                        "offset": 42
                      },
                      "indent": []
                    }
                  }
                ],
                "position": {
                  "start": {
                    "line": 1,
                    "column": 1,
                    "offset": 0
                  },
                  "end": {
                    "line": 1,
                    "column": 43,
                    "offset": 42
                  }
                }
              }
            }
          ],
          "name": "destroyPoint",
          "kind": "function",
          "memberof": "Envelope",
          "scope": "instance",
          "members": {
            "instance": [],
            "static": [],
            "events": []
          },
          "path": [
            {
              "name": "Envelope",
              "kind": "class"
            },
            {
              "name": "destroyPoint",
              "kind": "function",
              "scope": "instance"
            }
          ],
          "namespace": "Envelope#destroyPoint"
        },
        {
          "description": {
            "type": "root",
            "children": [
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "Remove all existing breakpoints and add an entirely new set of breakpoints.",
                    "position": {
                      "start": {
                        "line": 1,
                        "column": 1,
                        "offset": 0
                      },
                      "end": {
                        "line": 1,
                        "column": 76,
                        "offset": 75
                      },
                      "indent": []
                    }
                  }
                ],
                "position": {
                  "start": {
                    "line": 1,
                    "column": 1,
                    "offset": 0
                  },
                  "end": {
                    "line": 1,
                    "column": 76,
                    "offset": 75
                  },
                  "indent": []
                }
              }
            ],
            "position": {
              "start": {
                "line": 1,
                "column": 1,
                "offset": 0
              },
              "end": {
                "line": 1,
                "column": 76,
                "offset": 75
              }
            }
          },
          "tags": [
            {
              "title": "param",
              "description": "{array} An array of objects with x/y properties (normalized 0-1). Each object in the array specifices the x/y location of a new breakpoint to be added.",
              "lineNumber": 2,
              "type": null,
              "name": "allPoints"
            }
          ],
          "loc": {
            "start": {
              "line": 447,
              "column": 2
            },
            "end": {
              "line": 450,
              "column": 4
            }
          },
          "context": {
            "loc": {
              "start": {
                "line": 451,
                "column": 2
              },
              "end": {
                "line": 461,
                "column": 3
              }
            },
            "file": "/Library/WebServer/Documents/mt/lib/interfaces/envelope.js"
          },
          "params": [
            {
              "name": "allPoints",
              "lineNumber": 2,
              "description": {
                "type": "root",
                "children": [
                  {
                    "type": "paragraph",
                    "children": [
                      {
                        "type": "text",
                        "value": "{array} An array of objects with x/y properties (normalized 0-1). Each object in the array specifices the x/y location of a new breakpoint to be added.",
                        "position": {
                          "start": {
                            "line": 1,
                            "column": 1,
                            "offset": 0
                          },
                          "end": {
                            "line": 1,
                            "column": 152,
                            "offset": 151
                          },
                          "indent": []
                        }
                      }
                    ],
                    "position": {
                      "start": {
                        "line": 1,
                        "column": 1,
                        "offset": 0
                      },
                      "end": {
                        "line": 1,
                        "column": 152,
                        "offset": 151
                      },
                      "indent": []
                    }
                  }
                ],
                "position": {
                  "start": {
                    "line": 1,
                    "column": 1,
                    "offset": 0
                  },
                  "end": {
                    "line": 1,
                    "column": 152,
                    "offset": 151
                  }
                }
              }
            }
          ],
          "name": "setPoints",
          "kind": "function",
          "memberof": "Envelope",
          "scope": "instance",
          "members": {
            "instance": [],
            "static": [],
            "events": []
          },
          "path": [
            {
              "name": "Envelope",
              "kind": "class"
            },
            {
              "name": "setPoints",
              "kind": "function",
              "scope": "instance"
            }
          ],
          "namespace": "Envelope#setPoints"
        }
      ],
      "static": [],
      "events": []
    },
    "path": [
      {
        "name": "Envelope",
        "kind": "class"
      }
    ],
    "namespace": "Envelope"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "Stereo decibel meter",
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 21,
                  "offset": 20
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 21,
              "offset": 20
            },
            "indent": []
          }
        }
      ],
      "position": {
        "start": {
          "line": 1,
          "column": 1,
          "offset": 0
        },
        "end": {
          "line": 1,
          "column": 21,
          "offset": 20
        }
      }
    },
    "tags": [
      {
        "title": "description",
        "description": "Stereo decibel meter",
        "lineNumber": 3
      },
      {
        "title": "demo",
        "description": "<span nexus-ui=\"meter\"></span>",
        "lineNumber": 5
      },
      {
        "title": "example",
        "description": "var meter = new Nexus.Meter('#target')",
        "lineNumber": 7
      },
      {
        "title": "example",
        "description": "var meter = new Nexus.Meter('#target',{\n  size: [75,75]\n})",
        "lineNumber": 10
      },
      {
        "title": "output",
        "description": "&nbsp;\nNo events",
        "lineNumber": 15
      }
    ],
    "loc": {
      "start": {
        "line": 8,
        "column": 0
      },
      "end": {
        "line": 27,
        "column": 2
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 29,
          "column": 0
        },
        "end": {
          "line": 196,
          "column": 1
        }
      },
      "file": "/Library/WebServer/Documents/mt/lib/interfaces/meter.js"
    },
    "examples": [
      {
        "description": "var meter = new Nexus.Meter('#target')"
      },
      {
        "description": "var meter = new Nexus.Meter('#target',{\n  size: [75,75]\n})"
      }
    ],
    "name": "Meter",
    "augments": [
      {
        "title": "augments",
        "name": "Interface"
      }
    ],
    "kind": "class",
    "members": {
      "instance": [
        {
          "description": {
            "type": "root",
            "children": [
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "Equivalent to \"patching in\" an audio node to visualize.",
                    "position": {
                      "start": {
                        "line": 1,
                        "column": 1,
                        "offset": 0
                      },
                      "end": {
                        "line": 1,
                        "column": 56,
                        "offset": 55
                      },
                      "indent": []
                    }
                  }
                ],
                "position": {
                  "start": {
                    "line": 1,
                    "column": 1,
                    "offset": 0
                  },
                  "end": {
                    "line": 1,
                    "column": 56,
                    "offset": 55
                  },
                  "indent": []
                }
              }
            ],
            "position": {
              "start": {
                "line": 1,
                "column": 1,
                "offset": 0
              },
              "end": {
                "line": 1,
                "column": 56,
                "offset": 55
              }
            }
          },
          "tags": [
            {
              "title": "param",
              "description": "{AudioNode} The audio node to visualize",
              "lineNumber": 2,
              "type": null,
              "name": "node"
            },
            {
              "title": "param",
              "description": "{number} (optional) The number of channels in the source node to watch. If not specified, the interface will look for a .channelCount property on the input node. If it does not exist, the interface will default to 1 channel.",
              "lineNumber": 3,
              "type": null,
              "name": "channels"
            }
          ],
          "loc": {
            "start": {
              "line": 148,
              "column": 2
            },
            "end": {
              "line": 152,
              "column": 4
            }
          },
          "context": {
            "loc": {
              "start": {
                "line": 154,
                "column": 2
              },
              "end": {
                "line": 173,
                "column": 3
              }
            },
            "file": "/Library/WebServer/Documents/mt/lib/interfaces/meter.js"
          },
          "params": [
            {
              "name": "node",
              "lineNumber": 2,
              "description": {
                "type": "root",
                "children": [
                  {
                    "type": "paragraph",
                    "children": [
                      {
                        "type": "text",
                        "value": "{AudioNode} The audio node to visualize",
                        "position": {
                          "start": {
                            "line": 1,
                            "column": 1,
                            "offset": 0
                          },
                          "end": {
                            "line": 1,
                            "column": 40,
                            "offset": 39
                          },
                          "indent": []
                        }
                      }
                    ],
                    "position": {
                      "start": {
                        "line": 1,
                        "column": 1,
                        "offset": 0
                      },
                      "end": {
                        "line": 1,
                        "column": 40,
                        "offset": 39
                      },
                      "indent": []
                    }
                  }
                ],
                "position": {
                  "start": {
                    "line": 1,
                    "column": 1,
                    "offset": 0
                  },
                  "end": {
                    "line": 1,
                    "column": 40,
                    "offset": 39
                  }
                }
              }
            },
            {
              "name": "channels",
              "lineNumber": 3,
              "description": {
                "type": "root",
                "children": [
                  {
                    "type": "paragraph",
                    "children": [
                      {
                        "type": "text",
                        "value": "{number} (optional) The number of channels in the source node to watch. If not specified, the interface will look for a .channelCount property on the input node. If it does not exist, the interface will default to 1 channel.",
                        "position": {
                          "start": {
                            "line": 1,
                            "column": 1,
                            "offset": 0
                          },
                          "end": {
                            "line": 1,
                            "column": 225,
                            "offset": 224
                          },
                          "indent": []
                        }
                      }
                    ],
                    "position": {
                      "start": {
                        "line": 1,
                        "column": 1,
                        "offset": 0
                      },
                      "end": {
                        "line": 1,
                        "column": 225,
                        "offset": 224
                      },
                      "indent": []
                    }
                  }
                ],
                "position": {
                  "start": {
                    "line": 1,
                    "column": 1,
                    "offset": 0
                  },
                  "end": {
                    "line": 1,
                    "column": 225,
                    "offset": 224
                  }
                }
              }
            }
          ],
          "name": "connect",
          "kind": "function",
          "memberof": "Meter",
          "scope": "instance",
          "members": {
            "instance": [],
            "static": [],
            "events": []
          },
          "path": [
            {
              "name": "Meter",
              "kind": "class"
            },
            {
              "name": "connect",
              "kind": "function",
              "scope": "instance"
            }
          ],
          "namespace": "Meter#connect"
        },
        {
          "description": {
            "type": "root",
            "children": [
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "Stop visualizing the source node and disconnect it.",
                    "position": {
                      "start": {
                        "line": 1,
                        "column": 1,
                        "offset": 0
                      },
                      "end": {
                        "line": 1,
                        "column": 52,
                        "offset": 51
                      },
                      "indent": []
                    }
                  }
                ],
                "position": {
                  "start": {
                    "line": 1,
                    "column": 1,
                    "offset": 0
                  },
                  "end": {
                    "line": 1,
                    "column": 52,
                    "offset": 51
                  },
                  "indent": []
                }
              }
            ],
            "position": {
              "start": {
                "line": 1,
                "column": 1,
                "offset": 0
              },
              "end": {
                "line": 1,
                "column": 52,
                "offset": 51
              }
            }
          },
          "tags": [],
          "loc": {
            "start": {
              "line": 175,
              "column": 2
            },
            "end": {
              "line": 177,
              "column": 4
            }
          },
          "context": {
            "loc": {
              "start": {
                "line": 178,
                "column": 2
              },
              "end": {
                "line": 185,
                "column": 3
              }
            },
            "file": "/Library/WebServer/Documents/mt/lib/interfaces/meter.js"
          },
          "name": "disconnect",
          "kind": "function",
          "memberof": "Meter",
          "scope": "instance",
          "members": {
            "instance": [],
            "static": [],
            "events": []
          },
          "path": [
            {
              "name": "Meter",
              "kind": "class"
            },
            {
              "name": "disconnect",
              "kind": "function",
              "scope": "instance"
            }
          ],
          "namespace": "Meter#disconnect"
        }
      ],
      "static": [],
      "events": []
    },
    "path": [
      {
        "name": "Meter",
        "kind": "class"
      }
    ],
    "namespace": "Meter"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "Multislider",
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 12,
                  "offset": 11
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 12,
              "offset": 11
            },
            "indent": []
          }
        }
      ],
      "position": {
        "start": {
          "line": 1,
          "column": 1,
          "offset": 0
        },
        "end": {
          "line": 1,
          "column": 12,
          "offset": 11
        }
      }
    },
    "tags": [
      {
        "title": "description",
        "description": "Multislider",
        "lineNumber": 3
      },
      {
        "title": "demo",
        "description": "<span nexus-ui=\"multislider\"></span>",
        "lineNumber": 5
      },
      {
        "title": "example",
        "description": "var multislider = new Nexus.Multislider('#target')",
        "lineNumber": 7
      },
      {
        "title": "example",
        "description": "var multislider = new Nexus.Multislider('#target',{\n 'size': [200,100],\n 'numberOfSliders': 5,\n 'min': 0,\n 'max': 1,\n 'step': 0,\n 'values': [0.7,0.7,0.7,0.7,0.7]\n})",
        "lineNumber": 10
      },
      {
        "title": "output",
        "description": "change\nFires any time the interface's value changes. <br>\nThe event data an object containing <i>index</i> and <i>value</i> properties",
        "lineNumber": 20
      },
      {
        "title": "outputexample",
        "description": "multislider.on('change',function(v) {\n  console.log(v);\n})",
        "lineNumber": 25
      }
    ],
    "loc": {
      "start": {
        "line": 131,
        "column": 0
      },
      "end": {
        "line": 161,
        "column": 2
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 169,
          "column": 0
        },
        "end": {
          "line": 429,
          "column": 1
        }
      },
      "file": "/Library/WebServer/Documents/mt/lib/interfaces/multislider.js"
    },
    "examples": [
      {
        "description": "var multislider = new Nexus.Multislider('#target')"
      },
      {
        "description": "var multislider = new Nexus.Multislider('#target',{\n 'size': [200,100],\n 'numberOfSliders': 5,\n 'min': 0,\n 'max': 1,\n 'step': 0,\n 'values': [0.7,0.7,0.7,0.7,0.7]\n})"
      }
    ],
    "name": "Multislider",
    "augments": [
      {
        "title": "augments",
        "name": "Interface"
      }
    ],
    "kind": "class",
    "members": {
      "instance": [
        {
          "description": {
            "type": "root",
            "children": [
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "Get or set the number of sliders",
                    "position": {
                      "start": {
                        "line": 1,
                        "column": 1,
                        "offset": 0
                      },
                      "end": {
                        "line": 1,
                        "column": 33,
                        "offset": 32
                      },
                      "indent": []
                    }
                  }
                ],
                "position": {
                  "start": {
                    "line": 1,
                    "column": 1,
                    "offset": 0
                  },
                  "end": {
                    "line": 1,
                    "column": 33,
                    "offset": 32
                  },
                  "indent": []
                }
              }
            ],
            "position": {
              "start": {
                "line": 1,
                "column": 1,
                "offset": 0
              },
              "end": {
                "line": 1,
                "column": 33,
                "offset": 32
              }
            }
          },
          "tags": [
            {
              "title": "type",
              "description": null,
              "lineNumber": 2,
              "type": {
                "type": "NameExpression",
                "name": "Number"
              }
            }
          ],
          "loc": {
            "start": {
              "line": 332,
              "column": 2
            },
            "end": {
              "line": 335,
              "column": 4
            }
          },
          "context": {
            "loc": {
              "start": {
                "line": 336,
                "column": 2
              },
              "end": {
                "line": 338,
                "column": 3
              }
            },
            "file": "/Library/WebServer/Documents/mt/lib/interfaces/multislider.js"
          },
          "name": "numberOfSliders",
          "kind": "member",
          "memberof": "Multislider",
          "scope": "instance",
          "members": {
            "instance": [],
            "static": [],
            "events": []
          },
          "path": [
            {
              "name": "Multislider",
              "kind": "class"
            },
            {
              "name": "numberOfSliders",
              "kind": "member",
              "scope": "instance"
            }
          ],
          "namespace": "Multislider#numberOfSliders"
        },
        {
          "description": {
            "type": "root",
            "children": [
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "Lower limit of the multislider's output range",
                    "position": {
                      "start": {
                        "line": 1,
                        "column": 1,
                        "offset": 0
                      },
                      "end": {
                        "line": 1,
                        "column": 46,
                        "offset": 45
                      },
                      "indent": []
                    }
                  }
                ],
                "position": {
                  "start": {
                    "line": 1,
                    "column": 1,
                    "offset": 0
                  },
                  "end": {
                    "line": 1,
                    "column": 46,
                    "offset": 45
                  },
                  "indent": []
                }
              }
            ],
            "position": {
              "start": {
                "line": 1,
                "column": 1,
                "offset": 0
              },
              "end": {
                "line": 1,
                "column": 46,
                "offset": 45
              }
            }
          },
          "tags": [
            {
              "title": "type",
              "description": null,
              "lineNumber": 2,
              "type": {
                "type": "NameExpression",
                "name": "number"
              }
            },
            {
              "title": "example",
              "description": "multislider.min = 1000;",
              "lineNumber": 3
            }
          ],
          "loc": {
            "start": {
              "line": 354,
              "column": 2
            },
            "end": {
              "line": 358,
              "column": 4
            }
          },
          "context": {
            "loc": {
              "start": {
                "line": 359,
                "column": 2
              },
              "end": {
                "line": 361,
                "column": 3
              }
            },
            "file": "/Library/WebServer/Documents/mt/lib/interfaces/multislider.js"
          },
          "examples": [
            {
              "description": "multislider.min = 1000;"
            }
          ],
          "name": "min",
          "kind": "member",
          "memberof": "Multislider",
          "scope": "instance",
          "members": {
            "instance": [],
            "static": [],
            "events": []
          },
          "path": [
            {
              "name": "Multislider",
              "kind": "class"
            },
            {
              "name": "min",
              "kind": "member",
              "scope": "instance"
            }
          ],
          "namespace": "Multislider#min"
        },
        {
          "description": {
            "type": "root",
            "children": [
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "Upper limit of the multislider's output range",
                    "position": {
                      "start": {
                        "line": 1,
                        "column": 1,
                        "offset": 0
                      },
                      "end": {
                        "line": 1,
                        "column": 46,
                        "offset": 45
                      },
                      "indent": []
                    }
                  }
                ],
                "position": {
                  "start": {
                    "line": 1,
                    "column": 1,
                    "offset": 0
                  },
                  "end": {
                    "line": 1,
                    "column": 46,
                    "offset": 45
                  },
                  "indent": []
                }
              }
            ],
            "position": {
              "start": {
                "line": 1,
                "column": 1,
                "offset": 0
              },
              "end": {
                "line": 1,
                "column": 46,
                "offset": 45
              }
            }
          },
          "tags": [
            {
              "title": "type",
              "description": null,
              "lineNumber": 2,
              "type": {
                "type": "NameExpression",
                "name": "number"
              }
            },
            {
              "title": "example",
              "description": "multislider.max = 1000;",
              "lineNumber": 3
            }
          ],
          "loc": {
            "start": {
              "line": 368,
              "column": 2
            },
            "end": {
              "line": 372,
              "column": 4
            }
          },
          "context": {
            "loc": {
              "start": {
                "line": 373,
                "column": 2
              },
              "end": {
                "line": 375,
                "column": 3
              }
            },
            "file": "/Library/WebServer/Documents/mt/lib/interfaces/multislider.js"
          },
          "examples": [
            {
              "description": "multislider.max = 1000;"
            }
          ],
          "name": "max",
          "kind": "member",
          "memberof": "Multislider",
          "scope": "instance",
          "members": {
            "instance": [],
            "static": [],
            "events": []
          },
          "path": [
            {
              "name": "Multislider",
              "kind": "class"
            },
            {
              "name": "max",
              "kind": "member",
              "scope": "instance"
            }
          ],
          "namespace": "Multislider#max"
        },
        {
          "description": {
            "type": "root",
            "children": [
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "The increment that the multislider's value changes by.",
                    "position": {
                      "start": {
                        "line": 1,
                        "column": 1,
                        "offset": 0
                      },
                      "end": {
                        "line": 1,
                        "column": 55,
                        "offset": 54
                      },
                      "indent": []
                    }
                  }
                ],
                "position": {
                  "start": {
                    "line": 1,
                    "column": 1,
                    "offset": 0
                  },
                  "end": {
                    "line": 1,
                    "column": 55,
                    "offset": 54
                  },
                  "indent": []
                }
              }
            ],
            "position": {
              "start": {
                "line": 1,
                "column": 1,
                "offset": 0
              },
              "end": {
                "line": 1,
                "column": 55,
                "offset": 54
              }
            }
          },
          "tags": [
            {
              "title": "type",
              "description": null,
              "lineNumber": 2,
              "type": {
                "type": "NameExpression",
                "name": "number"
              }
            },
            {
              "title": "example",
              "description": "multislider.step = 5;",
              "lineNumber": 3
            }
          ],
          "loc": {
            "start": {
              "line": 382,
              "column": 2
            },
            "end": {
              "line": 386,
              "column": 4
            }
          },
          "context": {
            "loc": {
              "start": {
                "line": 387,
                "column": 2
              },
              "end": {
                "line": 389,
                "column": 3
              }
            },
            "file": "/Library/WebServer/Documents/mt/lib/interfaces/multislider.js"
          },
          "examples": [
            {
              "description": "multislider.step = 5;"
            }
          ],
          "name": "step",
          "kind": "member",
          "memberof": "Multislider",
          "scope": "instance",
          "members": {
            "instance": [],
            "static": [],
            "events": []
          },
          "path": [
            {
              "name": "Multislider",
              "kind": "class"
            },
            {
              "name": "step",
              "kind": "member",
              "scope": "instance"
            }
          ],
          "namespace": "Multislider#step"
        },
        {
          "description": {
            "type": "root",
            "children": [
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "Set the value of an individual slider",
                    "position": {
                      "start": {
                        "line": 1,
                        "column": 1,
                        "offset": 0
                      },
                      "end": {
                        "line": 1,
                        "column": 38,
                        "offset": 37
                      },
                      "indent": []
                    }
                  }
                ],
                "position": {
                  "start": {
                    "line": 1,
                    "column": 1,
                    "offset": 0
                  },
                  "end": {
                    "line": 1,
                    "column": 38,
                    "offset": 37
                  },
                  "indent": []
                }
              }
            ],
            "position": {
              "start": {
                "line": 1,
                "column": 1,
                "offset": 0
              },
              "end": {
                "line": 1,
                "column": 38,
                "offset": 37
              }
            }
          },
          "tags": [
            {
              "title": "param",
              "description": "{number} Slider index",
              "lineNumber": 2,
              "type": null,
              "name": "index"
            },
            {
              "title": "param",
              "description": "{number} New slider value",
              "lineNumber": 3,
              "type": null,
              "name": "value"
            },
            {
              "title": "example",
              "description": "// Set the first slider to value 0.5\nmultislider.setSlider(0,0.5)",
              "lineNumber": 4
            }
          ],
          "loc": {
            "start": {
              "line": 396,
              "column": 2
            },
            "end": {
              "line": 403,
              "column": 4
            }
          },
          "context": {
            "loc": {
              "start": {
                "line": 404,
                "column": 2
              },
              "end": {
                "line": 410,
                "column": 3
              }
            },
            "file": "/Library/WebServer/Documents/mt/lib/interfaces/multislider.js"
          },
          "params": [
            {
              "name": "index",
              "lineNumber": 2,
              "description": {
                "type": "root",
                "children": [
                  {
                    "type": "paragraph",
                    "children": [
                      {
                        "type": "text",
                        "value": "{number} Slider index",
                        "position": {
                          "start": {
                            "line": 1,
                            "column": 1,
                            "offset": 0
                          },
                          "end": {
                            "line": 1,
                            "column": 22,
                            "offset": 21
                          },
                          "indent": []
                        }
                      }
                    ],
                    "position": {
                      "start": {
                        "line": 1,
                        "column": 1,
                        "offset": 0
                      },
                      "end": {
                        "line": 1,
                        "column": 22,
                        "offset": 21
                      },
                      "indent": []
                    }
                  }
                ],
                "position": {
                  "start": {
                    "line": 1,
                    "column": 1,
                    "offset": 0
                  },
                  "end": {
                    "line": 1,
                    "column": 22,
                    "offset": 21
                  }
                }
              }
            },
            {
              "name": "value",
              "lineNumber": 3,
              "description": {
                "type": "root",
                "children": [
                  {
                    "type": "paragraph",
                    "children": [
                      {
                        "type": "text",
                        "value": "{number} New slider value",
                        "position": {
                          "start": {
                            "line": 1,
                            "column": 1,
                            "offset": 0
                          },
                          "end": {
                            "line": 1,
                            "column": 26,
                            "offset": 25
                          },
                          "indent": []
                        }
                      }
                    ],
                    "position": {
                      "start": {
                        "line": 1,
                        "column": 1,
                        "offset": 0
                      },
                      "end": {
                        "line": 1,
                        "column": 26,
                        "offset": 25
                      },
                      "indent": []
                    }
                  }
                ],
                "position": {
                  "start": {
                    "line": 1,
                    "column": 1,
                    "offset": 0
                  },
                  "end": {
                    "line": 1,
                    "column": 26,
                    "offset": 25
                  }
                }
              }
            }
          ],
          "examples": [
            {
              "description": "// Set the first slider to value 0.5\nmultislider.setSlider(0,0.5)"
            }
          ],
          "name": "setSlider",
          "kind": "function",
          "memberof": "Multislider",
          "scope": "instance",
          "members": {
            "instance": [],
            "static": [],
            "events": []
          },
          "path": [
            {
              "name": "Multislider",
              "kind": "class"
            },
            {
              "name": "setSlider",
              "kind": "function",
              "scope": "instance"
            }
          ],
          "namespace": "Multislider#setSlider"
        },
        {
          "description": {
            "type": "root",
            "children": [
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "Set the value of all sliders at once. If the size of the input array does not match the current number of sliders, the value array will repeat until all sliders have been set. I.e. an input array of length 1 will set all sliders to that value.",
                    "position": {
                      "start": {
                        "line": 1,
                        "column": 1,
                        "offset": 0
                      },
                      "end": {
                        "line": 1,
                        "column": 244,
                        "offset": 243
                      },
                      "indent": []
                    }
                  }
                ],
                "position": {
                  "start": {
                    "line": 1,
                    "column": 1,
                    "offset": 0
                  },
                  "end": {
                    "line": 1,
                    "column": 244,
                    "offset": 243
                  },
                  "indent": []
                }
              }
            ],
            "position": {
              "start": {
                "line": 1,
                "column": 1,
                "offset": 0
              },
              "end": {
                "line": 1,
                "column": 244,
                "offset": 243
              }
            }
          },
          "tags": [
            {
              "title": "param",
              "description": "{Array} All slider values",
              "lineNumber": 2,
              "type": null,
              "name": "values"
            },
            {
              "title": "example",
              "description": "multislider.setAllSliders([0.2,0.3,0.4,0.5,0.6])",
              "lineNumber": 3
            }
          ],
          "loc": {
            "start": {
              "line": 412,
              "column": 2
            },
            "end": {
              "line": 417,
              "column": 4
            }
          },
          "context": {
            "loc": {
              "start": {
                "line": 418,
                "column": 2
              },
              "end": {
                "line": 427,
                "column": 3
              }
            },
            "file": "/Library/WebServer/Documents/mt/lib/interfaces/multislider.js"
          },
          "params": [
            {
              "name": "values",
              "lineNumber": 2,
              "description": {
                "type": "root",
                "children": [
                  {
                    "type": "paragraph",
                    "children": [
                      {
                        "type": "text",
                        "value": "{Array} All slider values",
                        "position": {
                          "start": {
                            "line": 1,
                            "column": 1,
                            "offset": 0
                          },
                          "end": {
                            "line": 1,
                            "column": 26,
                            "offset": 25
                          },
                          "indent": []
                        }
                      }
                    ],
                    "position": {
                      "start": {
                        "line": 1,
                        "column": 1,
                        "offset": 0
                      },
                      "end": {
                        "line": 1,
                        "column": 26,
                        "offset": 25
                      },
                      "indent": []
                    }
                  }
                ],
                "position": {
                  "start": {
                    "line": 1,
                    "column": 1,
                    "offset": 0
                  },
                  "end": {
                    "line": 1,
                    "column": 26,
                    "offset": 25
                  }
                }
              }
            }
          ],
          "examples": [
            {
              "description": "multislider.setAllSliders([0.2,0.3,0.4,0.5,0.6])"
            }
          ],
          "name": "setAllSliders",
          "kind": "function",
          "memberof": "Multislider",
          "scope": "instance",
          "members": {
            "instance": [],
            "static": [],
            "events": []
          },
          "path": [
            {
              "name": "Multislider",
              "kind": "class"
            },
            {
              "name": "setAllSliders",
              "kind": "function",
              "scope": "instance"
            }
          ],
          "namespace": "Multislider#setAllSliders"
        }
      ],
      "static": [],
      "events": []
    },
    "path": [
      {
        "name": "Multislider",
        "kind": "class"
      }
    ],
    "namespace": "Multislider"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "Number interface which is controllable by dragging or typing.",
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 62,
                  "offset": 61
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 62,
              "offset": 61
            },
            "indent": []
          }
        }
      ],
      "position": {
        "start": {
          "line": 1,
          "column": 1,
          "offset": 0
        },
        "end": {
          "line": 1,
          "column": 62,
          "offset": 61
        }
      }
    },
    "tags": [
      {
        "title": "description",
        "description": "Number interface which is controllable by dragging or typing.",
        "lineNumber": 3
      },
      {
        "title": "demo",
        "description": "<span nexus-ui=\"number\"></span>",
        "lineNumber": 5
      },
      {
        "title": "example",
        "description": "var number = new Nexus.Number('#target')",
        "lineNumber": 7
      },
      {
        "title": "example",
        "description": "var number = new Nexus.Number('#target',{\n  'size': [60,30],\n  'value': 0,\n  'min': 0,\n  'max': 10,\n  'step': 1\n})",
        "lineNumber": 10
      },
      {
        "title": "output",
        "description": "change\nFires any time the interface's value changes. <br>\nThe event data is the number value of the interface.",
        "lineNumber": 19
      },
      {
        "title": "outputexample",
        "description": "number.on('change',function(v) {\n  console.log(v);\n})",
        "lineNumber": 24
      }
    ],
    "loc": {
      "start": {
        "line": 7,
        "column": 0
      },
      "end": {
        "line": 37,
        "column": 2
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 40,
          "column": 0
        },
        "end": {
          "line": 265,
          "column": 1
        }
      },
      "file": "/Library/WebServer/Documents/mt/lib/interfaces/number.js"
    },
    "examples": [
      {
        "description": "var number = new Nexus.Number('#target')"
      },
      {
        "description": "var number = new Nexus.Number('#target',{\n  'size': [60,30],\n  'value': 0,\n  'min': 0,\n  'max': 10,\n  'step': 1\n})"
      }
    ],
    "name": "Number",
    "augments": [
      {
        "title": "augments",
        "name": "Interface"
      }
    ],
    "kind": "class",
    "members": {
      "instance": [
        {
          "description": {
            "type": "root",
            "children": [
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "Connect this number interface to a dial or slider",
                    "position": {
                      "start": {
                        "line": 1,
                        "column": 1,
                        "offset": 0
                      },
                      "end": {
                        "line": 1,
                        "column": 50,
                        "offset": 49
                      },
                      "indent": []
                    }
                  }
                ],
                "position": {
                  "start": {
                    "line": 1,
                    "column": 1,
                    "offset": 0
                  },
                  "end": {
                    "line": 1,
                    "column": 50,
                    "offset": 49
                  },
                  "indent": []
                }
              }
            ],
            "position": {
              "start": {
                "line": 1,
                "column": 1,
                "offset": 0
              },
              "end": {
                "line": 1,
                "column": 50,
                "offset": 49
              }
            }
          },
          "tags": [
            {
              "title": "param",
              "description": "Element to connect to.",
              "lineNumber": 2,
              "type": {
                "type": "NameExpression",
                "name": "Interface"
              },
              "name": "element"
            },
            {
              "title": "example",
              "description": "number.link(slider)",
              "lineNumber": 3
            }
          ],
          "loc": {
            "start": {
              "line": 184,
              "column": 2
            },
            "end": {
              "line": 188,
              "column": 4
            }
          },
          "context": {
            "loc": {
              "start": {
                "line": 189,
                "column": 2
              },
              "end": {
                "line": 208,
                "column": 3
              }
            },
            "file": "/Library/WebServer/Documents/mt/lib/interfaces/number.js"
          },
          "params": [
            {
              "name": "element",
              "lineNumber": 2,
              "description": {
                "type": "root",
                "children": [
                  {
                    "type": "paragraph",
                    "children": [
                      {
                        "type": "text",
                        "value": "Element to connect to.",
                        "position": {
                          "start": {
                            "line": 1,
                            "column": 1,
                            "offset": 0
                          },
                          "end": {
                            "line": 1,
                            "column": 23,
                            "offset": 22
                          },
                          "indent": []
                        }
                      }
                    ],
                    "position": {
                      "start": {
                        "line": 1,
                        "column": 1,
                        "offset": 0
                      },
                      "end": {
                        "line": 1,
                        "column": 23,
                        "offset": 22
                      },
                      "indent": []
                    }
                  }
                ],
                "position": {
                  "start": {
                    "line": 1,
                    "column": 1,
                    "offset": 0
                  },
                  "end": {
                    "line": 1,
                    "column": 23,
                    "offset": 22
                  }
                }
              },
              "type": {
                "type": "NameExpression",
                "name": "Interface"
              }
            },
            {
              "title": "param",
              "name": "destination",
              "lineNumber": 189
            }
          ],
          "examples": [
            {
              "description": "number.link(slider)"
            }
          ],
          "name": "link",
          "kind": "function",
          "memberof": "Number",
          "scope": "instance",
          "members": {
            "instance": [],
            "static": [],
            "events": []
          },
          "path": [
            {
              "name": "Number",
              "kind": "class"
            },
            {
              "name": "link",
              "kind": "function",
              "scope": "instance"
            }
          ],
          "namespace": "Number#link"
        },
        {
          "description": {
            "type": "root",
            "children": [
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "The interface's current value. If set manually, will update the interface and trigger the output event.",
                    "position": {
                      "start": {
                        "line": 1,
                        "column": 1,
                        "offset": 0
                      },
                      "end": {
                        "line": 1,
                        "column": 104,
                        "offset": 103
                      },
                      "indent": []
                    }
                  }
                ],
                "position": {
                  "start": {
                    "line": 1,
                    "column": 1,
                    "offset": 0
                  },
                  "end": {
                    "line": 1,
                    "column": 104,
                    "offset": 103
                  },
                  "indent": []
                }
              }
            ],
            "position": {
              "start": {
                "line": 1,
                "column": 1,
                "offset": 0
              },
              "end": {
                "line": 1,
                "column": 104,
                "offset": 103
              }
            }
          },
          "tags": [
            {
              "title": "type",
              "description": null,
              "lineNumber": 2,
              "type": {
                "type": "NameExpression",
                "name": "number"
              }
            },
            {
              "title": "example",
              "description": "number.value = 10;",
              "lineNumber": 3
            }
          ],
          "loc": {
            "start": {
              "line": 215,
              "column": 2
            },
            "end": {
              "line": 219,
              "column": 4
            }
          },
          "context": {
            "loc": {
              "start": {
                "line": 220,
                "column": 2
              },
              "end": {
                "line": 222,
                "column": 3
              }
            },
            "file": "/Library/WebServer/Documents/mt/lib/interfaces/number.js"
          },
          "examples": [
            {
              "description": "number.value = 10;"
            }
          ],
          "name": "value",
          "kind": "member",
          "memberof": "Number",
          "scope": "instance",
          "members": {
            "instance": [],
            "static": [],
            "events": []
          },
          "path": [
            {
              "name": "Number",
              "kind": "class"
            },
            {
              "name": "value",
              "kind": "member",
              "scope": "instance"
            }
          ],
          "namespace": "Number#value"
        },
        {
          "description": {
            "type": "root",
            "children": [
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "Lower limit of the number's output range",
                    "position": {
                      "start": {
                        "line": 1,
                        "column": 1,
                        "offset": 0
                      },
                      "end": {
                        "line": 1,
                        "column": 41,
                        "offset": 40
                      },
                      "indent": []
                    }
                  }
                ],
                "position": {
                  "start": {
                    "line": 1,
                    "column": 1,
                    "offset": 0
                  },
                  "end": {
                    "line": 1,
                    "column": 41,
                    "offset": 40
                  },
                  "indent": []
                }
              }
            ],
            "position": {
              "start": {
                "line": 1,
                "column": 1,
                "offset": 0
              },
              "end": {
                "line": 1,
                "column": 41,
                "offset": 40
              }
            }
          },
          "tags": [
            {
              "title": "type",
              "description": null,
              "lineNumber": 2,
              "type": {
                "type": "NameExpression",
                "name": "number"
              }
            },
            {
              "title": "example",
              "description": "number.min = 1000;",
              "lineNumber": 3
            }
          ],
          "loc": {
            "start": {
              "line": 229,
              "column": 2
            },
            "end": {
              "line": 233,
              "column": 4
            }
          },
          "context": {
            "loc": {
              "start": {
                "line": 234,
                "column": 2
              },
              "end": {
                "line": 236,
                "column": 3
              }
            },
            "file": "/Library/WebServer/Documents/mt/lib/interfaces/number.js"
          },
          "examples": [
            {
              "description": "number.min = 1000;"
            }
          ],
          "name": "min",
          "kind": "member",
          "memberof": "Number",
          "scope": "instance",
          "members": {
            "instance": [],
            "static": [],
            "events": []
          },
          "path": [
            {
              "name": "Number",
              "kind": "class"
            },
            {
              "name": "min",
              "kind": "member",
              "scope": "instance"
            }
          ],
          "namespace": "Number#min"
        },
        {
          "description": {
            "type": "root",
            "children": [
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "Upper limit of the number's output range",
                    "position": {
                      "start": {
                        "line": 1,
                        "column": 1,
                        "offset": 0
                      },
                      "end": {
                        "line": 1,
                        "column": 41,
                        "offset": 40
                      },
                      "indent": []
                    }
                  }
                ],
                "position": {
                  "start": {
                    "line": 1,
                    "column": 1,
                    "offset": 0
                  },
                  "end": {
                    "line": 1,
                    "column": 41,
                    "offset": 40
                  },
                  "indent": []
                }
              }
            ],
            "position": {
              "start": {
                "line": 1,
                "column": 1,
                "offset": 0
              },
              "end": {
                "line": 1,
                "column": 41,
                "offset": 40
              }
            }
          },
          "tags": [
            {
              "title": "type",
              "description": null,
              "lineNumber": 2,
              "type": {
                "type": "NameExpression",
                "name": "number"
              }
            },
            {
              "title": "example",
              "description": "number.max = 1000;",
              "lineNumber": 3
            }
          ],
          "loc": {
            "start": {
              "line": 241,
              "column": 2
            },
            "end": {
              "line": 245,
              "column": 4
            }
          },
          "context": {
            "loc": {
              "start": {
                "line": 246,
                "column": 2
              },
              "end": {
                "line": 248,
                "column": 3
              }
            },
            "file": "/Library/WebServer/Documents/mt/lib/interfaces/number.js"
          },
          "examples": [
            {
              "description": "number.max = 1000;"
            }
          ],
          "name": "max",
          "kind": "member",
          "memberof": "Number",
          "scope": "instance",
          "members": {
            "instance": [],
            "static": [],
            "events": []
          },
          "path": [
            {
              "name": "Number",
              "kind": "class"
            },
            {
              "name": "max",
              "kind": "member",
              "scope": "instance"
            }
          ],
          "namespace": "Number#max"
        },
        {
          "description": {
            "type": "root",
            "children": [
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "The increment that the number's value changes by.",
                    "position": {
                      "start": {
                        "line": 1,
                        "column": 1,
                        "offset": 0
                      },
                      "end": {
                        "line": 1,
                        "column": 50,
                        "offset": 49
                      },
                      "indent": []
                    }
                  }
                ],
                "position": {
                  "start": {
                    "line": 1,
                    "column": 1,
                    "offset": 0
                  },
                  "end": {
                    "line": 1,
                    "column": 50,
                    "offset": 49
                  },
                  "indent": []
                }
              }
            ],
            "position": {
              "start": {
                "line": 1,
                "column": 1,
                "offset": 0
              },
              "end": {
                "line": 1,
                "column": 50,
                "offset": 49
              }
            }
          },
          "tags": [
            {
              "title": "type",
              "description": null,
              "lineNumber": 2,
              "type": {
                "type": "NameExpression",
                "name": "number"
              }
            },
            {
              "title": "example",
              "description": "number.step = 5;",
              "lineNumber": 3
            }
          ],
          "loc": {
            "start": {
              "line": 253,
              "column": 2
            },
            "end": {
              "line": 257,
              "column": 4
            }
          },
          "context": {
            "loc": {
              "start": {
                "line": 258,
                "column": 2
              },
              "end": {
                "line": 260,
                "column": 3
              }
            },
            "file": "/Library/WebServer/Documents/mt/lib/interfaces/number.js"
          },
          "examples": [
            {
              "description": "number.step = 5;"
            }
          ],
          "name": "step",
          "kind": "member",
          "memberof": "Number",
          "scope": "instance",
          "members": {
            "instance": [],
            "static": [],
            "events": []
          },
          "path": [
            {
              "name": "Number",
              "kind": "class"
            },
            {
              "name": "step",
              "kind": "member",
              "scope": "instance"
            }
          ],
          "namespace": "Number#step"
        }
      ],
      "static": [],
      "events": []
    },
    "path": [
      {
        "name": "Number",
        "kind": "class"
      }
    ],
    "namespace": "Number"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "Visualizes a waveform's stream of values.",
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 42,
                  "offset": 41
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 42,
              "offset": 41
            },
            "indent": []
          }
        }
      ],
      "position": {
        "start": {
          "line": 1,
          "column": 1,
          "offset": 0
        },
        "end": {
          "line": 1,
          "column": 42,
          "offset": 41
        }
      }
    },
    "tags": [
      {
        "title": "description",
        "description": "Visualizes a waveform's stream of values.",
        "lineNumber": 3
      },
      {
        "title": "demo",
        "description": "<span nexus-ui=\"oscilloscope\"></span>",
        "lineNumber": 5
      },
      {
        "title": "example",
        "description": "var oscilloscope = new Nexus.Oscilloscope('#target')",
        "lineNumber": 7
      },
      {
        "title": "example",
        "description": "var oscilloscope = new Nexus.Oscilloscope('#target',{\n  'size': [300,150]\n})",
        "lineNumber": 10
      },
      {
        "title": "output",
        "description": "&nbsp;\nNo events",
        "lineNumber": 15
      }
    ],
    "loc": {
      "start": {
        "line": 6,
        "column": 0
      },
      "end": {
        "line": 25,
        "column": 2
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 27,
          "column": 0
        },
        "end": {
          "line": 148,
          "column": 1
        }
      },
      "file": "/Library/WebServer/Documents/mt/lib/interfaces/oscilloscope.js"
    },
    "examples": [
      {
        "description": "var oscilloscope = new Nexus.Oscilloscope('#target')"
      },
      {
        "description": "var oscilloscope = new Nexus.Oscilloscope('#target',{\n  'size': [300,150]\n})"
      }
    ],
    "name": "Oscilloscope",
    "augments": [
      {
        "title": "augments",
        "name": "Interface"
      }
    ],
    "kind": "class",
    "members": {
      "instance": [
        {
          "description": {
            "type": "root",
            "children": [
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "Equivalent to \"patching in\" an audio node to visualize.",
                    "position": {
                      "start": {
                        "line": 1,
                        "column": 1,
                        "offset": 0
                      },
                      "end": {
                        "line": 1,
                        "column": 56,
                        "offset": 55
                      },
                      "indent": []
                    }
                  }
                ],
                "position": {
                  "start": {
                    "line": 1,
                    "column": 1,
                    "offset": 0
                  },
                  "end": {
                    "line": 1,
                    "column": 56,
                    "offset": 55
                  },
                  "indent": []
                }
              }
            ],
            "position": {
              "start": {
                "line": 1,
                "column": 1,
                "offset": 0
              },
              "end": {
                "line": 1,
                "column": 56,
                "offset": 55
              }
            }
          },
          "tags": [
            {
              "title": "param",
              "description": "{AudioNode} The audio node to visualize",
              "lineNumber": 2,
              "type": null,
              "name": "node"
            }
          ],
          "loc": {
            "start": {
              "line": 111,
              "column": 2
            },
            "end": {
              "line": 114,
              "column": 4
            }
          },
          "context": {
            "loc": {
              "start": {
                "line": 116,
                "column": 2
              },
              "end": {
                "line": 126,
                "column": 3
              }
            },
            "file": "/Library/WebServer/Documents/mt/lib/interfaces/oscilloscope.js"
          },
          "params": [
            {
              "name": "node",
              "lineNumber": 2,
              "description": {
                "type": "root",
                "children": [
                  {
                    "type": "paragraph",
                    "children": [
                      {
                        "type": "text",
                        "value": "{AudioNode} The audio node to visualize",
                        "position": {
                          "start": {
                            "line": 1,
                            "column": 1,
                            "offset": 0
                          },
                          "end": {
                            "line": 1,
                            "column": 40,
                            "offset": 39
                          },
                          "indent": []
                        }
                      }
                    ],
                    "position": {
                      "start": {
                        "line": 1,
                        "column": 1,
                        "offset": 0
                      },
                      "end": {
                        "line": 1,
                        "column": 40,
                        "offset": 39
                      },
                      "indent": []
                    }
                  }
                ],
                "position": {
                  "start": {
                    "line": 1,
                    "column": 1,
                    "offset": 0
                  },
                  "end": {
                    "line": 1,
                    "column": 40,
                    "offset": 39
                  }
                }
              }
            }
          ],
          "name": "connect",
          "kind": "function",
          "memberof": "Oscilloscope",
          "scope": "instance",
          "members": {
            "instance": [],
            "static": [],
            "events": []
          },
          "path": [
            {
              "name": "Oscilloscope",
              "kind": "class"
            },
            {
              "name": "connect",
              "kind": "function",
              "scope": "instance"
            }
          ],
          "namespace": "Oscilloscope#connect"
        },
        {
          "description": {
            "type": "root",
            "children": [
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "Stop visualizing the source node and disconnect it.",
                    "position": {
                      "start": {
                        "line": 1,
                        "column": 1,
                        "offset": 0
                      },
                      "end": {
                        "line": 1,
                        "column": 52,
                        "offset": 51
                      },
                      "indent": []
                    }
                  }
                ],
                "position": {
                  "start": {
                    "line": 1,
                    "column": 1,
                    "offset": 0
                  },
                  "end": {
                    "line": 1,
                    "column": 52,
                    "offset": 51
                  },
                  "indent": []
                }
              }
            ],
            "position": {
              "start": {
                "line": 1,
                "column": 1,
                "offset": 0
              },
              "end": {
                "line": 1,
                "column": 52,
                "offset": 51
              }
            }
          },
          "tags": [],
          "loc": {
            "start": {
              "line": 128,
              "column": 2
            },
            "end": {
              "line": 130,
              "column": 4
            }
          },
          "context": {
            "loc": {
              "start": {
                "line": 131,
                "column": 2
              },
              "end": {
                "line": 137,
                "column": 3
              }
            },
            "file": "/Library/WebServer/Documents/mt/lib/interfaces/oscilloscope.js"
          },
          "name": "disconnect",
          "kind": "function",
          "memberof": "Oscilloscope",
          "scope": "instance",
          "members": {
            "instance": [],
            "static": [],
            "events": []
          },
          "path": [
            {
              "name": "Oscilloscope",
              "kind": "class"
            },
            {
              "name": "disconnect",
              "kind": "function",
              "scope": "instance"
            }
          ],
          "namespace": "Oscilloscope#disconnect"
        }
      ],
      "static": [],
      "events": []
    },
    "path": [
      {
        "name": "Oscilloscope",
        "kind": "class"
      }
    ],
    "namespace": "Oscilloscope"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "Stereo crossfader.",
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 19,
                  "offset": 18
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 19,
              "offset": 18
            },
            "indent": []
          }
        }
      ],
      "position": {
        "start": {
          "line": 1,
          "column": 1,
          "offset": 0
        },
        "end": {
          "line": 1,
          "column": 19,
          "offset": 18
        }
      }
    },
    "tags": [
      {
        "title": "description",
        "description": "Stereo crossfader.",
        "lineNumber": 3
      },
      {
        "title": "demo",
        "description": "<span nexus-ui=\"pan\"></span>",
        "lineNumber": 5
      },
      {
        "title": "example",
        "description": "var pan = new Nexus.Pan('#target')",
        "lineNumber": 7
      },
      {
        "title": "output",
        "description": "change\nFires any time the interface's value changes. <br>\nThe event data is an object containing the interface's <i>value</i> (-1 to 1), as well as <i>L</i> and <i>R</i> amplitude values (0-1) for left and right speakers, calculated by a square-root crossfade algorithm.",
        "lineNumber": 10
      },
      {
        "title": "outputexample",
        "description": "pan.on('change',function(v) {\n  console.log(v);\n})",
        "lineNumber": 15
      }
    ],
    "loc": {
      "start": {
        "line": 9,
        "column": 0
      },
      "end": {
        "line": 30,
        "column": 2
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 32,
          "column": 0
        },
        "end": {
          "line": 217,
          "column": 1
        }
      },
      "file": "/Library/WebServer/Documents/mt/lib/interfaces/pan.js"
    },
    "examples": [
      {
        "description": "var pan = new Nexus.Pan('#target')"
      }
    ],
    "name": "Pan",
    "augments": [
      {
        "title": "augments",
        "name": "Interface"
      }
    ],
    "kind": "class",
    "members": {
      "instance": [
        {
          "description": {
            "type": "root",
            "children": [
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "The position of crossfader, from -1 (left) to 1 (right). Setting this value updates the interface and triggers the output event.",
                    "position": {
                      "start": {
                        "line": 1,
                        "column": 1,
                        "offset": 0
                      },
                      "end": {
                        "line": 1,
                        "column": 129,
                        "offset": 128
                      },
                      "indent": []
                    }
                  }
                ],
                "position": {
                  "start": {
                    "line": 1,
                    "column": 1,
                    "offset": 0
                  },
                  "end": {
                    "line": 1,
                    "column": 129,
                    "offset": 128
                  },
                  "indent": []
                }
              }
            ],
            "position": {
              "start": {
                "line": 1,
                "column": 1,
                "offset": 0
              },
              "end": {
                "line": 1,
                "column": 129,
                "offset": 128
              }
            }
          },
          "tags": [
            {
              "title": "type",
              "description": null,
              "lineNumber": 2,
              "type": {
                "type": "NameExpression",
                "name": "number"
              }
            }
          ],
          "loc": {
            "start": {
              "line": 194,
              "column": 2
            },
            "end": {
              "line": 197,
              "column": 4
            }
          },
          "context": {
            "loc": {
              "start": {
                "line": 198,
                "column": 2
              },
              "end": {
                "line": 200,
                "column": 3
              }
            },
            "file": "/Library/WebServer/Documents/mt/lib/interfaces/pan.js"
          },
          "name": "value",
          "kind": "member",
          "memberof": "Pan",
          "scope": "instance",
          "members": {
            "instance": [],
            "static": [],
            "events": []
          },
          "path": [
            {
              "name": "Pan",
              "kind": "class"
            },
            {
              "name": "value",
              "kind": "member",
              "scope": "instance"
            }
          ],
          "namespace": "Pan#value"
        }
      ],
      "static": [],
      "events": []
    },
    "path": [
      {
        "name": "Pan",
        "kind": "class"
      }
    ],
    "namespace": "Pan"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "Interface for moving a sound around an array of speakers. Speaker locations can be customized. The interface calculates the amplitude that should be sent to each speaker, according to different panning modes.",
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 209,
                  "offset": 208
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 209,
              "offset": 208
            },
            "indent": []
          }
        }
      ],
      "position": {
        "start": {
          "line": 1,
          "column": 1,
          "offset": 0
        },
        "end": {
          "line": 1,
          "column": 209,
          "offset": 208
        }
      }
    },
    "tags": [
      {
        "title": "description",
        "description": "Interface for moving a sound around an array of speakers. Speaker locations can be customized. The interface calculates the amplitude that should be sent to each speaker, according to different panning modes.",
        "lineNumber": 3
      },
      {
        "title": "demo",
        "description": "<span nexus-ui=\"pan2D\"></span>",
        "lineNumber": 5
      },
      {
        "title": "example",
        "description": "var pan2d = new Nexus.Pan2d('#target')",
        "lineNumber": 7
      },
      {
        "title": "example",
        "description": "var pan2d = new Nexus.Pan2D('#target',{\n  'size': [200,200],\n  'range': 0.5,  // panning radius of each speaker\n  'mode': 'absolute',   // 'absolute' or 'relative'\n  'speakers': [  // the speaker [x,y] positions\n      [0.5,0.2],\n      [0.75,0.25],\n      [0.8,0.5],\n      [0.75,0.75],\n      [0.5,0.8],\n      [0.25,0.75]\n      [0.2,0.5],\n      [0.25,0.25]\n  ]\n})",
        "lineNumber": 10
      },
      {
        "title": "output",
        "description": "change\nFires any time the \"source\" node's position changes. <br>\nThe event data is an array of the amplitudes (0-1), representing the level of each speaker (as calculated by its distance to the audio source).",
        "lineNumber": 27
      },
      {
        "title": "outputexample",
        "description": "pan2d.on('change',function(v) {\n  console.log(v);\n})",
        "lineNumber": 32
      }
    ],
    "loc": {
      "start": {
        "line": 9,
        "column": 0
      },
      "end": {
        "line": 46,
        "column": 2
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 48,
          "column": 0
        },
        "end": {
          "line": 275,
          "column": 1
        }
      },
      "file": "/Library/WebServer/Documents/mt/lib/interfaces/pan2d.js"
    },
    "examples": [
      {
        "description": "var pan2d = new Nexus.Pan2d('#target')"
      },
      {
        "description": "var pan2d = new Nexus.Pan2D('#target',{\n  'size': [200,200],\n  'range': 0.5,  // panning radius of each speaker\n  'mode': 'absolute',   // 'absolute' or 'relative'\n  'speakers': [  // the speaker [x,y] positions\n      [0.5,0.2],\n      [0.75,0.25],\n      [0.8,0.5],\n      [0.75,0.75],\n      [0.5,0.8],\n      [0.25,0.75]\n      [0.2,0.5],\n      [0.25,0.25]\n  ]\n})"
      }
    ],
    "name": "Pan2D",
    "augments": [
      {
        "title": "augments",
        "name": "Interface"
      }
    ],
    "kind": "class",
    "members": {
      "instance": [
        {
          "description": {
            "type": "root",
            "children": [
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "Absolute or relative mouse interaction. In \"absolute\" mode, the source node will jump to your mouse position on mouse click. In \"relative\" mode, it does not.",
                    "position": {
                      "start": {
                        "line": 1,
                        "column": 1,
                        "offset": 0
                      },
                      "end": {
                        "line": 1,
                        "column": 158,
                        "offset": 157
                      },
                      "indent": []
                    }
                  }
                ],
                "position": {
                  "start": {
                    "line": 1,
                    "column": 1,
                    "offset": 0
                  },
                  "end": {
                    "line": 1,
                    "column": 158,
                    "offset": 157
                  },
                  "indent": []
                }
              }
            ],
            "position": {
              "start": {
                "line": 1,
                "column": 1,
                "offset": 0
              },
              "end": {
                "line": 1,
                "column": 158,
                "offset": 157
              }
            }
          },
          "tags": [],
          "loc": {
            "start": {
              "line": 77,
              "column": 4
            },
            "end": {
              "line": 79,
              "column": 6
            }
          },
          "context": {
            "loc": {
              "start": {
                "line": 80,
                "column": 4
              },
              "end": {
                "line": 80,
                "column": 35
              }
            },
            "file": "/Library/WebServer/Documents/mt/lib/interfaces/pan2d.js"
          },
          "name": "mode",
          "memberof": "Pan2D",
          "scope": "instance",
          "members": {
            "instance": [],
            "static": [],
            "events": []
          },
          "path": [
            {
              "name": "Pan2D",
              "kind": "class"
            },
            {
              "name": "mode",
              "scope": "instance"
            }
          ],
          "namespace": "Pan2D#mode"
        },
        {
          "description": {
            "type": "root",
            "children": [
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "An array of speaker locations. Update this with .moveSpeaker() or .moveAllSpeakers()",
                    "position": {
                      "start": {
                        "line": 1,
                        "column": 1,
                        "offset": 0
                      },
                      "end": {
                        "line": 1,
                        "column": 85,
                        "offset": 84
                      },
                      "indent": []
                    }
                  }
                ],
                "position": {
                  "start": {
                    "line": 1,
                    "column": 1,
                    "offset": 0
                  },
                  "end": {
                    "line": 1,
                    "column": 85,
                    "offset": 84
                  },
                  "indent": []
                }
              }
            ],
            "position": {
              "start": {
                "line": 1,
                "column": 1,
                "offset": 0
              },
              "end": {
                "line": 1,
                "column": 85,
                "offset": 84
              }
            }
          },
          "tags": [],
          "loc": {
            "start": {
              "line": 89,
              "column": 4
            },
            "end": {
              "line": 91,
              "column": 6
            }
          },
          "context": {
            "loc": {
              "start": {
                "line": 92,
                "column": 4
              },
              "end": {
                "line": 92,
                "column": 43
              }
            },
            "file": "/Library/WebServer/Documents/mt/lib/interfaces/pan2d.js"
          },
          "name": "speakers",
          "memberof": "Pan2D",
          "scope": "instance",
          "members": {
            "instance": [],
            "static": [],
            "events": []
          },
          "path": [
            {
              "name": "Pan2D",
              "kind": "class"
            },
            {
              "name": "speakers",
              "scope": "instance"
            }
          ],
          "namespace": "Pan2D#speakers"
        },
        {
          "description": {
            "type": "root",
            "children": [
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "Rewrite: The maximum distance from a speaker that the source node can be for it to be heard from that speaker. A low range (0.1) will result in speakers only playing when the sound is very close it. Default is 0.5 (half of the interface).",
                    "position": {
                      "start": {
                        "line": 1,
                        "column": 1,
                        "offset": 0
                      },
                      "end": {
                        "line": 1,
                        "column": 239,
                        "offset": 238
                      },
                      "indent": []
                    }
                  }
                ],
                "position": {
                  "start": {
                    "line": 1,
                    "column": 1,
                    "offset": 0
                  },
                  "end": {
                    "line": 1,
                    "column": 239,
                    "offset": 238
                  },
                  "indent": []
                }
              }
            ],
            "position": {
              "start": {
                "line": 1,
                "column": 1,
                "offset": 0
              },
              "end": {
                "line": 1,
                "column": 239,
                "offset": 238
              }
            }
          },
          "tags": [],
          "loc": {
            "start": {
              "line": 94,
              "column": 4
            },
            "end": {
              "line": 96,
              "column": 6
            }
          },
          "context": {
            "loc": {
              "start": {
                "line": 97,
                "column": 4
              },
              "end": {
                "line": 97,
                "column": 37
              }
            },
            "file": "/Library/WebServer/Documents/mt/lib/interfaces/pan2d.js"
          },
          "name": "range",
          "memberof": "Pan2D",
          "scope": "instance",
          "members": {
            "instance": [],
            "static": [],
            "events": []
          },
          "path": [
            {
              "name": "Pan2D",
              "kind": "class"
            },
            {
              "name": "range",
              "scope": "instance"
            }
          ],
          "namespace": "Pan2D#range"
        },
        {
          "description": {
            "type": "root",
            "children": [
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "The current levels for each speaker. This is calculated when a source node or speaker node is moved through interaction or programatically.",
                    "position": {
                      "start": {
                        "line": 1,
                        "column": 1,
                        "offset": 0
                      },
                      "end": {
                        "line": 1,
                        "column": 140,
                        "offset": 139
                      },
                      "indent": []
                    }
                  }
                ],
                "position": {
                  "start": {
                    "line": 1,
                    "column": 1,
                    "offset": 0
                  },
                  "end": {
                    "line": 1,
                    "column": 140,
                    "offset": 139
                  },
                  "indent": []
                }
              }
            ],
            "position": {
              "start": {
                "line": 1,
                "column": 1,
                "offset": 0
              },
              "end": {
                "line": 1,
                "column": 140,
                "offset": 139
              }
            }
          },
          "tags": [],
          "loc": {
            "start": {
              "line": 99,
              "column": 4
            },
            "end": {
              "line": 101,
              "column": 6
            }
          },
          "context": {
            "loc": {
              "start": {
                "line": 102,
                "column": 4
              },
              "end": {
                "line": 102,
                "column": 21
              }
            },
            "file": "/Library/WebServer/Documents/mt/lib/interfaces/pan2d.js"
          },
          "name": "levels",
          "memberof": "Pan2D",
          "scope": "instance",
          "members": {
            "instance": [],
            "static": [],
            "events": []
          },
          "path": [
            {
              "name": "Pan2D",
              "kind": "class"
            },
            {
              "name": "levels",
              "scope": "instance"
            }
          ],
          "namespace": "Pan2D#levels"
        },
        {
          "description": {
            "type": "root",
            "children": [
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "Move the audio source node and trigger the output event.",
                    "position": {
                      "start": {
                        "line": 1,
                        "column": 1,
                        "offset": 0
                      },
                      "end": {
                        "line": 1,
                        "column": 57,
                        "offset": 56
                      },
                      "indent": []
                    }
                  }
                ],
                "position": {
                  "start": {
                    "line": 1,
                    "column": 1,
                    "offset": 0
                  },
                  "end": {
                    "line": 1,
                    "column": 57,
                    "offset": 56
                  },
                  "indent": []
                }
              }
            ],
            "position": {
              "start": {
                "line": 1,
                "column": 1,
                "offset": 0
              },
              "end": {
                "line": 1,
                "column": 57,
                "offset": 56
              }
            }
          },
          "tags": [
            {
              "title": "param",
              "description": "{number} New x location, normalized 0-1",
              "lineNumber": 2,
              "type": null,
              "name": "x"
            },
            {
              "title": "param",
              "description": "{number} New y location, normalized 0-1",
              "lineNumber": 3,
              "type": null,
              "name": "y"
            }
          ],
          "loc": {
            "start": {
              "line": 232,
              "column": 2
            },
            "end": {
              "line": 236,
              "column": 4
            }
          },
          "context": {
            "loc": {
              "start": {
                "line": 237,
                "column": 2
              },
              "end": {
                "line": 247,
                "column": 3
              }
            },
            "file": "/Library/WebServer/Documents/mt/lib/interfaces/pan2d.js"
          },
          "params": [
            {
              "name": "x",
              "lineNumber": 2,
              "description": {
                "type": "root",
                "children": [
                  {
                    "type": "paragraph",
                    "children": [
                      {
                        "type": "text",
                        "value": "{number} New x location, normalized 0-1",
                        "position": {
                          "start": {
                            "line": 1,
                            "column": 1,
                            "offset": 0
                          },
                          "end": {
                            "line": 1,
                            "column": 40,
                            "offset": 39
                          },
                          "indent": []
                        }
                      }
                    ],
                    "position": {
                      "start": {
                        "line": 1,
                        "column": 1,
                        "offset": 0
                      },
                      "end": {
                        "line": 1,
                        "column": 40,
                        "offset": 39
                      },
                      "indent": []
                    }
                  }
                ],
                "position": {
                  "start": {
                    "line": 1,
                    "column": 1,
                    "offset": 0
                  },
                  "end": {
                    "line": 1,
                    "column": 40,
                    "offset": 39
                  }
                }
              }
            },
            {
              "name": "y",
              "lineNumber": 3,
              "description": {
                "type": "root",
                "children": [
                  {
                    "type": "paragraph",
                    "children": [
                      {
                        "type": "text",
                        "value": "{number} New y location, normalized 0-1",
                        "position": {
                          "start": {
                            "line": 1,
                            "column": 1,
                            "offset": 0
                          },
                          "end": {
                            "line": 1,
                            "column": 40,
                            "offset": 39
                          },
                          "indent": []
                        }
                      }
                    ],
                    "position": {
                      "start": {
                        "line": 1,
                        "column": 1,
                        "offset": 0
                      },
                      "end": {
                        "line": 1,
                        "column": 40,
                        "offset": 39
                      },
                      "indent": []
                    }
                  }
                ],
                "position": {
                  "start": {
                    "line": 1,
                    "column": 1,
                    "offset": 0
                  },
                  "end": {
                    "line": 1,
                    "column": 40,
                    "offset": 39
                  }
                }
              }
            }
          ],
          "name": "moveSource",
          "kind": "function",
          "memberof": "Pan2D",
          "scope": "instance",
          "members": {
            "instance": [],
            "static": [],
            "events": []
          },
          "path": [
            {
              "name": "Pan2D",
              "kind": "class"
            },
            {
              "name": "moveSource",
              "kind": "function",
              "scope": "instance"
            }
          ],
          "namespace": "Pan2D#moveSource"
        },
        {
          "description": {
            "type": "root",
            "children": [
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "Move a speaker node and trigger the output event.",
                    "position": {
                      "start": {
                        "line": 1,
                        "column": 1,
                        "offset": 0
                      },
                      "end": {
                        "line": 1,
                        "column": 50,
                        "offset": 49
                      },
                      "indent": []
                    }
                  }
                ],
                "position": {
                  "start": {
                    "line": 1,
                    "column": 1,
                    "offset": 0
                  },
                  "end": {
                    "line": 1,
                    "column": 50,
                    "offset": 49
                  },
                  "indent": []
                }
              }
            ],
            "position": {
              "start": {
                "line": 1,
                "column": 1,
                "offset": 0
              },
              "end": {
                "line": 1,
                "column": 50,
                "offset": 49
              }
            }
          },
          "tags": [
            {
              "title": "param",
              "description": "{number} Index of the speaker to move",
              "lineNumber": 2,
              "type": null,
              "name": "index"
            },
            {
              "title": "param",
              "description": "{number} New x location, normalized 0-1",
              "lineNumber": 3,
              "type": null,
              "name": "x"
            },
            {
              "title": "param",
              "description": "{number} New y location, normalized 0-1",
              "lineNumber": 4,
              "type": null,
              "name": "y"
            }
          ],
          "loc": {
            "start": {
              "line": 249,
              "column": 2
            },
            "end": {
              "line": 254,
              "column": 4
            }
          },
          "context": {
            "loc": {
              "start": {
                "line": 255,
                "column": 2
              },
              "end": {
                "line": 264,
                "column": 3
              }
            },
            "file": "/Library/WebServer/Documents/mt/lib/interfaces/pan2d.js"
          },
          "params": [
            {
              "name": "index",
              "lineNumber": 2,
              "description": {
                "type": "root",
                "children": [
                  {
                    "type": "paragraph",
                    "children": [
                      {
                        "type": "text",
                        "value": "{number} Index of the speaker to move",
                        "position": {
                          "start": {
                            "line": 1,
                            "column": 1,
                            "offset": 0
                          },
                          "end": {
                            "line": 1,
                            "column": 38,
                            "offset": 37
                          },
                          "indent": []
                        }
                      }
                    ],
                    "position": {
                      "start": {
                        "line": 1,
                        "column": 1,
                        "offset": 0
                      },
                      "end": {
                        "line": 1,
                        "column": 38,
                        "offset": 37
                      },
                      "indent": []
                    }
                  }
                ],
                "position": {
                  "start": {
                    "line": 1,
                    "column": 1,
                    "offset": 0
                  },
                  "end": {
                    "line": 1,
                    "column": 38,
                    "offset": 37
                  }
                }
              }
            },
            {
              "name": "x",
              "lineNumber": 3,
              "description": {
                "type": "root",
                "children": [
                  {
                    "type": "paragraph",
                    "children": [
                      {
                        "type": "text",
                        "value": "{number} New x location, normalized 0-1",
                        "position": {
                          "start": {
                            "line": 1,
                            "column": 1,
                            "offset": 0
                          },
                          "end": {
                            "line": 1,
                            "column": 40,
                            "offset": 39
                          },
                          "indent": []
                        }
                      }
                    ],
                    "position": {
                      "start": {
                        "line": 1,
                        "column": 1,
                        "offset": 0
                      },
                      "end": {
                        "line": 1,
                        "column": 40,
                        "offset": 39
                      },
                      "indent": []
                    }
                  }
                ],
                "position": {
                  "start": {
                    "line": 1,
                    "column": 1,
                    "offset": 0
                  },
                  "end": {
                    "line": 1,
                    "column": 40,
                    "offset": 39
                  }
                }
              }
            },
            {
              "name": "y",
              "lineNumber": 4,
              "description": {
                "type": "root",
                "children": [
                  {
                    "type": "paragraph",
                    "children": [
                      {
                        "type": "text",
                        "value": "{number} New y location, normalized 0-1",
                        "position": {
                          "start": {
                            "line": 1,
                            "column": 1,
                            "offset": 0
                          },
                          "end": {
                            "line": 1,
                            "column": 40,
                            "offset": 39
                          },
                          "indent": []
                        }
                      }
                    ],
                    "position": {
                      "start": {
                        "line": 1,
                        "column": 1,
                        "offset": 0
                      },
                      "end": {
                        "line": 1,
                        "column": 40,
                        "offset": 39
                      },
                      "indent": []
                    }
                  }
                ],
                "position": {
                  "start": {
                    "line": 1,
                    "column": 1,
                    "offset": 0
                  },
                  "end": {
                    "line": 1,
                    "column": 40,
                    "offset": 39
                  }
                }
              }
            }
          ],
          "name": "moveSpeaker",
          "kind": "function",
          "memberof": "Pan2D",
          "scope": "instance",
          "members": {
            "instance": [],
            "static": [],
            "events": []
          },
          "path": [
            {
              "name": "Pan2D",
              "kind": "class"
            },
            {
              "name": "moveSpeaker",
              "kind": "function",
              "scope": "instance"
            }
          ],
          "namespace": "Pan2D#moveSpeaker"
        }
      ],
      "static": [],
      "events": []
    },
    "path": [
      {
        "name": "Pan2D",
        "kind": "class"
      }
    ],
    "namespace": "Pan2D"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "Set all speaker locations",
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 26,
                  "offset": 25
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 26,
              "offset": 25
            },
            "indent": []
          }
        }
      ],
      "position": {
        "start": {
          "line": 1,
          "column": 1,
          "offset": 0
        },
        "end": {
          "line": 1,
          "column": 26,
          "offset": 25
        }
      }
    },
    "tags": [
      {
        "title": "param",
        "description": "{Array} Array of speaker locations. Each item in the array should be an array of normalized x and y coordinates.\n\nsetSpeakers(locations) {\n\n}",
        "lineNumber": 2,
        "type": null,
        "name": "locations"
      }
    ],
    "loc": {
      "start": {
        "line": 266,
        "column": 2
      },
      "end": {
        "line": 273,
        "column": 4
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 255,
          "column": 2
        },
        "end": {
          "line": 264,
          "column": 3
        }
      },
      "file": "/Library/WebServer/Documents/mt/lib/interfaces/pan2d.js"
    },
    "params": [
      {
        "name": "locations",
        "lineNumber": 2,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "{Array} Array of speaker locations. Each item in the array should be an array of normalized x and y coordinates.",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 113,
                      "offset": 112
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 113,
                  "offset": 112
                },
                "indent": []
              }
            },
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "setSpeakers(locations) {",
                  "position": {
                    "start": {
                      "line": 3,
                      "column": 1,
                      "offset": 114
                    },
                    "end": {
                      "line": 3,
                      "column": 25,
                      "offset": 138
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 3,
                  "column": 1,
                  "offset": 114
                },
                "end": {
                  "line": 3,
                  "column": 25,
                  "offset": 138
                },
                "indent": []
              }
            },
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "}",
                  "position": {
                    "start": {
                      "line": 5,
                      "column": 1,
                      "offset": 140
                    },
                    "end": {
                      "line": 5,
                      "column": 2,
                      "offset": 141
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 5,
                  "column": 1,
                  "offset": 140
                },
                "end": {
                  "line": 5,
                  "column": 2,
                  "offset": 141
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 5,
              "column": 2,
              "offset": 141
            }
          }
        }
      }
    ],
    "members": {
      "instance": [],
      "static": [],
      "events": []
    },
    "path": [
      {}
    ],
    "namespace": "undefined"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "Piano keyboard interface",
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 25,
                  "offset": 24
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 25,
              "offset": 24
            },
            "indent": []
          }
        }
      ],
      "position": {
        "start": {
          "line": 1,
          "column": 1,
          "offset": 0
        },
        "end": {
          "line": 1,
          "column": 25,
          "offset": 24
        }
      }
    },
    "tags": [
      {
        "title": "description",
        "description": "Piano keyboard interface",
        "lineNumber": 3
      },
      {
        "title": "demo",
        "description": "<div nexus-ui=\"piano\"></div>",
        "lineNumber": 5
      },
      {
        "title": "example",
        "description": "var piano = new Nexus.Piano('#target')",
        "lineNumber": 7
      },
      {
        "title": "example",
        "description": "var piano = new Nexus.Piano('#target',{\n    'size': [500,150],\n    'mode': 'button',  // 'button', 'toggle', or 'impulse'\n    'lowNote': 24,\n    'highNote': 60\n})",
        "lineNumber": 10
      },
      {
        "title": "output",
        "description": "change\nFires any time a new key is pressed or released <br>\nThe event data is an object containing <i>note</i> and <i>state</i> properties.",
        "lineNumber": 18
      },
      {
        "title": "outputexample",
        "description": "piano.on('change',function(v) {\n  console.log(v);\n})",
        "lineNumber": 23
      }
    ],
    "loc": {
      "start": {
        "line": 132,
        "column": 0
      },
      "end": {
        "line": 160,
        "column": 2
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 162,
          "column": 0
        },
        "end": {
          "line": 416,
          "column": 1
        }
      },
      "file": "/Library/WebServer/Documents/mt/lib/interfaces/piano.js"
    },
    "examples": [
      {
        "description": "var piano = new Nexus.Piano('#target')"
      },
      {
        "description": "var piano = new Nexus.Piano('#target',{\n    'size': [500,150],\n    'mode': 'button',  // 'button', 'toggle', or 'impulse'\n    'lowNote': 24,\n    'highNote': 60\n})"
      }
    ],
    "name": "Piano",
    "augments": [
      {
        "title": "augments",
        "name": "Interface"
      }
    ],
    "kind": "class",
    "members": {
      "instance": [
        {
          "description": {
            "type": "root",
            "children": [
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "Define the pitch range (lowest and highest note) of the piano keyboard.",
                    "position": {
                      "start": {
                        "line": 1,
                        "column": 1,
                        "offset": 0
                      },
                      "end": {
                        "line": 1,
                        "column": 72,
                        "offset": 71
                      },
                      "indent": []
                    }
                  }
                ],
                "position": {
                  "start": {
                    "line": 1,
                    "column": 1,
                    "offset": 0
                  },
                  "end": {
                    "line": 1,
                    "column": 72,
                    "offset": 71
                  },
                  "indent": []
                }
              }
            ],
            "position": {
              "start": {
                "line": 1,
                "column": 1,
                "offset": 0
              },
              "end": {
                "line": 1,
                "column": 72,
                "offset": 71
              }
            }
          },
          "tags": [
            {
              "title": "param",
              "description": "{number} MIDI note value of the lowest note on the keyboard",
              "lineNumber": 2,
              "type": null,
              "name": "low"
            },
            {
              "title": "param",
              "description": "{number} MIDI note value of the highest note on the keyboard",
              "lineNumber": 3,
              "type": null,
              "name": "high"
            }
          ],
          "loc": {
            "start": {
              "line": 386,
              "column": 2
            },
            "end": {
              "line": 390,
              "column": 4
            }
          },
          "context": {
            "loc": {
              "start": {
                "line": 391,
                "column": 2
              },
              "end": {
                "line": 396,
                "column": 3
              }
            },
            "file": "/Library/WebServer/Documents/mt/lib/interfaces/piano.js"
          },
          "params": [
            {
              "name": "low",
              "lineNumber": 2,
              "description": {
                "type": "root",
                "children": [
                  {
                    "type": "paragraph",
                    "children": [
                      {
                        "type": "text",
                        "value": "{number} MIDI note value of the lowest note on the keyboard",
                        "position": {
                          "start": {
                            "line": 1,
                            "column": 1,
                            "offset": 0
                          },
                          "end": {
                            "line": 1,
                            "column": 60,
                            "offset": 59
                          },
                          "indent": []
                        }
                      }
                    ],
                    "position": {
                      "start": {
                        "line": 1,
                        "column": 1,
                        "offset": 0
                      },
                      "end": {
                        "line": 1,
                        "column": 60,
                        "offset": 59
                      },
                      "indent": []
                    }
                  }
                ],
                "position": {
                  "start": {
                    "line": 1,
                    "column": 1,
                    "offset": 0
                  },
                  "end": {
                    "line": 1,
                    "column": 60,
                    "offset": 59
                  }
                }
              }
            },
            {
              "name": "high",
              "lineNumber": 3,
              "description": {
                "type": "root",
                "children": [
                  {
                    "type": "paragraph",
                    "children": [
                      {
                        "type": "text",
                        "value": "{number} MIDI note value of the highest note on the keyboard",
                        "position": {
                          "start": {
                            "line": 1,
                            "column": 1,
                            "offset": 0
                          },
                          "end": {
                            "line": 1,
                            "column": 61,
                            "offset": 60
                          },
                          "indent": []
                        }
                      }
                    ],
                    "position": {
                      "start": {
                        "line": 1,
                        "column": 1,
                        "offset": 0
                      },
                      "end": {
                        "line": 1,
                        "column": 61,
                        "offset": 60
                      },
                      "indent": []
                    }
                  }
                ],
                "position": {
                  "start": {
                    "line": 1,
                    "column": 1,
                    "offset": 0
                  },
                  "end": {
                    "line": 1,
                    "column": 61,
                    "offset": 60
                  }
                }
              }
            }
          ],
          "name": "setRange",
          "kind": "function",
          "memberof": "Piano",
          "scope": "instance",
          "members": {
            "instance": [],
            "static": [],
            "events": []
          },
          "path": [
            {
              "name": "Piano",
              "kind": "class"
            },
            {
              "name": "setRange",
              "kind": "function",
              "scope": "instance"
            }
          ],
          "namespace": "Piano#setRange"
        },
        {
          "description": {
            "type": "root",
            "children": [
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "Turn a key on or off using its MIDI note value;",
                    "position": {
                      "start": {
                        "line": 1,
                        "column": 1,
                        "offset": 0
                      },
                      "end": {
                        "line": 1,
                        "column": 48,
                        "offset": 47
                      },
                      "indent": []
                    }
                  }
                ],
                "position": {
                  "start": {
                    "line": 1,
                    "column": 1,
                    "offset": 0
                  },
                  "end": {
                    "line": 1,
                    "column": 48,
                    "offset": 47
                  },
                  "indent": []
                }
              }
            ],
            "position": {
              "start": {
                "line": 1,
                "column": 1,
                "offset": 0
              },
              "end": {
                "line": 1,
                "column": 48,
                "offset": 47
              }
            }
          },
          "tags": [
            {
              "title": "param",
              "description": "{number} MIDI note value of the key to change",
              "lineNumber": 2,
              "type": null,
              "name": "note"
            },
            {
              "title": "param",
              "description": "{boolean} Whether the note should turn on or off",
              "lineNumber": 3,
              "type": null,
              "name": "on"
            }
          ],
          "loc": {
            "start": {
              "line": 398,
              "column": 2
            },
            "end": {
              "line": 402,
              "column": 4
            }
          },
          "context": {
            "loc": {
              "start": {
                "line": 403,
                "column": 2
              },
              "end": {
                "line": 405,
                "column": 3
              }
            },
            "file": "/Library/WebServer/Documents/mt/lib/interfaces/piano.js"
          },
          "params": [
            {
              "name": "note",
              "lineNumber": 2,
              "description": {
                "type": "root",
                "children": [
                  {
                    "type": "paragraph",
                    "children": [
                      {
                        "type": "text",
                        "value": "{number} MIDI note value of the key to change",
                        "position": {
                          "start": {
                            "line": 1,
                            "column": 1,
                            "offset": 0
                          },
                          "end": {
                            "line": 1,
                            "column": 46,
                            "offset": 45
                          },
                          "indent": []
                        }
                      }
                    ],
                    "position": {
                      "start": {
                        "line": 1,
                        "column": 1,
                        "offset": 0
                      },
                      "end": {
                        "line": 1,
                        "column": 46,
                        "offset": 45
                      },
                      "indent": []
                    }
                  }
                ],
                "position": {
                  "start": {
                    "line": 1,
                    "column": 1,
                    "offset": 0
                  },
                  "end": {
                    "line": 1,
                    "column": 46,
                    "offset": 45
                  }
                }
              }
            },
            {
              "name": "on",
              "lineNumber": 3,
              "description": {
                "type": "root",
                "children": [
                  {
                    "type": "paragraph",
                    "children": [
                      {
                        "type": "text",
                        "value": "{boolean} Whether the note should turn on or off",
                        "position": {
                          "start": {
                            "line": 1,
                            "column": 1,
                            "offset": 0
                          },
                          "end": {
                            "line": 1,
                            "column": 49,
                            "offset": 48
                          },
                          "indent": []
                        }
                      }
                    ],
                    "position": {
                      "start": {
                        "line": 1,
                        "column": 1,
                        "offset": 0
                      },
                      "end": {
                        "line": 1,
                        "column": 49,
                        "offset": 48
                      },
                      "indent": []
                    }
                  }
                ],
                "position": {
                  "start": {
                    "line": 1,
                    "column": 1,
                    "offset": 0
                  },
                  "end": {
                    "line": 1,
                    "column": 49,
                    "offset": 48
                  }
                }
              }
            }
          ],
          "name": "toggleKey",
          "kind": "function",
          "memberof": "Piano",
          "scope": "instance",
          "members": {
            "instance": [],
            "static": [],
            "events": []
          },
          "path": [
            {
              "name": "Piano",
              "kind": "class"
            },
            {
              "name": "toggleKey",
              "kind": "function",
              "scope": "instance"
            }
          ],
          "namespace": "Piano#toggleKey"
        },
        {
          "description": {
            "type": "root",
            "children": [
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "Turn a key on or off using its key index on the piano interface.",
                    "position": {
                      "start": {
                        "line": 1,
                        "column": 1,
                        "offset": 0
                      },
                      "end": {
                        "line": 1,
                        "column": 65,
                        "offset": 64
                      },
                      "indent": []
                    }
                  }
                ],
                "position": {
                  "start": {
                    "line": 1,
                    "column": 1,
                    "offset": 0
                  },
                  "end": {
                    "line": 1,
                    "column": 65,
                    "offset": 64
                  },
                  "indent": []
                }
              }
            ],
            "position": {
              "start": {
                "line": 1,
                "column": 1,
                "offset": 0
              },
              "end": {
                "line": 1,
                "column": 65,
                "offset": 64
              }
            }
          },
          "tags": [
            {
              "title": "param",
              "description": "{number} Index of the key to change",
              "lineNumber": 2,
              "type": null,
              "name": "index"
            },
            {
              "title": "param",
              "description": "{boolean} Whether the note should turn on or off",
              "lineNumber": 3,
              "type": null,
              "name": "on"
            }
          ],
          "loc": {
            "start": {
              "line": 407,
              "column": 2
            },
            "end": {
              "line": 411,
              "column": 4
            }
          },
          "context": {
            "loc": {
              "start": {
                "line": 412,
                "column": 2
              },
              "end": {
                "line": 414,
                "column": 3
              }
            },
            "file": "/Library/WebServer/Documents/mt/lib/interfaces/piano.js"
          },
          "params": [
            {
              "name": "index",
              "lineNumber": 2,
              "description": {
                "type": "root",
                "children": [
                  {
                    "type": "paragraph",
                    "children": [
                      {
                        "type": "text",
                        "value": "{number} Index of the key to change",
                        "position": {
                          "start": {
                            "line": 1,
                            "column": 1,
                            "offset": 0
                          },
                          "end": {
                            "line": 1,
                            "column": 36,
                            "offset": 35
                          },
                          "indent": []
                        }
                      }
                    ],
                    "position": {
                      "start": {
                        "line": 1,
                        "column": 1,
                        "offset": 0
                      },
                      "end": {
                        "line": 1,
                        "column": 36,
                        "offset": 35
                      },
                      "indent": []
                    }
                  }
                ],
                "position": {
                  "start": {
                    "line": 1,
                    "column": 1,
                    "offset": 0
                  },
                  "end": {
                    "line": 1,
                    "column": 36,
                    "offset": 35
                  }
                }
              }
            },
            {
              "name": "on",
              "lineNumber": 3,
              "description": {
                "type": "root",
                "children": [
                  {
                    "type": "paragraph",
                    "children": [
                      {
                        "type": "text",
                        "value": "{boolean} Whether the note should turn on or off",
                        "position": {
                          "start": {
                            "line": 1,
                            "column": 1,
                            "offset": 0
                          },
                          "end": {
                            "line": 1,
                            "column": 49,
                            "offset": 48
                          },
                          "indent": []
                        }
                      }
                    ],
                    "position": {
                      "start": {
                        "line": 1,
                        "column": 1,
                        "offset": 0
                      },
                      "end": {
                        "line": 1,
                        "column": 49,
                        "offset": 48
                      },
                      "indent": []
                    }
                  }
                ],
                "position": {
                  "start": {
                    "line": 1,
                    "column": 1,
                    "offset": 0
                  },
                  "end": {
                    "line": 1,
                    "column": 49,
                    "offset": 48
                  }
                }
              }
            }
          ],
          "name": "toggleIndex",
          "kind": "function",
          "memberof": "Piano",
          "scope": "instance",
          "members": {
            "instance": [],
            "static": [],
            "events": []
          },
          "path": [
            {
              "name": "Piano",
              "kind": "class"
            },
            {
              "name": "toggleIndex",
              "kind": "function",
              "scope": "instance"
            }
          ],
          "namespace": "Piano#toggleIndex"
        }
      ],
      "static": [],
      "events": []
    },
    "path": [
      {
        "name": "Piano",
        "kind": "class"
      }
    ],
    "namespace": "Piano"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "Two-dimensional touch slider.",
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 30,
                  "offset": 29
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 30,
              "offset": 29
            },
            "indent": []
          }
        }
      ],
      "position": {
        "start": {
          "line": 1,
          "column": 1,
          "offset": 0
        },
        "end": {
          "line": 1,
          "column": 30,
          "offset": 29
        }
      }
    },
    "tags": [
      {
        "title": "description",
        "description": "Two-dimensional touch slider.",
        "lineNumber": 3
      },
      {
        "title": "demo",
        "description": "<span nexus-ui=\"position\"></span>",
        "lineNumber": 5
      },
      {
        "title": "example",
        "description": "var position = new Nexus.Position('#target')",
        "lineNumber": 7
      },
      {
        "title": "example",
        "description": "var position = new Nexus.Position('#target',{\n  'size': [200,200],\n  'mode': 'absolute',  // \"absolute\" or \"relative\"\n  'x': 0.5,  // initial x value\n  'minX': 0,\n  'maxX': 1,\n  'stepX': 0,\n  'y': 0.5,  // initial y value\n  'minY': 0,\n  'maxY': 1,\n  'stepY': 0\n})",
        "lineNumber": 10
      },
      {
        "title": "output",
        "description": "change\nFires any time the interface's value changes. <br>\nThe event data is an object with x and y properties containing the x and y values of the interface.",
        "lineNumber": 24
      },
      {
        "title": "outputexample",
        "description": "position.on('change',function(v) {\n  console.log(v);\n})",
        "lineNumber": 29
      }
    ],
    "loc": {
      "start": {
        "line": 9,
        "column": 0
      },
      "end": {
        "line": 44,
        "column": 2
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 46,
          "column": 0
        },
        "end": {
          "line": 301,
          "column": 1
        }
      },
      "file": "/Library/WebServer/Documents/mt/lib/interfaces/position.js"
    },
    "examples": [
      {
        "description": "var position = new Nexus.Position('#target')"
      },
      {
        "description": "var position = new Nexus.Position('#target',{\n  'size': [200,200],\n  'mode': 'absolute',  // \"absolute\" or \"relative\"\n  'x': 0.5,  // initial x value\n  'minX': 0,\n  'maxX': 1,\n  'stepX': 0,\n  'y': 0.5,  // initial y value\n  'minY': 0,\n  'maxY': 1,\n  'stepY': 0\n})"
      }
    ],
    "name": "Position",
    "augments": [
      {
        "title": "augments",
        "name": "Interface"
      }
    ],
    "kind": "class",
    "members": {
      "instance": [
        {
          "description": {
            "type": "root",
            "children": [
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "The interface's x value. When set, it will automatically adjust to fit min/max/step settings of the interface.",
                    "position": {
                      "start": {
                        "line": 1,
                        "column": 1,
                        "offset": 0
                      },
                      "end": {
                        "line": 1,
                        "column": 111,
                        "offset": 110
                      },
                      "indent": []
                    }
                  }
                ],
                "position": {
                  "start": {
                    "line": 1,
                    "column": 1,
                    "offset": 0
                  },
                  "end": {
                    "line": 1,
                    "column": 111,
                    "offset": 110
                  },
                  "indent": []
                }
              }
            ],
            "position": {
              "start": {
                "line": 1,
                "column": 1,
                "offset": 0
              },
              "end": {
                "line": 1,
                "column": 111,
                "offset": 110
              }
            }
          },
          "tags": [
            {
              "title": "type",
              "description": null,
              "lineNumber": 2,
              "type": {
                "type": "NameExpression",
                "name": "object"
              }
            },
            {
              "title": "example",
              "description": "position.x = 0.5;",
              "lineNumber": 3
            }
          ],
          "loc": {
            "start": {
              "line": 155,
              "column": 2
            },
            "end": {
              "line": 159,
              "column": 4
            }
          },
          "context": {
            "loc": {
              "start": {
                "line": 161,
                "column": 2
              },
              "end": {
                "line": 163,
                "column": 3
              }
            },
            "file": "/Library/WebServer/Documents/mt/lib/interfaces/position.js"
          },
          "examples": [
            {
              "description": "position.x = 0.5;"
            }
          ],
          "name": "x",
          "kind": "member",
          "memberof": "Position",
          "scope": "instance",
          "members": {
            "instance": [],
            "static": [],
            "events": []
          },
          "path": [
            {
              "name": "Position",
              "kind": "class"
            },
            {
              "name": "x",
              "kind": "member",
              "scope": "instance"
            }
          ],
          "namespace": "Position#x"
        },
        {
          "description": {
            "type": "root",
            "children": [
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "The interface's y values. When set, it will automatically adjust to fit min/max/step settings of the interface.",
                    "position": {
                      "start": {
                        "line": 1,
                        "column": 1,
                        "offset": 0
                      },
                      "end": {
                        "line": 1,
                        "column": 112,
                        "offset": 111
                      },
                      "indent": []
                    }
                  }
                ],
                "position": {
                  "start": {
                    "line": 1,
                    "column": 1,
                    "offset": 0
                  },
                  "end": {
                    "line": 1,
                    "column": 112,
                    "offset": 111
                  },
                  "indent": []
                }
              }
            ],
            "position": {
              "start": {
                "line": 1,
                "column": 1,
                "offset": 0
              },
              "end": {
                "line": 1,
                "column": 112,
                "offset": 111
              }
            }
          },
          "tags": [
            {
              "title": "type",
              "description": null,
              "lineNumber": 2,
              "type": {
                "type": "NameExpression",
                "name": "object"
              }
            },
            {
              "title": "example",
              "description": "position.x = 0.5;",
              "lineNumber": 3
            }
          ],
          "loc": {
            "start": {
              "line": 174,
              "column": 2
            },
            "end": {
              "line": 178,
              "column": 4
            }
          },
          "context": {
            "loc": {
              "start": {
                "line": 180,
                "column": 2
              },
              "end": {
                "line": 182,
                "column": 3
              }
            },
            "file": "/Library/WebServer/Documents/mt/lib/interfaces/position.js"
          },
          "examples": [
            {
              "description": "position.x = 0.5;"
            }
          ],
          "name": "y",
          "kind": "member",
          "memberof": "Position",
          "scope": "instance",
          "members": {
            "instance": [],
            "static": [],
            "events": []
          },
          "path": [
            {
              "name": "Position",
              "kind": "class"
            },
            {
              "name": "y",
              "kind": "member",
              "scope": "instance"
            }
          ],
          "namespace": "Position#y"
        },
        {
          "description": {
            "type": "root",
            "children": [
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "The lower limit of value on the x axis",
                    "position": {
                      "start": {
                        "line": 1,
                        "column": 1,
                        "offset": 0
                      },
                      "end": {
                        "line": 1,
                        "column": 39,
                        "offset": 38
                      },
                      "indent": []
                    }
                  }
                ],
                "position": {
                  "start": {
                    "line": 1,
                    "column": 1,
                    "offset": 0
                  },
                  "end": {
                    "line": 1,
                    "column": 39,
                    "offset": 38
                  },
                  "indent": []
                }
              }
            ],
            "position": {
              "start": {
                "line": 1,
                "column": 1,
                "offset": 0
              },
              "end": {
                "line": 1,
                "column": 39,
                "offset": 38
              }
            }
          },
          "tags": [
            {
              "title": "type",
              "description": null,
              "lineNumber": 2,
              "type": {
                "type": "NameExpression",
                "name": "object"
              }
            }
          ],
          "loc": {
            "start": {
              "line": 202,
              "column": 2
            },
            "end": {
              "line": 205,
              "column": 4
            }
          },
          "context": {
            "loc": {
              "start": {
                "line": 206,
                "column": 2
              },
              "end": {
                "line": 208,
                "column": 3
              }
            },
            "file": "/Library/WebServer/Documents/mt/lib/interfaces/position.js"
          },
          "name": "minX",
          "kind": "member",
          "memberof": "Position",
          "scope": "instance",
          "members": {
            "instance": [],
            "static": [],
            "events": []
          },
          "path": [
            {
              "name": "Position",
              "kind": "class"
            },
            {
              "name": "minX",
              "kind": "member",
              "scope": "instance"
            }
          ],
          "namespace": "Position#minX"
        },
        {
          "description": {
            "type": "root",
            "children": [
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "The lower limit of value on the y axis",
                    "position": {
                      "start": {
                        "line": 1,
                        "column": 1,
                        "offset": 0
                      },
                      "end": {
                        "line": 1,
                        "column": 39,
                        "offset": 38
                      },
                      "indent": []
                    }
                  }
                ],
                "position": {
                  "start": {
                    "line": 1,
                    "column": 1,
                    "offset": 0
                  },
                  "end": {
                    "line": 1,
                    "column": 39,
                    "offset": 38
                  },
                  "indent": []
                }
              }
            ],
            "position": {
              "start": {
                "line": 1,
                "column": 1,
                "offset": 0
              },
              "end": {
                "line": 1,
                "column": 39,
                "offset": 38
              }
            }
          },
          "tags": [
            {
              "title": "type",
              "description": null,
              "lineNumber": 2,
              "type": {
                "type": "NameExpression",
                "name": "object"
              }
            }
          ],
          "loc": {
            "start": {
              "line": 215,
              "column": 2
            },
            "end": {
              "line": 218,
              "column": 4
            }
          },
          "context": {
            "loc": {
              "start": {
                "line": 219,
                "column": 2
              },
              "end": {
                "line": 221,
                "column": 3
              }
            },
            "file": "/Library/WebServer/Documents/mt/lib/interfaces/position.js"
          },
          "name": "minY",
          "kind": "member",
          "memberof": "Position",
          "scope": "instance",
          "members": {
            "instance": [],
            "static": [],
            "events": []
          },
          "path": [
            {
              "name": "Position",
              "kind": "class"
            },
            {
              "name": "minY",
              "kind": "member",
              "scope": "instance"
            }
          ],
          "namespace": "Position#minY"
        },
        {
          "description": {
            "type": "root",
            "children": [
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "The upper limit of value on the x axis",
                    "position": {
                      "start": {
                        "line": 1,
                        "column": 1,
                        "offset": 0
                      },
                      "end": {
                        "line": 1,
                        "column": 39,
                        "offset": 38
                      },
                      "indent": []
                    }
                  }
                ],
                "position": {
                  "start": {
                    "line": 1,
                    "column": 1,
                    "offset": 0
                  },
                  "end": {
                    "line": 1,
                    "column": 39,
                    "offset": 38
                  },
                  "indent": []
                }
              }
            ],
            "position": {
              "start": {
                "line": 1,
                "column": 1,
                "offset": 0
              },
              "end": {
                "line": 1,
                "column": 39,
                "offset": 38
              }
            }
          },
          "tags": [
            {
              "title": "type",
              "description": null,
              "lineNumber": 2,
              "type": {
                "type": "NameExpression",
                "name": "object"
              }
            }
          ],
          "loc": {
            "start": {
              "line": 229,
              "column": 2
            },
            "end": {
              "line": 232,
              "column": 4
            }
          },
          "context": {
            "loc": {
              "start": {
                "line": 233,
                "column": 2
              },
              "end": {
                "line": 235,
                "column": 3
              }
            },
            "file": "/Library/WebServer/Documents/mt/lib/interfaces/position.js"
          },
          "name": "maxX",
          "kind": "member",
          "memberof": "Position",
          "scope": "instance",
          "members": {
            "instance": [],
            "static": [],
            "events": []
          },
          "path": [
            {
              "name": "Position",
              "kind": "class"
            },
            {
              "name": "maxX",
              "kind": "member",
              "scope": "instance"
            }
          ],
          "namespace": "Position#maxX"
        },
        {
          "description": {
            "type": "root",
            "children": [
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "The upper limit of value on the y axis",
                    "position": {
                      "start": {
                        "line": 1,
                        "column": 1,
                        "offset": 0
                      },
                      "end": {
                        "line": 1,
                        "column": 39,
                        "offset": 38
                      },
                      "indent": []
                    }
                  }
                ],
                "position": {
                  "start": {
                    "line": 1,
                    "column": 1,
                    "offset": 0
                  },
                  "end": {
                    "line": 1,
                    "column": 39,
                    "offset": 38
                  },
                  "indent": []
                }
              }
            ],
            "position": {
              "start": {
                "line": 1,
                "column": 1,
                "offset": 0
              },
              "end": {
                "line": 1,
                "column": 39,
                "offset": 38
              }
            }
          },
          "tags": [
            {
              "title": "type",
              "description": null,
              "lineNumber": 2,
              "type": {
                "type": "NameExpression",
                "name": "object"
              }
            }
          ],
          "loc": {
            "start": {
              "line": 243,
              "column": 2
            },
            "end": {
              "line": 246,
              "column": 4
            }
          },
          "context": {
            "loc": {
              "start": {
                "line": 247,
                "column": 2
              },
              "end": {
                "line": 249,
                "column": 3
              }
            },
            "file": "/Library/WebServer/Documents/mt/lib/interfaces/position.js"
          },
          "name": "maxY",
          "kind": "member",
          "memberof": "Position",
          "scope": "instance",
          "members": {
            "instance": [],
            "static": [],
            "events": []
          },
          "path": [
            {
              "name": "Position",
              "kind": "class"
            },
            {
              "name": "maxY",
              "kind": "member",
              "scope": "instance"
            }
          ],
          "namespace": "Position#maxY"
        },
        {
          "description": {
            "type": "root",
            "children": [
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "The incremental step of values on the x axis",
                    "position": {
                      "start": {
                        "line": 1,
                        "column": 1,
                        "offset": 0
                      },
                      "end": {
                        "line": 1,
                        "column": 45,
                        "offset": 44
                      },
                      "indent": []
                    }
                  }
                ],
                "position": {
                  "start": {
                    "line": 1,
                    "column": 1,
                    "offset": 0
                  },
                  "end": {
                    "line": 1,
                    "column": 45,
                    "offset": 44
                  },
                  "indent": []
                }
              }
            ],
            "position": {
              "start": {
                "line": 1,
                "column": 1,
                "offset": 0
              },
              "end": {
                "line": 1,
                "column": 45,
                "offset": 44
              }
            }
          },
          "tags": [
            {
              "title": "type",
              "description": null,
              "lineNumber": 2,
              "type": {
                "type": "NameExpression",
                "name": "object"
              }
            }
          ],
          "loc": {
            "start": {
              "line": 257,
              "column": 2
            },
            "end": {
              "line": 260,
              "column": 4
            }
          },
          "context": {
            "loc": {
              "start": {
                "line": 261,
                "column": 2
              },
              "end": {
                "line": 263,
                "column": 3
              }
            },
            "file": "/Library/WebServer/Documents/mt/lib/interfaces/position.js"
          },
          "name": "stepX",
          "kind": "member",
          "memberof": "Position",
          "scope": "instance",
          "members": {
            "instance": [],
            "static": [],
            "events": []
          },
          "path": [
            {
              "name": "Position",
              "kind": "class"
            },
            {
              "name": "stepX",
              "kind": "member",
              "scope": "instance"
            }
          ],
          "namespace": "Position#stepX"
        },
        {
          "description": {
            "type": "root",
            "children": [
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "The incremental step of values on the y axis",
                    "position": {
                      "start": {
                        "line": 1,
                        "column": 1,
                        "offset": 0
                      },
                      "end": {
                        "line": 1,
                        "column": 45,
                        "offset": 44
                      },
                      "indent": []
                    }
                  }
                ],
                "position": {
                  "start": {
                    "line": 1,
                    "column": 1,
                    "offset": 0
                  },
                  "end": {
                    "line": 1,
                    "column": 45,
                    "offset": 44
                  },
                  "indent": []
                }
              }
            ],
            "position": {
              "start": {
                "line": 1,
                "column": 1,
                "offset": 0
              },
              "end": {
                "line": 1,
                "column": 45,
                "offset": 44
              }
            }
          },
          "tags": [
            {
              "title": "type",
              "description": null,
              "lineNumber": 2,
              "type": {
                "type": "NameExpression",
                "name": "object"
              }
            }
          ],
          "loc": {
            "start": {
              "line": 271,
              "column": 2
            },
            "end": {
              "line": 274,
              "column": 4
            }
          },
          "context": {
            "loc": {
              "start": {
                "line": 275,
                "column": 2
              },
              "end": {
                "line": 277,
                "column": 3
              }
            },
            "file": "/Library/WebServer/Documents/mt/lib/interfaces/position.js"
          },
          "name": "stepY",
          "kind": "member",
          "memberof": "Position",
          "scope": "instance",
          "members": {
            "instance": [],
            "static": [],
            "events": []
          },
          "path": [
            {
              "name": "Position",
              "kind": "class"
            },
            {
              "name": "stepY",
              "kind": "member",
              "scope": "instance"
            }
          ],
          "namespace": "Position#stepY"
        },
        {
          "description": {
            "type": "root",
            "children": [
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "Absolute mode (position's value jumps to mouse click position) or relative mode (mouse drag changes value relative to its current position). Default: \"absolute\".",
                    "position": {
                      "start": {
                        "line": 1,
                        "column": 1,
                        "offset": 0
                      },
                      "end": {
                        "line": 1,
                        "column": 162,
                        "offset": 161
                      },
                      "indent": []
                    }
                  }
                ],
                "position": {
                  "start": {
                    "line": 1,
                    "column": 1,
                    "offset": 0
                  },
                  "end": {
                    "line": 1,
                    "column": 162,
                    "offset": 161
                  },
                  "indent": []
                }
              }
            ],
            "position": {
              "start": {
                "line": 1,
                "column": 1,
                "offset": 0
              },
              "end": {
                "line": 1,
                "column": 162,
                "offset": 161
              }
            }
          },
          "tags": [
            {
              "title": "type",
              "description": null,
              "lineNumber": 2,
              "type": {
                "type": "NameExpression",
                "name": "string"
              }
            },
            {
              "title": "example",
              "description": "position.mode = \"relative\";",
              "lineNumber": 3
            }
          ],
          "loc": {
            "start": {
              "line": 285,
              "column": 2
            },
            "end": {
              "line": 289,
              "column": 4
            }
          },
          "context": {
            "loc": {
              "start": {
                "line": 290,
                "column": 2
              },
              "end": {
                "line": 292,
                "column": 3
              }
            },
            "file": "/Library/WebServer/Documents/mt/lib/interfaces/position.js"
          },
          "examples": [
            {
              "description": "position.mode = \"relative\";"
            }
          ],
          "name": "mode",
          "kind": "member",
          "memberof": "Position",
          "scope": "instance",
          "members": {
            "instance": [],
            "static": [],
            "events": []
          },
          "path": [
            {
              "name": "Position",
              "kind": "class"
            },
            {
              "name": "mode",
              "kind": "member",
              "scope": "instance"
            }
          ],
          "namespace": "Position#mode"
        }
      ],
      "static": [],
      "events": []
    },
    "path": [
      {
        "name": "Position",
        "kind": "class"
      }
    ],
    "namespace": "Position"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "An array of buttons. By default, selecting one button will deselect all other buttons, but this can be customized using the API below.",
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 135,
                  "offset": 134
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 135,
              "offset": 134
            },
            "indent": []
          }
        }
      ],
      "position": {
        "start": {
          "line": 1,
          "column": 1,
          "offset": 0
        },
        "end": {
          "line": 1,
          "column": 135,
          "offset": 134
        }
      }
    },
    "tags": [
      {
        "title": "description",
        "description": "An array of buttons. By default, selecting one button will deselect all other buttons, but this can be customized using the API below.",
        "lineNumber": 3
      },
      {
        "title": "demo",
        "description": "<div nexus-ui=\"RadioButton\"></div>",
        "lineNumber": 5
      },
      {
        "title": "example",
        "description": "var radiobutton = new Nexus.RadioButton('#target')",
        "lineNumber": 7
      },
      {
        "title": "example",
        "description": "var radiobutton = new Nexus.RadioButton('#target',{\n  'size': [120,25],\n  'numberOfButtons': 4,\n  'active': -1\n})",
        "lineNumber": 10
      },
      {
        "title": "output",
        "description": "change\nFires any time the interface's value changes. <br>\nThe event data an <i>integer</i>, the index of the button that is currently on. If no button is selected, the value will be -1.",
        "lineNumber": 17
      },
      {
        "title": "outputexample",
        "description": "radiobutton.on('change',function(v) {\n  console.log(v);\n})",
        "lineNumber": 22
      }
    ],
    "loc": {
      "start": {
        "line": 7,
        "column": 0
      },
      "end": {
        "line": 34,
        "column": 2
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 36,
          "column": 0
        },
        "end": {
          "line": 159,
          "column": 1
        }
      },
      "file": "/Library/WebServer/Documents/mt/lib/interfaces/radiobutton.js"
    },
    "examples": [
      {
        "description": "var radiobutton = new Nexus.RadioButton('#target')"
      },
      {
        "description": "var radiobutton = new Nexus.RadioButton('#target',{\n  'size': [120,25],\n  'numberOfButtons': 4,\n  'active': -1\n})"
      }
    ],
    "name": "RadioButton",
    "augments": [
      {
        "title": "augments",
        "name": "Interface"
      }
    ],
    "kind": "class",
    "members": {
      "instance": [
        {
          "description": {
            "type": "root",
            "children": [
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "Select one button and deselect all other buttons.",
                    "position": {
                      "start": {
                        "line": 1,
                        "column": 1,
                        "offset": 0
                      },
                      "end": {
                        "line": 1,
                        "column": 50,
                        "offset": 49
                      },
                      "indent": []
                    }
                  }
                ],
                "position": {
                  "start": {
                    "line": 1,
                    "column": 1,
                    "offset": 0
                  },
                  "end": {
                    "line": 1,
                    "column": 50,
                    "offset": 49
                  },
                  "indent": []
                }
              }
            ],
            "position": {
              "start": {
                "line": 1,
                "column": 1,
                "offset": 0
              },
              "end": {
                "line": 1,
                "column": 50,
                "offset": 49
              }
            }
          },
          "tags": [
            {
              "title": "param",
              "description": "{number} The index of the button to select",
              "lineNumber": 2,
              "type": null,
              "name": "index"
            }
          ],
          "loc": {
            "start": {
              "line": 117,
              "column": 2
            },
            "end": {
              "line": 120,
              "column": 4
            }
          },
          "context": {
            "loc": {
              "start": {
                "line": 121,
                "column": 2
              },
              "end": {
                "line": 127,
                "column": 3
              }
            },
            "file": "/Library/WebServer/Documents/mt/lib/interfaces/radiobutton.js"
          },
          "params": [
            {
              "name": "index",
              "lineNumber": 2,
              "description": {
                "type": "root",
                "children": [
                  {
                    "type": "paragraph",
                    "children": [
                      {
                        "type": "text",
                        "value": "{number} The index of the button to select",
                        "position": {
                          "start": {
                            "line": 1,
                            "column": 1,
                            "offset": 0
                          },
                          "end": {
                            "line": 1,
                            "column": 43,
                            "offset": 42
                          },
                          "indent": []
                        }
                      }
                    ],
                    "position": {
                      "start": {
                        "line": 1,
                        "column": 1,
                        "offset": 0
                      },
                      "end": {
                        "line": 1,
                        "column": 43,
                        "offset": 42
                      },
                      "indent": []
                    }
                  }
                ],
                "position": {
                  "start": {
                    "line": 1,
                    "column": 1,
                    "offset": 0
                  },
                  "end": {
                    "line": 1,
                    "column": 43,
                    "offset": 42
                  }
                }
              }
            }
          ],
          "name": "select",
          "kind": "function",
          "memberof": "RadioButton",
          "scope": "instance",
          "members": {
            "instance": [],
            "static": [],
            "events": []
          },
          "path": [
            {
              "name": "RadioButton",
              "kind": "class"
            },
            {
              "name": "select",
              "kind": "function",
              "scope": "instance"
            }
          ],
          "namespace": "RadioButton#select"
        },
        {
          "description": {
            "type": "root",
            "children": [
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "Deselect all buttons.",
                    "position": {
                      "start": {
                        "line": 1,
                        "column": 1,
                        "offset": 0
                      },
                      "end": {
                        "line": 1,
                        "column": 22,
                        "offset": 21
                      },
                      "indent": []
                    }
                  }
                ],
                "position": {
                  "start": {
                    "line": 1,
                    "column": 1,
                    "offset": 0
                  },
                  "end": {
                    "line": 1,
                    "column": 22,
                    "offset": 21
                  },
                  "indent": []
                }
              }
            ],
            "position": {
              "start": {
                "line": 1,
                "column": 1,
                "offset": 0
              },
              "end": {
                "line": 1,
                "column": 22,
                "offset": 21
              }
            }
          },
          "tags": [],
          "loc": {
            "start": {
              "line": 129,
              "column": 2
            },
            "end": {
              "line": 131,
              "column": 4
            }
          },
          "context": {
            "loc": {
              "start": {
                "line": 132,
                "column": 2
              },
              "end": {
                "line": 136,
                "column": 3
              }
            },
            "file": "/Library/WebServer/Documents/mt/lib/interfaces/radiobutton.js"
          },
          "name": "deselect",
          "kind": "function",
          "memberof": "RadioButton",
          "scope": "instance",
          "members": {
            "instance": [],
            "static": [],
            "events": []
          },
          "path": [
            {
              "name": "RadioButton",
              "kind": "class"
            },
            {
              "name": "deselect",
              "kind": "function",
              "scope": "instance"
            }
          ],
          "namespace": "RadioButton#deselect"
        },
        {
          "description": {
            "type": "root",
            "children": [
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "Update how many buttons are in the interface",
                    "position": {
                      "start": {
                        "line": 1,
                        "column": 1,
                        "offset": 0
                      },
                      "end": {
                        "line": 1,
                        "column": 45,
                        "offset": 44
                      },
                      "indent": []
                    }
                  }
                ],
                "position": {
                  "start": {
                    "line": 1,
                    "column": 1,
                    "offset": 0
                  },
                  "end": {
                    "line": 1,
                    "column": 45,
                    "offset": 44
                  },
                  "indent": []
                }
              }
            ],
            "position": {
              "start": {
                "line": 1,
                "column": 1,
                "offset": 0
              },
              "end": {
                "line": 1,
                "column": 45,
                "offset": 44
              }
            }
          },
          "tags": [
            {
              "title": "param",
              "description": "How many buttons are in the interface",
              "lineNumber": 2,
              "type": {
                "type": "NameExpression",
                "name": "number"
              },
              "name": "buttons"
            }
          ],
          "loc": {
            "start": {
              "line": 142,
              "column": 2
            },
            "end": {
              "line": 145,
              "column": 5
            }
          },
          "context": {
            "loc": {
              "start": {
                "line": 146,
                "column": 2
              },
              "end": {
                "line": 157,
                "column": 3
              }
            },
            "file": "/Library/WebServer/Documents/mt/lib/interfaces/radiobutton.js"
          },
          "params": [
            {
              "name": "buttons",
              "lineNumber": 2,
              "description": {
                "type": "root",
                "children": [
                  {
                    "type": "paragraph",
                    "children": [
                      {
                        "type": "text",
                        "value": "How many buttons are in the interface",
                        "position": {
                          "start": {
                            "line": 1,
                            "column": 1,
                            "offset": 0
                          },
                          "end": {
                            "line": 1,
                            "column": 38,
                            "offset": 37
                          },
                          "indent": []
                        }
                      }
                    ],
                    "position": {
                      "start": {
                        "line": 1,
                        "column": 1,
                        "offset": 0
                      },
                      "end": {
                        "line": 1,
                        "column": 38,
                        "offset": 37
                      },
                      "indent": []
                    }
                  }
                ],
                "position": {
                  "start": {
                    "line": 1,
                    "column": 1,
                    "offset": 0
                  },
                  "end": {
                    "line": 1,
                    "column": 38,
                    "offset": 37
                  }
                }
              },
              "type": {
                "type": "NameExpression",
                "name": "number"
              }
            }
          ],
          "name": "numberOfButtons",
          "kind": "member",
          "memberof": "RadioButton",
          "scope": "instance",
          "members": {
            "instance": [],
            "static": [],
            "events": []
          },
          "path": [
            {
              "name": "RadioButton",
              "kind": "class"
            },
            {
              "name": "numberOfButtons",
              "kind": "member",
              "scope": "instance"
            }
          ],
          "namespace": "RadioButton#numberOfButtons"
        }
      ],
      "static": [],
      "events": []
    },
    "path": [
      {
        "name": "RadioButton",
        "kind": "class"
      }
    ],
    "namespace": "RadioButton"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "Range slider",
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 13,
                  "offset": 12
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 13,
              "offset": 12
            },
            "indent": []
          }
        }
      ],
      "position": {
        "start": {
          "line": 1,
          "column": 1,
          "offset": 0
        },
        "end": {
          "line": 1,
          "column": 13,
          "offset": 12
        }
      }
    },
    "tags": [
      {
        "title": "description",
        "description": "Range slider",
        "lineNumber": 3
      },
      {
        "title": "demo",
        "description": "<div nexus-ui=\"Range\"></div>",
        "lineNumber": 5
      },
      {
        "title": "example",
        "description": "var range = new Nexus.Range('#target')",
        "lineNumber": 7
      },
      {
        "title": "output",
        "description": "change\nFires any time the interface's value changes. <br>\nThe event data is the number value of the interface.",
        "lineNumber": 10
      },
      {
        "title": "outputexample",
        "description": "dial.on('change',function(v) {\n  console.log(v);\n})",
        "lineNumber": 15
      }
    ],
    "loc": {
      "start": {
        "line": 8,
        "column": 0
      },
      "end": {
        "line": 29,
        "column": 3
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 31,
          "column": 0
        },
        "end": {
          "line": 129,
          "column": 1
        }
      },
      "file": "/Library/WebServer/Documents/mt/lib/interfaces/range.js"
    },
    "examples": [
      {
        "description": "var range = new Nexus.Range('#target')"
      }
    ],
    "name": "Range",
    "augments": [
      {
        "title": "augments",
        "name": "Interface"
      }
    ],
    "kind": "class",
    "members": {
      "instance": [
        {
          "description": {
            "type": "root",
            "children": [
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "{number} Minimum value of the range",
                    "position": {
                      "start": {
                        "line": 1,
                        "column": 1,
                        "offset": 0
                      },
                      "end": {
                        "line": 1,
                        "column": 36,
                        "offset": 35
                      },
                      "indent": []
                    }
                  }
                ],
                "position": {
                  "start": {
                    "line": 1,
                    "column": 1,
                    "offset": 0
                  },
                  "end": {
                    "line": 1,
                    "column": 36,
                    "offset": 35
                  },
                  "indent": []
                }
              }
            ],
            "position": {
              "start": {
                "line": 1,
                "column": 1,
                "offset": 0
              },
              "end": {
                "line": 1,
                "column": 36,
                "offset": 35
              }
            }
          },
          "tags": [],
          "loc": {
            "start": {
              "line": 17,
              "column": 4
            },
            "end": {
              "line": 19,
              "column": 6
            }
          },
          "context": {
            "loc": {
              "start": {
                "line": 20,
                "column": 4
              },
              "end": {
                "line": 20,
                "column": 19
              }
            },
            "file": "/Library/WebServer/Documents/mt/lib/models/range.js"
          },
          "name": "min",
          "memberof": "Range",
          "scope": "instance",
          "members": {
            "instance": [],
            "static": [],
            "events": []
          },
          "path": [
            {
              "name": "Range",
              "kind": "class"
            },
            {
              "name": "min",
              "scope": "instance"
            }
          ],
          "namespace": "Range#min"
        },
        {
          "description": {
            "type": "root",
            "children": [
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "{number} Maximum value of the range",
                    "position": {
                      "start": {
                        "line": 1,
                        "column": 1,
                        "offset": 0
                      },
                      "end": {
                        "line": 1,
                        "column": 36,
                        "offset": 35
                      },
                      "indent": []
                    }
                  }
                ],
                "position": {
                  "start": {
                    "line": 1,
                    "column": 1,
                    "offset": 0
                  },
                  "end": {
                    "line": 1,
                    "column": 36,
                    "offset": 35
                  },
                  "indent": []
                }
              }
            ],
            "position": {
              "start": {
                "line": 1,
                "column": 1,
                "offset": 0
              },
              "end": {
                "line": 1,
                "column": 36,
                "offset": 35
              }
            }
          },
          "tags": [],
          "loc": {
            "start": {
              "line": 22,
              "column": 4
            },
            "end": {
              "line": 24,
              "column": 6
            }
          },
          "context": {
            "loc": {
              "start": {
                "line": 25,
                "column": 4
              },
              "end": {
                "line": 25,
                "column": 19
              }
            },
            "file": "/Library/WebServer/Documents/mt/lib/models/range.js"
          },
          "name": "max",
          "memberof": "Range",
          "scope": "instance",
          "members": {
            "instance": [],
            "static": [],
            "events": []
          },
          "path": [
            {
              "name": "Range",
              "kind": "class"
            },
            {
              "name": "max",
              "scope": "instance"
            }
          ],
          "namespace": "Range#max"
        },
        {
          "description": {
            "type": "root",
            "children": [
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "{Step} Start value of the range selection",
                    "position": {
                      "start": {
                        "line": 1,
                        "column": 1,
                        "offset": 0
                      },
                      "end": {
                        "line": 1,
                        "column": 42,
                        "offset": 41
                      },
                      "indent": []
                    }
                  }
                ],
                "position": {
                  "start": {
                    "line": 1,
                    "column": 1,
                    "offset": 0
                  },
                  "end": {
                    "line": 1,
                    "column": 42,
                    "offset": 41
                  },
                  "indent": []
                }
              }
            ],
            "position": {
              "start": {
                "line": 1,
                "column": 1,
                "offset": 0
              },
              "end": {
                "line": 1,
                "column": 42,
                "offset": 41
              }
            }
          },
          "tags": [],
          "loc": {
            "start": {
              "line": 27,
              "column": 4
            },
            "end": {
              "line": 29,
              "column": 6
            }
          },
          "context": {
            "loc": {
              "start": {
                "line": 30,
                "column": 4
              },
              "end": {
                "line": 30,
                "column": 40
              }
            },
            "file": "/Library/WebServer/Documents/mt/lib/models/range.js"
          },
          "name": "start",
          "memberof": "Range",
          "scope": "instance",
          "members": {
            "instance": [],
            "static": [],
            "events": []
          },
          "path": [
            {
              "name": "Range",
              "kind": "class"
            },
            {
              "name": "start",
              "scope": "instance"
            }
          ],
          "namespace": "Range#start"
        },
        {
          "description": {
            "type": "root",
            "children": [
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "{Step} End value of the range selection",
                    "position": {
                      "start": {
                        "line": 1,
                        "column": 1,
                        "offset": 0
                      },
                      "end": {
                        "line": 1,
                        "column": 40,
                        "offset": 39
                      },
                      "indent": []
                    }
                  }
                ],
                "position": {
                  "start": {
                    "line": 1,
                    "column": 1,
                    "offset": 0
                  },
                  "end": {
                    "line": 1,
                    "column": 40,
                    "offset": 39
                  },
                  "indent": []
                }
              }
            ],
            "position": {
              "start": {
                "line": 1,
                "column": 1,
                "offset": 0
              },
              "end": {
                "line": 1,
                "column": 40,
                "offset": 39
              }
            }
          },
          "tags": [],
          "loc": {
            "start": {
              "line": 32,
              "column": 4
            },
            "end": {
              "line": 34,
              "column": 6
            }
          },
          "context": {
            "loc": {
              "start": {
                "line": 35,
                "column": 4
              },
              "end": {
                "line": 35,
                "column": 38
              }
            },
            "file": "/Library/WebServer/Documents/mt/lib/models/range.js"
          },
          "name": "end",
          "memberof": "Range",
          "scope": "instance",
          "members": {
            "instance": [],
            "static": [],
            "events": []
          },
          "path": [
            {
              "name": "Range",
              "kind": "class"
            },
            {
              "name": "end",
              "scope": "instance"
            }
          ],
          "namespace": "Range#end"
        },
        {
          "description": {
            "type": "root",
            "children": [
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "{number} Center of the range selection",
                    "position": {
                      "start": {
                        "line": 1,
                        "column": 1,
                        "offset": 0
                      },
                      "end": {
                        "line": 1,
                        "column": 39,
                        "offset": 38
                      },
                      "indent": []
                    }
                  }
                ],
                "position": {
                  "start": {
                    "line": 1,
                    "column": 1,
                    "offset": 0
                  },
                  "end": {
                    "line": 1,
                    "column": 39,
                    "offset": 38
                  },
                  "indent": []
                }
              }
            ],
            "position": {
              "start": {
                "line": 1,
                "column": 1,
                "offset": 0
              },
              "end": {
                "line": 1,
                "column": 39,
                "offset": 38
              }
            }
          },
          "tags": [],
          "loc": {
            "start": {
              "line": 38,
              "column": 2
            },
            "end": {
              "line": 40,
              "column": 4
            }
          },
          "context": {
            "loc": {
              "start": {
                "line": 41,
                "column": 2
              },
              "end": {
                "line": 43,
                "column": 3
              }
            },
            "file": "/Library/WebServer/Documents/mt/lib/models/range.js"
          },
          "name": "center",
          "kind": "member",
          "memberof": "Range",
          "scope": "instance",
          "members": {
            "instance": [],
            "static": [],
            "events": []
          },
          "path": [
            {
              "name": "Range",
              "kind": "class"
            },
            {
              "name": "center",
              "kind": "member",
              "scope": "instance"
            }
          ],
          "namespace": "Range#center"
        },
        {
          "description": {
            "type": "root",
            "children": [
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "{number} Size of the range selection",
                    "position": {
                      "start": {
                        "line": 1,
                        "column": 1,
                        "offset": 0
                      },
                      "end": {
                        "line": 1,
                        "column": 37,
                        "offset": 36
                      },
                      "indent": []
                    }
                  }
                ],
                "position": {
                  "start": {
                    "line": 1,
                    "column": 1,
                    "offset": 0
                  },
                  "end": {
                    "line": 1,
                    "column": 37,
                    "offset": 36
                  },
                  "indent": []
                }
              }
            ],
            "position": {
              "start": {
                "line": 1,
                "column": 1,
                "offset": 0
              },
              "end": {
                "line": 1,
                "column": 37,
                "offset": 36
              }
            }
          },
          "tags": [],
          "loc": {
            "start": {
              "line": 54,
              "column": 2
            },
            "end": {
              "line": 56,
              "column": 4
            }
          },
          "context": {
            "loc": {
              "start": {
                "line": 57,
                "column": 2
              },
              "end": {
                "line": 59,
                "column": 3
              }
            },
            "file": "/Library/WebServer/Documents/mt/lib/models/range.js"
          },
          "name": "size",
          "kind": "member",
          "memberof": "Range",
          "scope": "instance",
          "members": {
            "instance": [],
            "static": [],
            "events": []
          },
          "path": [
            {
              "name": "Range",
              "kind": "class"
            },
            {
              "name": "size",
              "kind": "member",
              "scope": "instance"
            }
          ],
          "namespace": "Range#size"
        },
        {
          "description": {
            "type": "root",
            "children": [
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "Move the range selection",
                    "position": {
                      "start": {
                        "line": 1,
                        "column": 1,
                        "offset": 0
                      },
                      "end": {
                        "line": 1,
                        "column": 25,
                        "offset": 24
                      },
                      "indent": []
                    }
                  }
                ],
                "position": {
                  "start": {
                    "line": 1,
                    "column": 1,
                    "offset": 0
                  },
                  "end": {
                    "line": 1,
                    "column": 25,
                    "offset": 24
                  },
                  "indent": []
                }
              }
            ],
            "position": {
              "start": {
                "line": 1,
                "column": 1,
                "offset": 0
              },
              "end": {
                "line": 1,
                "column": 25,
                "offset": 24
              }
            }
          },
          "tags": [
            {
              "title": "param",
              "description": "New start value of the range selection",
              "lineNumber": 2,
              "type": {
                "type": "NameExpression",
                "name": "number"
              },
              "name": "start"
            },
            {
              "title": "param",
              "description": "New end value of the range selection",
              "lineNumber": 3,
              "type": {
                "type": "NameExpression",
                "name": "number"
              },
              "name": "end"
            }
          ],
          "loc": {
            "start": {
              "line": 70,
              "column": 2
            },
            "end": {
              "line": 74,
              "column": 4
            }
          },
          "context": {
            "loc": {
              "start": {
                "line": 75,
                "column": 2
              },
              "end": {
                "line": 82,
                "column": 3
              }
            },
            "file": "/Library/WebServer/Documents/mt/lib/models/range.js"
          },
          "params": [
            {
              "name": "start",
              "lineNumber": 2,
              "description": {
                "type": "root",
                "children": [
                  {
                    "type": "paragraph",
                    "children": [
                      {
                        "type": "text",
                        "value": "New start value of the range selection",
                        "position": {
                          "start": {
                            "line": 1,
                            "column": 1,
                            "offset": 0
                          },
                          "end": {
                            "line": 1,
                            "column": 39,
                            "offset": 38
                          },
                          "indent": []
                        }
                      }
                    ],
                    "position": {
                      "start": {
                        "line": 1,
                        "column": 1,
                        "offset": 0
                      },
                      "end": {
                        "line": 1,
                        "column": 39,
                        "offset": 38
                      },
                      "indent": []
                    }
                  }
                ],
                "position": {
                  "start": {
                    "line": 1,
                    "column": 1,
                    "offset": 0
                  },
                  "end": {
                    "line": 1,
                    "column": 39,
                    "offset": 38
                  }
                }
              },
              "type": {
                "type": "NameExpression",
                "name": "number"
              }
            },
            {
              "name": "end",
              "lineNumber": 3,
              "description": {
                "type": "root",
                "children": [
                  {
                    "type": "paragraph",
                    "children": [
                      {
                        "type": "text",
                        "value": "New end value of the range selection",
                        "position": {
                          "start": {
                            "line": 1,
                            "column": 1,
                            "offset": 0
                          },
                          "end": {
                            "line": 1,
                            "column": 37,
                            "offset": 36
                          },
                          "indent": []
                        }
                      }
                    ],
                    "position": {
                      "start": {
                        "line": 1,
                        "column": 1,
                        "offset": 0
                      },
                      "end": {
                        "line": 1,
                        "column": 37,
                        "offset": 36
                      },
                      "indent": []
                    }
                  }
                ],
                "position": {
                  "start": {
                    "line": 1,
                    "column": 1,
                    "offset": 0
                  },
                  "end": {
                    "line": 1,
                    "column": 37,
                    "offset": 36
                  }
                }
              },
              "type": {
                "type": "NameExpression",
                "name": "number"
              }
            }
          ],
          "name": "move",
          "kind": "function",
          "memberof": "Range",
          "scope": "instance",
          "members": {
            "instance": [],
            "static": [],
            "events": []
          },
          "path": [
            {
              "name": "Range",
              "kind": "class"
            },
            {
              "name": "move",
              "kind": "function",
              "scope": "instance"
            }
          ],
          "namespace": "Range#move"
        }
      ],
      "static": [],
      "events": []
    },
    "path": [
      {
        "name": "Range",
        "kind": "class"
      }
    ],
    "namespace": "Range"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "Creates an abstract model of a steppable range slider with start and end values which are constricted by a minimum, maximum, and step size.",
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 140,
                  "offset": 139
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 140,
              "offset": 139
            },
            "indent": []
          }
        }
      ],
      "position": {
        "start": {
          "line": 1,
          "column": 1,
          "offset": 0
        },
        "end": {
          "line": 1,
          "column": 140,
          "offset": 139
        }
      }
    },
    "tags": [
      {
        "title": "param",
        "description": "minimum",
        "lineNumber": 2,
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "number"
          }
        },
        "name": "min",
        "default": "0"
      },
      {
        "title": "param",
        "description": "maximum",
        "lineNumber": 3,
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "number"
          }
        },
        "name": "max",
        "default": "1"
      },
      {
        "title": "param",
        "description": null,
        "lineNumber": 4,
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "number"
          }
        },
        "name": "step",
        "default": "0"
      },
      {
        "title": "returns",
        "description": "Step",
        "lineNumber": 5,
        "type": {
          "type": "NameExpression",
          "name": "Object"
        }
      }
    ],
    "loc": {
      "start": {
        "line": 5,
        "column": 0
      },
      "end": {
        "line": 11,
        "column": 2
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 13,
          "column": 0
        },
        "end": {
          "line": 84,
          "column": 1
        }
      },
      "file": "/Library/WebServer/Documents/mt/lib/models/range.js"
    },
    "params": [
      {
        "name": "min",
        "lineNumber": 2,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "minimum",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 8,
                      "offset": 7
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 8,
                  "offset": 7
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 8,
              "offset": 7
            }
          }
        },
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "number"
          }
        },
        "default": "0"
      },
      {
        "name": "max",
        "lineNumber": 3,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "maximum",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 8,
                      "offset": 7
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 8,
                  "offset": 7
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 8,
              "offset": 7
            }
          }
        },
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "number"
          }
        },
        "default": "1"
      },
      {
        "name": "step",
        "lineNumber": 4,
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "number"
          }
        },
        "default": "0"
      }
    ],
    "returns": [
      {
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "Step",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 5,
                      "offset": 4
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 5,
                  "offset": 4
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 5,
              "offset": 4
            }
          }
        },
        "type": {
          "type": "NameExpression",
          "name": "Object"
        }
      }
    ],
    "name": "Range",
    "kind": "class",
    "members": {
      "instance": [
        {
          "description": {
            "type": "root",
            "children": [
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "{number} Minimum value of the range",
                    "position": {
                      "start": {
                        "line": 1,
                        "column": 1,
                        "offset": 0
                      },
                      "end": {
                        "line": 1,
                        "column": 36,
                        "offset": 35
                      },
                      "indent": []
                    }
                  }
                ],
                "position": {
                  "start": {
                    "line": 1,
                    "column": 1,
                    "offset": 0
                  },
                  "end": {
                    "line": 1,
                    "column": 36,
                    "offset": 35
                  },
                  "indent": []
                }
              }
            ],
            "position": {
              "start": {
                "line": 1,
                "column": 1,
                "offset": 0
              },
              "end": {
                "line": 1,
                "column": 36,
                "offset": 35
              }
            }
          },
          "tags": [],
          "loc": {
            "start": {
              "line": 17,
              "column": 4
            },
            "end": {
              "line": 19,
              "column": 6
            }
          },
          "context": {
            "loc": {
              "start": {
                "line": 20,
                "column": 4
              },
              "end": {
                "line": 20,
                "column": 19
              }
            },
            "file": "/Library/WebServer/Documents/mt/lib/models/range.js"
          },
          "name": "min",
          "memberof": "Range",
          "scope": "instance",
          "members": {
            "instance": [],
            "static": [],
            "events": []
          },
          "path": [
            {
              "name": "Range",
              "kind": "class"
            },
            {
              "name": "min",
              "scope": "instance"
            }
          ],
          "namespace": "Range#min"
        },
        {
          "description": {
            "type": "root",
            "children": [
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "{number} Maximum value of the range",
                    "position": {
                      "start": {
                        "line": 1,
                        "column": 1,
                        "offset": 0
                      },
                      "end": {
                        "line": 1,
                        "column": 36,
                        "offset": 35
                      },
                      "indent": []
                    }
                  }
                ],
                "position": {
                  "start": {
                    "line": 1,
                    "column": 1,
                    "offset": 0
                  },
                  "end": {
                    "line": 1,
                    "column": 36,
                    "offset": 35
                  },
                  "indent": []
                }
              }
            ],
            "position": {
              "start": {
                "line": 1,
                "column": 1,
                "offset": 0
              },
              "end": {
                "line": 1,
                "column": 36,
                "offset": 35
              }
            }
          },
          "tags": [],
          "loc": {
            "start": {
              "line": 22,
              "column": 4
            },
            "end": {
              "line": 24,
              "column": 6
            }
          },
          "context": {
            "loc": {
              "start": {
                "line": 25,
                "column": 4
              },
              "end": {
                "line": 25,
                "column": 19
              }
            },
            "file": "/Library/WebServer/Documents/mt/lib/models/range.js"
          },
          "name": "max",
          "memberof": "Range",
          "scope": "instance",
          "members": {
            "instance": [],
            "static": [],
            "events": []
          },
          "path": [
            {
              "name": "Range",
              "kind": "class"
            },
            {
              "name": "max",
              "scope": "instance"
            }
          ],
          "namespace": "Range#max"
        },
        {
          "description": {
            "type": "root",
            "children": [
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "{Step} Start value of the range selection",
                    "position": {
                      "start": {
                        "line": 1,
                        "column": 1,
                        "offset": 0
                      },
                      "end": {
                        "line": 1,
                        "column": 42,
                        "offset": 41
                      },
                      "indent": []
                    }
                  }
                ],
                "position": {
                  "start": {
                    "line": 1,
                    "column": 1,
                    "offset": 0
                  },
                  "end": {
                    "line": 1,
                    "column": 42,
                    "offset": 41
                  },
                  "indent": []
                }
              }
            ],
            "position": {
              "start": {
                "line": 1,
                "column": 1,
                "offset": 0
              },
              "end": {
                "line": 1,
                "column": 42,
                "offset": 41
              }
            }
          },
          "tags": [],
          "loc": {
            "start": {
              "line": 27,
              "column": 4
            },
            "end": {
              "line": 29,
              "column": 6
            }
          },
          "context": {
            "loc": {
              "start": {
                "line": 30,
                "column": 4
              },
              "end": {
                "line": 30,
                "column": 40
              }
            },
            "file": "/Library/WebServer/Documents/mt/lib/models/range.js"
          },
          "name": "start",
          "memberof": "Range",
          "scope": "instance",
          "members": {
            "instance": [],
            "static": [],
            "events": []
          },
          "path": [
            {
              "name": "Range",
              "kind": "class"
            },
            {
              "name": "start",
              "scope": "instance"
            }
          ],
          "namespace": "Range#start"
        },
        {
          "description": {
            "type": "root",
            "children": [
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "{Step} End value of the range selection",
                    "position": {
                      "start": {
                        "line": 1,
                        "column": 1,
                        "offset": 0
                      },
                      "end": {
                        "line": 1,
                        "column": 40,
                        "offset": 39
                      },
                      "indent": []
                    }
                  }
                ],
                "position": {
                  "start": {
                    "line": 1,
                    "column": 1,
                    "offset": 0
                  },
                  "end": {
                    "line": 1,
                    "column": 40,
                    "offset": 39
                  },
                  "indent": []
                }
              }
            ],
            "position": {
              "start": {
                "line": 1,
                "column": 1,
                "offset": 0
              },
              "end": {
                "line": 1,
                "column": 40,
                "offset": 39
              }
            }
          },
          "tags": [],
          "loc": {
            "start": {
              "line": 32,
              "column": 4
            },
            "end": {
              "line": 34,
              "column": 6
            }
          },
          "context": {
            "loc": {
              "start": {
                "line": 35,
                "column": 4
              },
              "end": {
                "line": 35,
                "column": 38
              }
            },
            "file": "/Library/WebServer/Documents/mt/lib/models/range.js"
          },
          "name": "end",
          "memberof": "Range",
          "scope": "instance",
          "members": {
            "instance": [],
            "static": [],
            "events": []
          },
          "path": [
            {
              "name": "Range",
              "kind": "class"
            },
            {
              "name": "end",
              "scope": "instance"
            }
          ],
          "namespace": "Range#end"
        },
        {
          "description": {
            "type": "root",
            "children": [
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "{number} Center of the range selection",
                    "position": {
                      "start": {
                        "line": 1,
                        "column": 1,
                        "offset": 0
                      },
                      "end": {
                        "line": 1,
                        "column": 39,
                        "offset": 38
                      },
                      "indent": []
                    }
                  }
                ],
                "position": {
                  "start": {
                    "line": 1,
                    "column": 1,
                    "offset": 0
                  },
                  "end": {
                    "line": 1,
                    "column": 39,
                    "offset": 38
                  },
                  "indent": []
                }
              }
            ],
            "position": {
              "start": {
                "line": 1,
                "column": 1,
                "offset": 0
              },
              "end": {
                "line": 1,
                "column": 39,
                "offset": 38
              }
            }
          },
          "tags": [],
          "loc": {
            "start": {
              "line": 38,
              "column": 2
            },
            "end": {
              "line": 40,
              "column": 4
            }
          },
          "context": {
            "loc": {
              "start": {
                "line": 41,
                "column": 2
              },
              "end": {
                "line": 43,
                "column": 3
              }
            },
            "file": "/Library/WebServer/Documents/mt/lib/models/range.js"
          },
          "name": "center",
          "kind": "member",
          "memberof": "Range",
          "scope": "instance",
          "members": {
            "instance": [],
            "static": [],
            "events": []
          },
          "path": [
            {
              "name": "Range",
              "kind": "class"
            },
            {
              "name": "center",
              "kind": "member",
              "scope": "instance"
            }
          ],
          "namespace": "Range#center"
        },
        {
          "description": {
            "type": "root",
            "children": [
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "{number} Size of the range selection",
                    "position": {
                      "start": {
                        "line": 1,
                        "column": 1,
                        "offset": 0
                      },
                      "end": {
                        "line": 1,
                        "column": 37,
                        "offset": 36
                      },
                      "indent": []
                    }
                  }
                ],
                "position": {
                  "start": {
                    "line": 1,
                    "column": 1,
                    "offset": 0
                  },
                  "end": {
                    "line": 1,
                    "column": 37,
                    "offset": 36
                  },
                  "indent": []
                }
              }
            ],
            "position": {
              "start": {
                "line": 1,
                "column": 1,
                "offset": 0
              },
              "end": {
                "line": 1,
                "column": 37,
                "offset": 36
              }
            }
          },
          "tags": [],
          "loc": {
            "start": {
              "line": 54,
              "column": 2
            },
            "end": {
              "line": 56,
              "column": 4
            }
          },
          "context": {
            "loc": {
              "start": {
                "line": 57,
                "column": 2
              },
              "end": {
                "line": 59,
                "column": 3
              }
            },
            "file": "/Library/WebServer/Documents/mt/lib/models/range.js"
          },
          "name": "size",
          "kind": "member",
          "memberof": "Range",
          "scope": "instance",
          "members": {
            "instance": [],
            "static": [],
            "events": []
          },
          "path": [
            {
              "name": "Range",
              "kind": "class"
            },
            {
              "name": "size",
              "kind": "member",
              "scope": "instance"
            }
          ],
          "namespace": "Range#size"
        },
        {
          "description": {
            "type": "root",
            "children": [
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "Move the range selection",
                    "position": {
                      "start": {
                        "line": 1,
                        "column": 1,
                        "offset": 0
                      },
                      "end": {
                        "line": 1,
                        "column": 25,
                        "offset": 24
                      },
                      "indent": []
                    }
                  }
                ],
                "position": {
                  "start": {
                    "line": 1,
                    "column": 1,
                    "offset": 0
                  },
                  "end": {
                    "line": 1,
                    "column": 25,
                    "offset": 24
                  },
                  "indent": []
                }
              }
            ],
            "position": {
              "start": {
                "line": 1,
                "column": 1,
                "offset": 0
              },
              "end": {
                "line": 1,
                "column": 25,
                "offset": 24
              }
            }
          },
          "tags": [
            {
              "title": "param",
              "description": "New start value of the range selection",
              "lineNumber": 2,
              "type": {
                "type": "NameExpression",
                "name": "number"
              },
              "name": "start"
            },
            {
              "title": "param",
              "description": "New end value of the range selection",
              "lineNumber": 3,
              "type": {
                "type": "NameExpression",
                "name": "number"
              },
              "name": "end"
            }
          ],
          "loc": {
            "start": {
              "line": 70,
              "column": 2
            },
            "end": {
              "line": 74,
              "column": 4
            }
          },
          "context": {
            "loc": {
              "start": {
                "line": 75,
                "column": 2
              },
              "end": {
                "line": 82,
                "column": 3
              }
            },
            "file": "/Library/WebServer/Documents/mt/lib/models/range.js"
          },
          "params": [
            {
              "name": "start",
              "lineNumber": 2,
              "description": {
                "type": "root",
                "children": [
                  {
                    "type": "paragraph",
                    "children": [
                      {
                        "type": "text",
                        "value": "New start value of the range selection",
                        "position": {
                          "start": {
                            "line": 1,
                            "column": 1,
                            "offset": 0
                          },
                          "end": {
                            "line": 1,
                            "column": 39,
                            "offset": 38
                          },
                          "indent": []
                        }
                      }
                    ],
                    "position": {
                      "start": {
                        "line": 1,
                        "column": 1,
                        "offset": 0
                      },
                      "end": {
                        "line": 1,
                        "column": 39,
                        "offset": 38
                      },
                      "indent": []
                    }
                  }
                ],
                "position": {
                  "start": {
                    "line": 1,
                    "column": 1,
                    "offset": 0
                  },
                  "end": {
                    "line": 1,
                    "column": 39,
                    "offset": 38
                  }
                }
              },
              "type": {
                "type": "NameExpression",
                "name": "number"
              }
            },
            {
              "name": "end",
              "lineNumber": 3,
              "description": {
                "type": "root",
                "children": [
                  {
                    "type": "paragraph",
                    "children": [
                      {
                        "type": "text",
                        "value": "New end value of the range selection",
                        "position": {
                          "start": {
                            "line": 1,
                            "column": 1,
                            "offset": 0
                          },
                          "end": {
                            "line": 1,
                            "column": 37,
                            "offset": 36
                          },
                          "indent": []
                        }
                      }
                    ],
                    "position": {
                      "start": {
                        "line": 1,
                        "column": 1,
                        "offset": 0
                      },
                      "end": {
                        "line": 1,
                        "column": 37,
                        "offset": 36
                      },
                      "indent": []
                    }
                  }
                ],
                "position": {
                  "start": {
                    "line": 1,
                    "column": 1,
                    "offset": 0
                  },
                  "end": {
                    "line": 1,
                    "column": 37,
                    "offset": 36
                  }
                }
              },
              "type": {
                "type": "NameExpression",
                "name": "number"
              }
            }
          ],
          "name": "move",
          "kind": "function",
          "memberof": "Range",
          "scope": "instance",
          "members": {
            "instance": [],
            "static": [],
            "events": []
          },
          "path": [
            {
              "name": "Range",
              "kind": "class"
            },
            {
              "name": "move",
              "kind": "function",
              "scope": "instance"
            }
          ],
          "namespace": "Range#move"
        }
      ],
      "static": [],
      "events": []
    },
    "path": [
      {
        "name": "Range",
        "kind": "class"
      }
    ],
    "namespace": "Range"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "Dropdown menu",
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 14,
                  "offset": 13
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 14,
              "offset": 13
            },
            "indent": []
          }
        }
      ],
      "position": {
        "start": {
          "line": 1,
          "column": 1,
          "offset": 0
        },
        "end": {
          "line": 1,
          "column": 14,
          "offset": 13
        }
      }
    },
    "tags": [
      {
        "title": "description",
        "description": "Dropdown menu",
        "lineNumber": 3
      },
      {
        "title": "demo",
        "description": "<span nexus-ui=\"select\"></span>",
        "lineNumber": 5
      },
      {
        "title": "example",
        "description": "var select = new Nexus.Select('#target')",
        "lineNumber": 7
      },
      {
        "title": "example",
        "description": "var select = new Nexus.Select('#target',{\n  'size': [100,30],\n  'options': ['default','options']\n})",
        "lineNumber": 10
      },
      {
        "title": "output",
        "description": "change\nFires any time the interface's value changes. <br>\nThe event data is an object containing the text value of the selected option, as well as the numeric index of the selection.",
        "lineNumber": 16
      },
      {
        "title": "outputexample",
        "description": "select.on('change',function(v) {\n  console.log(v);\n})",
        "lineNumber": 21
      }
    ],
    "loc": {
      "start": {
        "line": 5,
        "column": 0
      },
      "end": {
        "line": 32,
        "column": 2
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 35,
          "column": 0
        },
        "end": {
          "line": 172,
          "column": 1
        }
      },
      "file": "/Library/WebServer/Documents/mt/lib/interfaces/select.js"
    },
    "examples": [
      {
        "description": "var select = new Nexus.Select('#target')"
      },
      {
        "description": "var select = new Nexus.Select('#target',{\n  'size': [100,30],\n  'options': ['default','options']\n})"
      }
    ],
    "name": "Select",
    "augments": [
      {
        "title": "augments",
        "name": "Interface"
      }
    ],
    "kind": "class",
    "members": {
      "instance": [
        {
          "description": {
            "type": "root",
            "children": [
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "Update the list of options. This removes all existing options and creates a new list of options.",
                    "position": {
                      "start": {
                        "line": 1,
                        "column": 1,
                        "offset": 0
                      },
                      "end": {
                        "line": 1,
                        "column": 97,
                        "offset": 96
                      },
                      "indent": []
                    }
                  }
                ],
                "position": {
                  "start": {
                    "line": 1,
                    "column": 1,
                    "offset": 0
                  },
                  "end": {
                    "line": 1,
                    "column": 97,
                    "offset": 96
                  },
                  "indent": []
                }
              }
            ],
            "position": {
              "start": {
                "line": 1,
                "column": 1,
                "offset": 0
              },
              "end": {
                "line": 1,
                "column": 97,
                "offset": 96
              }
            }
          },
          "tags": [
            {
              "title": "param",
              "description": "New array of options",
              "lineNumber": 2,
              "type": {
                "type": "NameExpression",
                "name": "array"
              },
              "name": "options"
            }
          ],
          "loc": {
            "start": {
              "line": 113,
              "column": 2
            },
            "end": {
              "line": 116,
              "column": 5
            }
          },
          "context": {
            "loc": {
              "start": {
                "line": 118,
                "column": 2
              },
              "end": {
                "line": 131,
                "column": 3
              }
            },
            "file": "/Library/WebServer/Documents/mt/lib/interfaces/select.js"
          },
          "params": [
            {
              "name": "options",
              "lineNumber": 2,
              "description": {
                "type": "root",
                "children": [
                  {
                    "type": "paragraph",
                    "children": [
                      {
                        "type": "text",
                        "value": "New array of options",
                        "position": {
                          "start": {
                            "line": 1,
                            "column": 1,
                            "offset": 0
                          },
                          "end": {
                            "line": 1,
                            "column": 21,
                            "offset": 20
                          },
                          "indent": []
                        }
                      }
                    ],
                    "position": {
                      "start": {
                        "line": 1,
                        "column": 1,
                        "offset": 0
                      },
                      "end": {
                        "line": 1,
                        "column": 21,
                        "offset": 20
                      },
                      "indent": []
                    }
                  }
                ],
                "position": {
                  "start": {
                    "line": 1,
                    "column": 1,
                    "offset": 0
                  },
                  "end": {
                    "line": 1,
                    "column": 21,
                    "offset": 20
                  }
                }
              },
              "type": {
                "type": "NameExpression",
                "name": "array"
              }
            }
          ],
          "name": "defineOptions",
          "kind": "function",
          "memberof": "Select",
          "scope": "instance",
          "members": {
            "instance": [],
            "static": [],
            "events": []
          },
          "path": [
            {
              "name": "Select",
              "kind": "class"
            },
            {
              "name": "defineOptions",
              "kind": "function",
              "scope": "instance"
            }
          ],
          "namespace": "Select#defineOptions"
        },
        {
          "description": {
            "type": "root",
            "children": [
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "The text of the option that is currently selected. If set, will update the interface and trigger the output event.",
                    "position": {
                      "start": {
                        "line": 1,
                        "column": 1,
                        "offset": 0
                      },
                      "end": {
                        "line": 1,
                        "column": 115,
                        "offset": 114
                      },
                      "indent": []
                    }
                  }
                ],
                "position": {
                  "start": {
                    "line": 1,
                    "column": 1,
                    "offset": 0
                  },
                  "end": {
                    "line": 1,
                    "column": 115,
                    "offset": 114
                  },
                  "indent": []
                }
              }
            ],
            "position": {
              "start": {
                "line": 1,
                "column": 1,
                "offset": 0
              },
              "end": {
                "line": 1,
                "column": 115,
                "offset": 114
              }
            }
          },
          "tags": [
            {
              "title": "type",
              "description": null,
              "lineNumber": 2,
              "type": {
                "type": "NameExpression",
                "name": "String"
              }
            },
            {
              "title": "example",
              "description": "select.value = \"sawtooth\";",
              "lineNumber": 3
            }
          ],
          "loc": {
            "start": {
              "line": 134,
              "column": 2
            },
            "end": {
              "line": 138,
              "column": 4
            }
          },
          "context": {
            "loc": {
              "start": {
                "line": 139,
                "column": 2
              },
              "end": {
                "line": 141,
                "column": 3
              }
            },
            "file": "/Library/WebServer/Documents/mt/lib/interfaces/select.js"
          },
          "examples": [
            {
              "description": "select.value = \"sawtooth\";"
            }
          ],
          "name": "value",
          "kind": "member",
          "memberof": "Select",
          "scope": "instance",
          "members": {
            "instance": [],
            "static": [],
            "events": []
          },
          "path": [
            {
              "name": "Select",
              "kind": "class"
            },
            {
              "name": "value",
              "kind": "member",
              "scope": "instance"
            }
          ],
          "namespace": "Select#value"
        },
        {
          "description": {
            "type": "root",
            "children": [
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "The numeric index of the option that is currently selected. If set, will update the interface and trigger the output event.",
                    "position": {
                      "start": {
                        "line": 1,
                        "column": 1,
                        "offset": 0
                      },
                      "end": {
                        "line": 1,
                        "column": 124,
                        "offset": 123
                      },
                      "indent": []
                    }
                  }
                ],
                "position": {
                  "start": {
                    "line": 1,
                    "column": 1,
                    "offset": 0
                  },
                  "end": {
                    "line": 1,
                    "column": 124,
                    "offset": 123
                  },
                  "indent": []
                }
              }
            ],
            "position": {
              "start": {
                "line": 1,
                "column": 1,
                "offset": 0
              },
              "end": {
                "line": 1,
                "column": 124,
                "offset": 123
              }
            }
          },
          "tags": [
            {
              "title": "type",
              "description": null,
              "lineNumber": 2,
              "type": {
                "type": "NameExpression",
                "name": "number"
              }
            },
            {
              "title": "example",
              "description": "select.selectedIndex = 2;",
              "lineNumber": 3
            }
          ],
          "loc": {
            "start": {
              "line": 153,
              "column": 2
            },
            "end": {
              "line": 157,
              "column": 4
            }
          },
          "context": {
            "loc": {
              "start": {
                "line": 158,
                "column": 2
              },
              "end": {
                "line": 160,
                "column": 3
              }
            },
            "file": "/Library/WebServer/Documents/mt/lib/interfaces/select.js"
          },
          "examples": [
            {
              "description": "select.selectedIndex = 2;"
            }
          ],
          "name": "selectedIndex",
          "kind": "member",
          "memberof": "Select",
          "scope": "instance",
          "members": {
            "instance": [],
            "static": [],
            "events": []
          },
          "path": [
            {
              "name": "Select",
              "kind": "class"
            },
            {
              "name": "selectedIndex",
              "kind": "member",
              "scope": "instance"
            }
          ],
          "namespace": "Select#selectedIndex"
        }
      ],
      "static": [],
      "events": []
    },
    "path": [
      {
        "name": "Select",
        "kind": "class"
      }
    ],
    "namespace": "Select"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "Grid of buttons with built-in step sequencer.",
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 46,
                  "offset": 45
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 46,
              "offset": 45
            },
            "indent": []
          }
        }
      ],
      "position": {
        "start": {
          "line": 1,
          "column": 1,
          "offset": 0
        },
        "end": {
          "line": 1,
          "column": 46,
          "offset": 45
        }
      }
    },
    "tags": [
      {
        "title": "description",
        "description": "Grid of buttons with built-in step sequencer.",
        "lineNumber": 3
      },
      {
        "title": "demo",
        "description": "<div nexus-ui=\"sequencer\" style=\"width:400px;height:200px;\"></div>",
        "lineNumber": 5
      },
      {
        "title": "example",
        "description": "var sequencer = new Nexus.Sequencer('#target')",
        "lineNumber": 7
      },
      {
        "title": "example",
        "description": "var sequencer = new Nexus.Sequencer('#target',{\n 'size': [400,200],\n 'mode': 'toggle',\n 'rows': 5,\n 'columns': 10\n})",
        "lineNumber": 10
      },
      {
        "title": "output",
        "description": "change\nFires any time the interface's matrix changes. <br>\nThe event data is an object containing <i>row</i> (number), <i>column</i> (number), and <i>state</i> (boolean) properties.",
        "lineNumber": 18
      },
      {
        "title": "outputexample",
        "description": "sequencer.on('change',function(v) {\n  console.log(v);\n})",
        "lineNumber": 23
      },
      {
        "title": "output",
        "description": "step\nFires any time the sequencer steps to the next column, in sequece mode. <br>\nThe event data is an <i>array<i> containing all values in the column, top first.",
        "lineNumber": 28
      },
      {
        "title": "outputexample",
        "description": "sequencer.on('step',function(v) {\n  console.log(v);\n})",
        "lineNumber": 33
      }
    ],
    "loc": {
      "start": {
        "line": 134,
        "column": 0
      },
      "end": {
        "line": 171,
        "column": 2
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 173,
          "column": 0
        },
        "end": {
          "line": 443,
          "column": 1
        }
      },
      "file": "/Library/WebServer/Documents/mt/lib/interfaces/sequencer.js"
    },
    "examples": [
      {
        "description": "var sequencer = new Nexus.Sequencer('#target')"
      },
      {
        "description": "var sequencer = new Nexus.Sequencer('#target',{\n 'size': [400,200],\n 'mode': 'toggle',\n 'rows': 5,\n 'columns': 10\n})"
      }
    ],
    "name": "Sequencer",
    "augments": [
      {
        "title": "augments",
        "name": "Interface"
      }
    ],
    "kind": "class",
    "members": {
      "instance": [
        {
          "description": {
            "type": "root",
            "children": [
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "The interval object which controls timing and sequence scheduling.",
                    "position": {
                      "start": {
                        "line": 1,
                        "column": 1,
                        "offset": 0
                      },
                      "end": {
                        "line": 1,
                        "column": 67,
                        "offset": 66
                      },
                      "indent": []
                    }
                  }
                ],
                "position": {
                  "start": {
                    "line": 1,
                    "column": 1,
                    "offset": 0
                  },
                  "end": {
                    "line": 1,
                    "column": 67,
                    "offset": 66
                  },
                  "indent": []
                }
              }
            ],
            "position": {
              "start": {
                "line": 1,
                "column": 1,
                "offset": 0
              },
              "end": {
                "line": 1,
                "column": 67,
                "offset": 66
              }
            }
          },
          "tags": [
            {
              "title": "type",
              "description": null,
              "lineNumber": 2,
              "type": {
                "type": "NameExpression",
                "name": "interval"
              }
            }
          ],
          "loc": {
            "start": {
              "line": 192,
              "column": 4
            },
            "end": {
              "line": 195,
              "column": 7
            }
          },
          "context": {
            "loc": {
              "start": {
                "line": 196,
                "column": 4
              },
              "end": {
                "line": 196,
                "column": 64
              }
            },
            "file": "/Library/WebServer/Documents/mt/lib/interfaces/sequencer.js"
          },
          "name": "interval",
          "memberof": "Sequencer",
          "scope": "instance",
          "members": {
            "instance": [],
            "static": [],
            "events": []
          },
          "path": [
            {
              "name": "Sequencer",
              "kind": "class"
            },
            {
              "name": "interval",
              "scope": "instance"
            }
          ],
          "namespace": "Sequencer#interval"
        },
        {
          "description": {
            "type": "root",
            "children": [
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "A Matrix model containing methods for manipulating the sequencer's array of values.",
                    "position": {
                      "start": {
                        "line": 1,
                        "column": 1,
                        "offset": 0
                      },
                      "end": {
                        "line": 1,
                        "column": 84,
                        "offset": 83
                      },
                      "indent": []
                    }
                  }
                ],
                "position": {
                  "start": {
                    "line": 1,
                    "column": 1,
                    "offset": 0
                  },
                  "end": {
                    "line": 1,
                    "column": 84,
                    "offset": 83
                  },
                  "indent": []
                }
              }
            ],
            "position": {
              "start": {
                "line": 1,
                "column": 1,
                "offset": 0
              },
              "end": {
                "line": 1,
                "column": 84,
                "offset": 83
              }
            }
          },
          "tags": [
            {
              "title": "type",
              "description": null,
              "lineNumber": 2,
              "type": {
                "type": "NameExpression",
                "name": "Matrix"
              }
            }
          ],
          "loc": {
            "start": {
              "line": 198,
              "column": 4
            },
            "end": {
              "line": 201,
              "column": 6
            }
          },
          "context": {
            "loc": {
              "start": {
                "line": 202,
                "column": 4
              },
              "end": {
                "line": 202,
                "column": 76
              }
            },
            "file": "/Library/WebServer/Documents/mt/lib/interfaces/sequencer.js"
          },
          "name": "matrix",
          "memberof": "Sequencer",
          "scope": "instance",
          "members": {
            "instance": [],
            "static": [],
            "events": []
          },
          "path": [
            {
              "name": "Sequencer",
              "kind": "class"
            },
            {
              "name": "matrix",
              "scope": "instance"
            }
          ],
          "namespace": "Sequencer#matrix"
        },
        {
          "description": {
            "type": "root",
            "children": [
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "A Counter model which the sequencer steps through. For example, you could use this model to step through the sequencer in reverse, randomly, or in a drunk walk.",
                    "position": {
                      "start": {
                        "line": 1,
                        "column": 1,
                        "offset": 0
                      },
                      "end": {
                        "line": 1,
                        "column": 161,
                        "offset": 160
                      },
                      "indent": []
                    }
                  }
                ],
                "position": {
                  "start": {
                    "line": 1,
                    "column": 1,
                    "offset": 0
                  },
                  "end": {
                    "line": 1,
                    "column": 161,
                    "offset": 160
                  },
                  "indent": []
                }
              }
            ],
            "position": {
              "start": {
                "line": 1,
                "column": 1,
                "offset": 0
              },
              "end": {
                "line": 1,
                "column": 161,
                "offset": 160
              }
            }
          },
          "tags": [
            {
              "title": "type",
              "description": null,
              "lineNumber": 2,
              "type": {
                "type": "NameExpression",
                "name": "Counter"
              }
            }
          ],
          "loc": {
            "start": {
              "line": 205,
              "column": 4
            },
            "end": {
              "line": 208,
              "column": 6
            }
          },
          "context": {
            "loc": {
              "start": {
                "line": 209,
                "column": 4
              },
              "end": {
                "line": 209,
                "column": 52
              }
            },
            "file": "/Library/WebServer/Documents/mt/lib/interfaces/sequencer.js"
          },
          "name": "stepper",
          "memberof": "Sequencer",
          "scope": "instance",
          "members": {
            "instance": [],
            "static": [],
            "events": []
          },
          "path": [
            {
              "name": "Sequencer",
              "kind": "class"
            },
            {
              "name": "stepper",
              "scope": "instance"
            }
          ],
          "namespace": "Sequencer#stepper"
        },
        {
          "description": {
            "type": "root",
            "children": [
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "Start sequencing",
                    "position": {
                      "start": {
                        "line": 1,
                        "column": 1,
                        "offset": 0
                      },
                      "end": {
                        "line": 1,
                        "column": 17,
                        "offset": 16
                      },
                      "indent": []
                    }
                  }
                ],
                "position": {
                  "start": {
                    "line": 1,
                    "column": 1,
                    "offset": 0
                  },
                  "end": {
                    "line": 1,
                    "column": 17,
                    "offset": 16
                  },
                  "indent": []
                }
              }
            ],
            "position": {
              "start": {
                "line": 1,
                "column": 1,
                "offset": 0
              },
              "end": {
                "line": 1,
                "column": 17,
                "offset": 16
              }
            }
          },
          "tags": [
            {
              "title": "param",
              "description": "Beat tempo in milliseconds",
              "lineNumber": 2,
              "type": {
                "type": "NameExpression",
                "name": "number"
              },
              "name": "ms"
            }
          ],
          "loc": {
            "start": {
              "line": 336,
              "column": 2
            },
            "end": {
              "line": 339,
              "column": 5
            }
          },
          "context": {
            "loc": {
              "start": {
                "line": 340,
                "column": 2
              },
              "end": {
                "line": 346,
                "column": 3
              }
            },
            "file": "/Library/WebServer/Documents/mt/lib/interfaces/sequencer.js"
          },
          "params": [
            {
              "name": "ms",
              "lineNumber": 2,
              "description": {
                "type": "root",
                "children": [
                  {
                    "type": "paragraph",
                    "children": [
                      {
                        "type": "text",
                        "value": "Beat tempo in milliseconds",
                        "position": {
                          "start": {
                            "line": 1,
                            "column": 1,
                            "offset": 0
                          },
                          "end": {
                            "line": 1,
                            "column": 27,
                            "offset": 26
                          },
                          "indent": []
                        }
                      }
                    ],
                    "position": {
                      "start": {
                        "line": 1,
                        "column": 1,
                        "offset": 0
                      },
                      "end": {
                        "line": 1,
                        "column": 27,
                        "offset": 26
                      },
                      "indent": []
                    }
                  }
                ],
                "position": {
                  "start": {
                    "line": 1,
                    "column": 1,
                    "offset": 0
                  },
                  "end": {
                    "line": 1,
                    "column": 27,
                    "offset": 26
                  }
                }
              },
              "type": {
                "type": "NameExpression",
                "name": "number"
              }
            }
          ],
          "name": "start",
          "kind": "function",
          "memberof": "Sequencer",
          "scope": "instance",
          "members": {
            "instance": [],
            "static": [],
            "events": []
          },
          "path": [
            {
              "name": "Sequencer",
              "kind": "class"
            },
            {
              "name": "start",
              "kind": "function",
              "scope": "instance"
            }
          ],
          "namespace": "Sequencer#start"
        },
        {
          "description": {
            "type": "root",
            "children": [
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "Stop sequencing",
                    "position": {
                      "start": {
                        "line": 1,
                        "column": 1,
                        "offset": 0
                      },
                      "end": {
                        "line": 1,
                        "column": 16,
                        "offset": 15
                      },
                      "indent": []
                    }
                  }
                ],
                "position": {
                  "start": {
                    "line": 1,
                    "column": 1,
                    "offset": 0
                  },
                  "end": {
                    "line": 1,
                    "column": 16,
                    "offset": 15
                  },
                  "indent": []
                }
              }
            ],
            "position": {
              "start": {
                "line": 1,
                "column": 1,
                "offset": 0
              },
              "end": {
                "line": 1,
                "column": 16,
                "offset": 15
              }
            }
          },
          "tags": [],
          "loc": {
            "start": {
              "line": 348,
              "column": 2
            },
            "end": {
              "line": 350,
              "column": 4
            }
          },
          "context": {
            "loc": {
              "start": {
                "line": 351,
                "column": 2
              },
              "end": {
                "line": 353,
                "column": 3
              }
            },
            "file": "/Library/WebServer/Documents/mt/lib/interfaces/sequencer.js"
          },
          "name": "stop",
          "kind": "function",
          "memberof": "Sequencer",
          "scope": "instance",
          "members": {
            "instance": [],
            "static": [],
            "events": []
          },
          "path": [
            {
              "name": "Sequencer",
              "kind": "class"
            },
            {
              "name": "stop",
              "kind": "function",
              "scope": "instance"
            }
          ],
          "namespace": "Sequencer#stop"
        },
        {
          "description": {
            "type": "root",
            "children": [
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "Manually jump to the next column and trigger the 'change' event. The \"next\" column is determined by your mode of sequencing.",
                    "position": {
                      "start": {
                        "line": 1,
                        "column": 1,
                        "offset": 0
                      },
                      "end": {
                        "line": 1,
                        "column": 125,
                        "offset": 124
                      },
                      "indent": []
                    }
                  }
                ],
                "position": {
                  "start": {
                    "line": 1,
                    "column": 1,
                    "offset": 0
                  },
                  "end": {
                    "line": 1,
                    "column": 125,
                    "offset": 124
                  },
                  "indent": []
                }
              }
            ],
            "position": {
              "start": {
                "line": 1,
                "column": 1,
                "offset": 0
              },
              "end": {
                "line": 1,
                "column": 125,
                "offset": 124
              }
            }
          },
          "tags": [],
          "loc": {
            "start": {
              "line": 355,
              "column": 2
            },
            "end": {
              "line": 357,
              "column": 4
            }
          },
          "context": {
            "loc": {
              "start": {
                "line": 358,
                "column": 2
              },
              "end": {
                "line": 362,
                "column": 3
              }
            },
            "file": "/Library/WebServer/Documents/mt/lib/interfaces/sequencer.js"
          },
          "name": "next",
          "kind": "function",
          "memberof": "Sequencer",
          "scope": "instance",
          "members": {
            "instance": [],
            "static": [],
            "events": []
          },
          "path": [
            {
              "name": "Sequencer",
              "kind": "class"
            },
            {
              "name": "next",
              "kind": "function",
              "scope": "instance"
            }
          ],
          "namespace": "Sequencer#next"
        },
        {
          "description": {
            "type": "root",
            "children": [
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "Number of rows in the sequencer",
                    "position": {
                      "start": {
                        "line": 1,
                        "column": 1,
                        "offset": 0
                      },
                      "end": {
                        "line": 1,
                        "column": 32,
                        "offset": 31
                      },
                      "indent": []
                    }
                  }
                ],
                "position": {
                  "start": {
                    "line": 1,
                    "column": 1,
                    "offset": 0
                  },
                  "end": {
                    "line": 1,
                    "column": 32,
                    "offset": 31
                  },
                  "indent": []
                }
              }
            ],
            "position": {
              "start": {
                "line": 1,
                "column": 1,
                "offset": 0
              },
              "end": {
                "line": 1,
                "column": 32,
                "offset": 31
              }
            }
          },
          "tags": [
            {
              "title": "type",
              "description": null,
              "lineNumber": 2,
              "type": {
                "type": "NameExpression",
                "name": "number"
              }
            }
          ],
          "loc": {
            "start": {
              "line": 412,
              "column": 2
            },
            "end": {
              "line": 415,
              "column": 4
            }
          },
          "context": {
            "loc": {
              "start": {
                "line": 416,
                "column": 2
              },
              "end": {
                "line": 418,
                "column": 3
              }
            },
            "file": "/Library/WebServer/Documents/mt/lib/interfaces/sequencer.js"
          },
          "name": "rows",
          "kind": "member",
          "memberof": "Sequencer",
          "scope": "instance",
          "members": {
            "instance": [],
            "static": [],
            "events": []
          },
          "path": [
            {
              "name": "Sequencer",
              "kind": "class"
            },
            {
              "name": "rows",
              "kind": "member",
              "scope": "instance"
            }
          ],
          "namespace": "Sequencer#rows"
        },
        {
          "description": {
            "type": "root",
            "children": [
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "Number of columns in the sequencer",
                    "position": {
                      "start": {
                        "line": 1,
                        "column": 1,
                        "offset": 0
                      },
                      "end": {
                        "line": 1,
                        "column": 35,
                        "offset": 34
                      },
                      "indent": []
                    }
                  }
                ],
                "position": {
                  "start": {
                    "line": 1,
                    "column": 1,
                    "offset": 0
                  },
                  "end": {
                    "line": 1,
                    "column": 35,
                    "offset": 34
                  },
                  "indent": []
                }
              }
            ],
            "position": {
              "start": {
                "line": 1,
                "column": 1,
                "offset": 0
              },
              "end": {
                "line": 1,
                "column": 35,
                "offset": 34
              }
            }
          },
          "tags": [
            {
              "title": "type",
              "description": null,
              "lineNumber": 2,
              "type": {
                "type": "NameExpression",
                "name": "number"
              }
            }
          ],
          "loc": {
            "start": {
              "line": 427,
              "column": 2
            },
            "end": {
              "line": 430,
              "column": 4
            }
          },
          "context": {
            "loc": {
              "start": {
                "line": 431,
                "column": 2
              },
              "end": {
                "line": 433,
                "column": 3
              }
            },
            "file": "/Library/WebServer/Documents/mt/lib/interfaces/sequencer.js"
          },
          "name": "columns",
          "kind": "member",
          "memberof": "Sequencer",
          "scope": "instance",
          "members": {
            "instance": [],
            "static": [],
            "events": []
          },
          "path": [
            {
              "name": "Sequencer",
              "kind": "class"
            },
            {
              "name": "columns",
              "kind": "member",
              "scope": "instance"
            }
          ],
          "namespace": "Sequencer#columns"
        }
      ],
      "static": [],
      "events": []
    },
    "path": [
      {
        "name": "Sequencer",
        "kind": "class"
      }
    ],
    "namespace": "Sequencer"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "Horizontal or vertical slider with settable interaction modes.",
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 63,
                  "offset": 62
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 63,
              "offset": 62
            },
            "indent": []
          }
        }
      ],
      "position": {
        "start": {
          "line": 1,
          "column": 1,
          "offset": 0
        },
        "end": {
          "line": 1,
          "column": 63,
          "offset": 62
        }
      }
    },
    "tags": [
      {
        "title": "description",
        "description": "Horizontal or vertical slider with settable interaction modes.",
        "lineNumber": 3
      },
      {
        "title": "demo",
        "description": "<span nexus-ui=\"slider\" step=0.2></span>",
        "lineNumber": 5
      },
      {
        "title": "example",
        "description": "var slider = new Nexus.Slider('#target')",
        "lineNumber": 7
      },
      {
        "title": "example",
        "description": "var slider = new Nexus.Slider('#target',{\n    'size': [120,20],\n    'orientation': 'vertical',  // 'vertical' or 'horizontal'\n    'mode': 'relative',  // 'relative' or 'absolute'\n    'min': 0,\n    'max': 1,\n    'step': 0,\n    'value': 0,\n    'hasKnob': true\n})",
        "lineNumber": 10
      },
      {
        "title": "output",
        "description": "change\nFires when the interface's value changes. <br>\nEvent data: <i>number</i> The number value of the interface.",
        "lineNumber": 22
      },
      {
        "title": "outputexample",
        "description": "slider.on('change',function(v) {\n  console.log(v);\n})",
        "lineNumber": 27
      }
    ],
    "loc": {
      "start": {
        "line": 8,
        "column": 0
      },
      "end": {
        "line": 41,
        "column": 2
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 43,
          "column": 0
        },
        "end": {
          "line": 285,
          "column": 1
        }
      },
      "file": "/Library/WebServer/Documents/mt/lib/interfaces/slider.js"
    },
    "examples": [
      {
        "description": "var slider = new Nexus.Slider('#target')"
      },
      {
        "description": "var slider = new Nexus.Slider('#target',{\n    'size': [120,20],\n    'orientation': 'vertical',  // 'vertical' or 'horizontal'\n    'mode': 'relative',  // 'relative' or 'absolute'\n    'min': 0,\n    'max': 1,\n    'step': 0,\n    'value': 0,\n    'hasKnob': true\n})"
      }
    ],
    "name": "Slider",
    "augments": [
      {
        "title": "augments",
        "name": "Interface"
      }
    ],
    "kind": "class",
    "members": {
      "instance": [
        {
          "description": {
            "type": "root",
            "children": [
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "The slider's current value. If set manually, will update the interface and trigger the output event.",
                    "position": {
                      "start": {
                        "line": 1,
                        "column": 1,
                        "offset": 0
                      },
                      "end": {
                        "line": 1,
                        "column": 101,
                        "offset": 100
                      },
                      "indent": []
                    }
                  }
                ],
                "position": {
                  "start": {
                    "line": 1,
                    "column": 1,
                    "offset": 0
                  },
                  "end": {
                    "line": 1,
                    "column": 101,
                    "offset": 100
                  },
                  "indent": []
                }
              }
            ],
            "position": {
              "start": {
                "line": 1,
                "column": 1,
                "offset": 0
              },
              "end": {
                "line": 1,
                "column": 101,
                "offset": 100
              }
            }
          },
          "tags": [
            {
              "title": "type",
              "description": null,
              "lineNumber": 2,
              "type": {
                "type": "NameExpression",
                "name": "number"
              }
            },
            {
              "title": "example",
              "description": "slider.value = 10;",
              "lineNumber": 3
            }
          ],
          "loc": {
            "start": {
              "line": 220,
              "column": 2
            },
            "end": {
              "line": 224,
              "column": 4
            }
          },
          "context": {
            "loc": {
              "start": {
                "line": 225,
                "column": 2
              },
              "end": {
                "line": 227,
                "column": 3
              }
            },
            "file": "/Library/WebServer/Documents/mt/lib/interfaces/slider.js"
          },
          "examples": [
            {
              "description": "slider.value = 10;"
            }
          ],
          "name": "value",
          "kind": "member",
          "memberof": "Slider",
          "scope": "instance",
          "members": {
            "instance": [],
            "static": [],
            "events": []
          },
          "path": [
            {
              "name": "Slider",
              "kind": "class"
            },
            {
              "name": "value",
              "kind": "member",
              "scope": "instance"
            }
          ],
          "namespace": "Slider#value"
        },
        {
          "description": {
            "type": "root",
            "children": [
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "Lower limit of the sliders's output range",
                    "position": {
                      "start": {
                        "line": 1,
                        "column": 1,
                        "offset": 0
                      },
                      "end": {
                        "line": 1,
                        "column": 42,
                        "offset": 41
                      },
                      "indent": []
                    }
                  }
                ],
                "position": {
                  "start": {
                    "line": 1,
                    "column": 1,
                    "offset": 0
                  },
                  "end": {
                    "line": 1,
                    "column": 42,
                    "offset": 41
                  },
                  "indent": []
                }
              }
            ],
            "position": {
              "start": {
                "line": 1,
                "column": 1,
                "offset": 0
              },
              "end": {
                "line": 1,
                "column": 42,
                "offset": 41
              }
            }
          },
          "tags": [
            {
              "title": "type",
              "description": null,
              "lineNumber": 2,
              "type": {
                "type": "NameExpression",
                "name": "number"
              }
            },
            {
              "title": "example",
              "description": "slider.min = 1000;",
              "lineNumber": 3
            }
          ],
          "loc": {
            "start": {
              "line": 235,
              "column": 2
            },
            "end": {
              "line": 239,
              "column": 4
            }
          },
          "context": {
            "loc": {
              "start": {
                "line": 240,
                "column": 2
              },
              "end": {
                "line": 242,
                "column": 3
              }
            },
            "file": "/Library/WebServer/Documents/mt/lib/interfaces/slider.js"
          },
          "examples": [
            {
              "description": "slider.min = 1000;"
            }
          ],
          "name": "min",
          "kind": "member",
          "memberof": "Slider",
          "scope": "instance",
          "members": {
            "instance": [],
            "static": [],
            "events": []
          },
          "path": [
            {
              "name": "Slider",
              "kind": "class"
            },
            {
              "name": "min",
              "kind": "member",
              "scope": "instance"
            }
          ],
          "namespace": "Slider#min"
        },
        {
          "description": {
            "type": "root",
            "children": [
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "Upper limit of the slider's output range",
                    "position": {
                      "start": {
                        "line": 1,
                        "column": 1,
                        "offset": 0
                      },
                      "end": {
                        "line": 1,
                        "column": 41,
                        "offset": 40
                      },
                      "indent": []
                    }
                  }
                ],
                "position": {
                  "start": {
                    "line": 1,
                    "column": 1,
                    "offset": 0
                  },
                  "end": {
                    "line": 1,
                    "column": 41,
                    "offset": 40
                  },
                  "indent": []
                }
              }
            ],
            "position": {
              "start": {
                "line": 1,
                "column": 1,
                "offset": 0
              },
              "end": {
                "line": 1,
                "column": 41,
                "offset": 40
              }
            }
          },
          "tags": [
            {
              "title": "type",
              "description": null,
              "lineNumber": 2,
              "type": {
                "type": "NameExpression",
                "name": "number"
              }
            },
            {
              "title": "example",
              "description": "slider.max = 1000;",
              "lineNumber": 3
            }
          ],
          "loc": {
            "start": {
              "line": 247,
              "column": 2
            },
            "end": {
              "line": 251,
              "column": 4
            }
          },
          "context": {
            "loc": {
              "start": {
                "line": 252,
                "column": 2
              },
              "end": {
                "line": 254,
                "column": 3
              }
            },
            "file": "/Library/WebServer/Documents/mt/lib/interfaces/slider.js"
          },
          "examples": [
            {
              "description": "slider.max = 1000;"
            }
          ],
          "name": "max",
          "kind": "member",
          "memberof": "Slider",
          "scope": "instance",
          "members": {
            "instance": [],
            "static": [],
            "events": []
          },
          "path": [
            {
              "name": "Slider",
              "kind": "class"
            },
            {
              "name": "max",
              "kind": "member",
              "scope": "instance"
            }
          ],
          "namespace": "Slider#max"
        },
        {
          "description": {
            "type": "root",
            "children": [
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "The increment that the slider's value changes by.",
                    "position": {
                      "start": {
                        "line": 1,
                        "column": 1,
                        "offset": 0
                      },
                      "end": {
                        "line": 1,
                        "column": 50,
                        "offset": 49
                      },
                      "indent": []
                    }
                  }
                ],
                "position": {
                  "start": {
                    "line": 1,
                    "column": 1,
                    "offset": 0
                  },
                  "end": {
                    "line": 1,
                    "column": 50,
                    "offset": 49
                  },
                  "indent": []
                }
              }
            ],
            "position": {
              "start": {
                "line": 1,
                "column": 1,
                "offset": 0
              },
              "end": {
                "line": 1,
                "column": 50,
                "offset": 49
              }
            }
          },
          "tags": [
            {
              "title": "type",
              "description": null,
              "lineNumber": 2,
              "type": {
                "type": "NameExpression",
                "name": "number"
              }
            },
            {
              "title": "example",
              "description": "slider.step = 5;",
              "lineNumber": 3
            }
          ],
          "loc": {
            "start": {
              "line": 259,
              "column": 2
            },
            "end": {
              "line": 263,
              "column": 4
            }
          },
          "context": {
            "loc": {
              "start": {
                "line": 264,
                "column": 2
              },
              "end": {
                "line": 266,
                "column": 3
              }
            },
            "file": "/Library/WebServer/Documents/mt/lib/interfaces/slider.js"
          },
          "examples": [
            {
              "description": "slider.step = 5;"
            }
          ],
          "name": "step",
          "kind": "member",
          "memberof": "Slider",
          "scope": "instance",
          "members": {
            "instance": [],
            "static": [],
            "events": []
          },
          "path": [
            {
              "name": "Slider",
              "kind": "class"
            },
            {
              "name": "step",
              "kind": "member",
              "scope": "instance"
            }
          ],
          "namespace": "Slider#step"
        },
        {
          "description": {
            "type": "root",
            "children": [
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "Absolute mode (slider's value jumps to mouse click position) or relative mode (mouse drag changes value relative to its current position). Default: \"relative\".",
                    "position": {
                      "start": {
                        "line": 1,
                        "column": 1,
                        "offset": 0
                      },
                      "end": {
                        "line": 1,
                        "column": 160,
                        "offset": 159
                      },
                      "indent": []
                    }
                  }
                ],
                "position": {
                  "start": {
                    "line": 1,
                    "column": 1,
                    "offset": 0
                  },
                  "end": {
                    "line": 1,
                    "column": 160,
                    "offset": 159
                  },
                  "indent": []
                }
              }
            ],
            "position": {
              "start": {
                "line": 1,
                "column": 1,
                "offset": 0
              },
              "end": {
                "line": 1,
                "column": 160,
                "offset": 159
              }
            }
          },
          "tags": [
            {
              "title": "type",
              "description": null,
              "lineNumber": 2,
              "type": {
                "type": "NameExpression",
                "name": "string"
              }
            },
            {
              "title": "example",
              "description": "slider.mode = \"relative\";",
              "lineNumber": 3
            }
          ],
          "loc": {
            "start": {
              "line": 271,
              "column": 2
            },
            "end": {
              "line": 275,
              "column": 4
            }
          },
          "context": {
            "loc": {
              "start": {
                "line": 276,
                "column": 2
              },
              "end": {
                "line": 278,
                "column": 3
              }
            },
            "file": "/Library/WebServer/Documents/mt/lib/interfaces/slider.js"
          },
          "examples": [
            {
              "description": "slider.mode = \"relative\";"
            }
          ],
          "name": "mode",
          "kind": "member",
          "memberof": "Slider",
          "scope": "instance",
          "members": {
            "instance": [],
            "static": [],
            "events": []
          },
          "path": [
            {
              "name": "Slider",
              "kind": "class"
            },
            {
              "name": "mode",
              "kind": "member",
              "scope": "instance"
            }
          ],
          "namespace": "Slider#mode"
        }
      ],
      "static": [],
      "events": []
    },
    "path": [
      {
        "name": "Slider",
        "kind": "class"
      }
    ],
    "namespace": "Slider"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "Audio spectrum visualization",
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 29,
                  "offset": 28
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 29,
              "offset": 28
            },
            "indent": []
          }
        }
      ],
      "position": {
        "start": {
          "line": 1,
          "column": 1,
          "offset": 0
        },
        "end": {
          "line": 1,
          "column": 29,
          "offset": 28
        }
      }
    },
    "tags": [
      {
        "title": "description",
        "description": "Audio spectrum visualization",
        "lineNumber": 3
      },
      {
        "title": "demo",
        "description": "<span nexus-ui=\"spectrogram\"></span>",
        "lineNumber": 5
      },
      {
        "title": "example",
        "description": "var spectrogram = new Nexus.Spectrogram('#target')",
        "lineNumber": 7
      },
      {
        "title": "example",
        "description": "var spectrogram = new Nexus.Spectrogram('#target',{\n  'size': [300,150]\n})",
        "lineNumber": 10
      },
      {
        "title": "output",
        "description": "&nbsp;\nNo events",
        "lineNumber": 15
      }
    ],
    "loc": {
      "start": {
        "line": 7,
        "column": 0
      },
      "end": {
        "line": 26,
        "column": 2
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 28,
          "column": 0
        },
        "end": {
          "line": 130,
          "column": 1
        }
      },
      "file": "/Library/WebServer/Documents/mt/lib/interfaces/spectrogram.js"
    },
    "examples": [
      {
        "description": "var spectrogram = new Nexus.Spectrogram('#target')"
      },
      {
        "description": "var spectrogram = new Nexus.Spectrogram('#target',{\n  'size': [300,150]\n})"
      }
    ],
    "name": "Spectrogram",
    "augments": [
      {
        "title": "augments",
        "name": "Interface"
      }
    ],
    "kind": "class",
    "members": {
      "instance": [
        {
          "description": {
            "type": "root",
            "children": [
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "Equivalent to \"patching in\" an audio node to visualize.",
                    "position": {
                      "start": {
                        "line": 1,
                        "column": 1,
                        "offset": 0
                      },
                      "end": {
                        "line": 1,
                        "column": 56,
                        "offset": 55
                      },
                      "indent": []
                    }
                  }
                ],
                "position": {
                  "start": {
                    "line": 1,
                    "column": 1,
                    "offset": 0
                  },
                  "end": {
                    "line": 1,
                    "column": 56,
                    "offset": 55
                  },
                  "indent": []
                }
              }
            ],
            "position": {
              "start": {
                "line": 1,
                "column": 1,
                "offset": 0
              },
              "end": {
                "line": 1,
                "column": 56,
                "offset": 55
              }
            }
          },
          "tags": [
            {
              "title": "param",
              "description": "{AudioNode} The audio node to visualize",
              "lineNumber": 2,
              "type": null,
              "name": "node"
            }
          ],
          "loc": {
            "start": {
              "line": 100,
              "column": 2
            },
            "end": {
              "line": 103,
              "column": 4
            }
          },
          "context": {
            "loc": {
              "start": {
                "line": 104,
                "column": 2
              },
              "end": {
                "line": 111,
                "column": 3
              }
            },
            "file": "/Library/WebServer/Documents/mt/lib/interfaces/spectrogram.js"
          },
          "params": [
            {
              "name": "node",
              "lineNumber": 2,
              "description": {
                "type": "root",
                "children": [
                  {
                    "type": "paragraph",
                    "children": [
                      {
                        "type": "text",
                        "value": "{AudioNode} The audio node to visualize",
                        "position": {
                          "start": {
                            "line": 1,
                            "column": 1,
                            "offset": 0
                          },
                          "end": {
                            "line": 1,
                            "column": 40,
                            "offset": 39
                          },
                          "indent": []
                        }
                      }
                    ],
                    "position": {
                      "start": {
                        "line": 1,
                        "column": 1,
                        "offset": 0
                      },
                      "end": {
                        "line": 1,
                        "column": 40,
                        "offset": 39
                      },
                      "indent": []
                    }
                  }
                ],
                "position": {
                  "start": {
                    "line": 1,
                    "column": 1,
                    "offset": 0
                  },
                  "end": {
                    "line": 1,
                    "column": 40,
                    "offset": 39
                  }
                }
              }
            }
          ],
          "name": "connect",
          "kind": "function",
          "memberof": "Spectrogram",
          "scope": "instance",
          "members": {
            "instance": [],
            "static": [],
            "events": []
          },
          "path": [
            {
              "name": "Spectrogram",
              "kind": "class"
            },
            {
              "name": "connect",
              "kind": "function",
              "scope": "instance"
            }
          ],
          "namespace": "Spectrogram#connect"
        },
        {
          "description": {
            "type": "root",
            "children": [
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "Stop visualizing the source node and disconnect it.",
                    "position": {
                      "start": {
                        "line": 1,
                        "column": 1,
                        "offset": 0
                      },
                      "end": {
                        "line": 1,
                        "column": 52,
                        "offset": 51
                      },
                      "indent": []
                    }
                  }
                ],
                "position": {
                  "start": {
                    "line": 1,
                    "column": 1,
                    "offset": 0
                  },
                  "end": {
                    "line": 1,
                    "column": 52,
                    "offset": 51
                  },
                  "indent": []
                }
              }
            ],
            "position": {
              "start": {
                "line": 1,
                "column": 1,
                "offset": 0
              },
              "end": {
                "line": 1,
                "column": 52,
                "offset": 51
              }
            }
          },
          "tags": [],
          "loc": {
            "start": {
              "line": 113,
              "column": 2
            },
            "end": {
              "line": 115,
              "column": 4
            }
          },
          "context": {
            "loc": {
              "start": {
                "line": 116,
                "column": 2
              },
              "end": {
                "line": 119,
                "column": 3
              }
            },
            "file": "/Library/WebServer/Documents/mt/lib/interfaces/spectrogram.js"
          },
          "name": "disconnect",
          "kind": "function",
          "memberof": "Spectrogram",
          "scope": "instance",
          "members": {
            "instance": [],
            "static": [],
            "events": []
          },
          "path": [
            {
              "name": "Spectrogram",
              "kind": "class"
            },
            {
              "name": "disconnect",
              "kind": "function",
              "scope": "instance"
            }
          ],
          "namespace": "Spectrogram#disconnect"
        }
      ],
      "static": [],
      "events": []
    },
    "path": [
      {
        "name": "Spectrogram",
        "kind": "class"
      }
    ],
    "namespace": "Spectrogram"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "Text button",
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 12,
                  "offset": 11
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 12,
              "offset": 11
            },
            "indent": []
          }
        }
      ],
      "position": {
        "start": {
          "line": 1,
          "column": 1,
          "offset": 0
        },
        "end": {
          "line": 1,
          "column": 12,
          "offset": 11
        }
      }
    },
    "tags": [
      {
        "title": "description",
        "description": "Text button",
        "lineNumber": 3
      },
      {
        "title": "demo",
        "description": "<span nexus-ui=\"textButton\"></span>",
        "lineNumber": 5
      },
      {
        "title": "example",
        "description": "var textbutton = new Nexus.TextButton('#target')",
        "lineNumber": 7
      },
      {
        "title": "example",
        "description": "var dial = new Nexus.TextButton('#target',{\n    'size': [150,50],\n    'value': 0,\n    'text': 'Play',\n    'alternate': false\n})",
        "lineNumber": 10
      },
      {
        "title": "output",
        "description": "change\nFires any time the interface's value changes. <br>\nThe event data is a <i>string</i> of the text on the button at the moment it was clicked.",
        "lineNumber": 18
      },
      {
        "title": "outputexample",
        "description": "textbutton.on('change',function(v) {\n  console.log(v);\n})",
        "lineNumber": 23
      }
    ],
    "loc": {
      "start": {
        "line": 5,
        "column": 0
      },
      "end": {
        "line": 33,
        "column": 2
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 35,
          "column": 0
        },
        "end": {
          "line": 148,
          "column": 1
        }
      },
      "file": "/Library/WebServer/Documents/mt/lib/interfaces/textbutton.js"
    },
    "examples": [
      {
        "description": "var textbutton = new Nexus.TextButton('#target')"
      },
      {
        "description": "var dial = new Nexus.TextButton('#target',{\n    'size': [150,50],\n    'value': 0,\n    'text': 'Play',\n    'alternate': false\n})"
      }
    ],
    "name": "TextButton",
    "augments": [
      {
        "title": "augments",
        "name": "ButtonTemplate"
      }
    ],
    "kind": "class",
    "members": {
      "instance": [
        {
          "description": {
            "type": "root",
            "children": [
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "The text to display when the button is in its \"on\" state. If set, this puts the button in \"toggle\" mode.",
                    "position": {
                      "start": {
                        "line": 1,
                        "column": 1,
                        "offset": 0
                      },
                      "end": {
                        "line": 1,
                        "column": 105,
                        "offset": 104
                      },
                      "indent": []
                    }
                  }
                ],
                "position": {
                  "start": {
                    "line": 1,
                    "column": 1,
                    "offset": 0
                  },
                  "end": {
                    "line": 1,
                    "column": 105,
                    "offset": 104
                  },
                  "indent": []
                }
              }
            ],
            "position": {
              "start": {
                "line": 1,
                "column": 1,
                "offset": 0
              },
              "end": {
                "line": 1,
                "column": 105,
                "offset": 104
              }
            }
          },
          "tags": [
            {
              "title": "type",
              "description": null,
              "lineNumber": 2,
              "type": {
                "type": "NameExpression",
                "name": "String"
              }
            }
          ],
          "loc": {
            "start": {
              "line": 114,
              "column": 2
            },
            "end": {
              "line": 117,
              "column": 4
            }
          },
          "context": {
            "loc": {
              "start": {
                "line": 118,
                "column": 2
              },
              "end": {
                "line": 120,
                "column": 3
              }
            },
            "file": "/Library/WebServer/Documents/mt/lib/interfaces/textbutton.js"
          },
          "name": "alternateText",
          "kind": "member",
          "memberof": "TextButton",
          "scope": "instance",
          "members": {
            "instance": [],
            "static": [],
            "events": []
          },
          "path": [
            {
              "name": "TextButton",
              "kind": "class"
            },
            {
              "name": "alternateText",
              "kind": "member",
              "scope": "instance"
            }
          ],
          "namespace": "TextButton#alternateText"
        },
        {
          "description": {
            "type": "root",
            "children": [
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "The text to display. (If .alternateText exists, then this .text will only be displayed when the button is in its \"off\" state.)",
                    "position": {
                      "start": {
                        "line": 1,
                        "column": 1,
                        "offset": 0
                      },
                      "end": {
                        "line": 1,
                        "column": 127,
                        "offset": 126
                      },
                      "indent": []
                    }
                  }
                ],
                "position": {
                  "start": {
                    "line": 1,
                    "column": 1,
                    "offset": 0
                  },
                  "end": {
                    "line": 1,
                    "column": 127,
                    "offset": 126
                  },
                  "indent": []
                }
              }
            ],
            "position": {
              "start": {
                "line": 1,
                "column": 1,
                "offset": 0
              },
              "end": {
                "line": 1,
                "column": 127,
                "offset": 126
              }
            }
          },
          "tags": [
            {
              "title": "type",
              "description": null,
              "lineNumber": 2,
              "type": {
                "type": "NameExpression",
                "name": "String"
              }
            }
          ],
          "loc": {
            "start": {
              "line": 133,
              "column": 2
            },
            "end": {
              "line": 136,
              "column": 4
            }
          },
          "context": {
            "loc": {
              "start": {
                "line": 137,
                "column": 2
              },
              "end": {
                "line": 139,
                "column": 3
              }
            },
            "file": "/Library/WebServer/Documents/mt/lib/interfaces/textbutton.js"
          },
          "name": "text",
          "kind": "member",
          "memberof": "TextButton",
          "scope": "instance",
          "members": {
            "instance": [],
            "static": [],
            "events": []
          },
          "path": [
            {
              "name": "TextButton",
              "kind": "class"
            },
            {
              "name": "text",
              "kind": "member",
              "scope": "instance"
            }
          ],
          "namespace": "TextButton#text"
        }
      ],
      "static": [],
      "events": []
    },
    "path": [
      {
        "name": "TextButton",
        "kind": "class"
      }
    ],
    "namespace": "TextButton"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "2- or 3-axis tilt sensor (depending on your device and browser).",
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 65,
                  "offset": 64
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 65,
              "offset": 64
            },
            "indent": []
          }
        }
      ],
      "position": {
        "start": {
          "line": 1,
          "column": 1,
          "offset": 0
        },
        "end": {
          "line": 1,
          "column": 65,
          "offset": 64
        }
      }
    },
    "tags": [
      {
        "title": "description",
        "description": "2- or 3-axis tilt sensor (depending on your device and browser).",
        "lineNumber": 3
      },
      {
        "title": "demo",
        "description": "<span mt='tilt'></span>",
        "lineNumber": 5
      },
      {
        "title": "example",
        "description": "var tilt = new mt.Tilt('#target')",
        "lineNumber": 7
      },
      {
        "title": "output",
        "description": "change\nFires at a regular interval, as long as this interface is active (see the interface's <i>.active</i> property)<br>\nThe event data is an <i>object</i> containing x (number) and y (number) properties which represent the current tilt state of the device.",
        "lineNumber": 10
      },
      {
        "title": "outputexample",
        "description": "tilt.on('change',function(v) {\n  console.log(v);\n})",
        "lineNumber": 15
      }
    ],
    "loc": {
      "start": {
        "line": 7,
        "column": 0
      },
      "end": {
        "line": 28,
        "column": 2
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 30,
          "column": 0
        },
        "end": {
          "line": 155,
          "column": 1
        }
      },
      "file": "/Library/WebServer/Documents/mt/lib/interfaces/tilt-backup.js"
    },
    "examples": [
      {
        "description": "var tilt = new mt.Tilt('#target')"
      }
    ],
    "name": "Tilt",
    "augments": [
      {
        "title": "augments",
        "name": "Interface"
      }
    ],
    "kind": "class",
    "members": {
      "instance": [
        {
          "description": {
            "type": "root",
            "children": [
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "Whether the interface is on (emitting values) or off (paused & not emitting values). Setting this property will update it.",
                    "position": {
                      "start": {
                        "line": 1,
                        "column": 1,
                        "offset": 0
                      },
                      "end": {
                        "line": 1,
                        "column": 123,
                        "offset": 122
                      },
                      "indent": []
                    }
                  }
                ],
                "position": {
                  "start": {
                    "line": 1,
                    "column": 1,
                    "offset": 0
                  },
                  "end": {
                    "line": 1,
                    "column": 123,
                    "offset": 122
                  },
                  "indent": []
                }
              }
            ],
            "position": {
              "start": {
                "line": 1,
                "column": 1,
                "offset": 0
              },
              "end": {
                "line": 1,
                "column": 123,
                "offset": 122
              }
            }
          },
          "tags": [
            {
              "title": "type",
              "description": null,
              "lineNumber": 2,
              "type": {
                "type": "NameExpression",
                "name": "boolean"
              }
            }
          ],
          "loc": {
            "start": {
              "line": 141,
              "column": 2
            },
            "end": {
              "line": 144,
              "column": 4
            }
          },
          "context": {
            "loc": {
              "start": {
                "line": 146,
                "column": 2
              },
              "end": {
                "line": 148,
                "column": 3
              }
            },
            "file": "/Library/WebServer/Documents/mt/lib/interfaces/tilt-backup.js"
          },
          "name": "active",
          "kind": "member",
          "memberof": "Tilt",
          "scope": "instance",
          "members": {
            "instance": [],
            "static": [],
            "events": []
          },
          "path": [
            {
              "name": "Tilt",
              "kind": "class"
            },
            {
              "name": "active",
              "kind": "member",
              "scope": "instance"
            }
          ],
          "namespace": "Tilt#active"
        },
        {
          "description": {
            "type": "root",
            "children": [
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "Whether the interface is on (emitting values) or off (paused & not emitting values). Setting this property will update it.",
                    "position": {
                      "start": {
                        "line": 1,
                        "column": 1,
                        "offset": 0
                      },
                      "end": {
                        "line": 1,
                        "column": 123,
                        "offset": 122
                      },
                      "indent": []
                    }
                  }
                ],
                "position": {
                  "start": {
                    "line": 1,
                    "column": 1,
                    "offset": 0
                  },
                  "end": {
                    "line": 1,
                    "column": 123,
                    "offset": 122
                  },
                  "indent": []
                }
              }
            ],
            "position": {
              "start": {
                "line": 1,
                "column": 1,
                "offset": 0
              },
              "end": {
                "line": 1,
                "column": 123,
                "offset": 122
              }
            }
          },
          "tags": [
            {
              "title": "type",
              "description": null,
              "lineNumber": 2,
              "type": {
                "type": "NameExpression",
                "name": "boolean"
              }
            }
          ],
          "loc": {
            "start": {
              "line": 140,
              "column": 2
            },
            "end": {
              "line": 143,
              "column": 4
            }
          },
          "context": {
            "loc": {
              "start": {
                "line": 145,
                "column": 2
              },
              "end": {
                "line": 147,
                "column": 3
              }
            },
            "file": "/Library/WebServer/Documents/mt/lib/interfaces/tilt-backup2.js"
          },
          "name": "active",
          "kind": "member",
          "memberof": "Tilt",
          "scope": "instance",
          "members": {
            "instance": [],
            "static": [],
            "events": []
          },
          "path": [
            {
              "name": "Tilt",
              "kind": "class"
            },
            {
              "name": "active",
              "kind": "member",
              "scope": "instance"
            }
          ],
          "namespace": "Tilt#active"
        },
        {
          "description": {
            "type": "root",
            "children": [
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "Whether the interface is on (emitting values) or off (paused & not emitting values). Setting this property will update it.",
                    "position": {
                      "start": {
                        "line": 1,
                        "column": 1,
                        "offset": 0
                      },
                      "end": {
                        "line": 1,
                        "column": 123,
                        "offset": 122
                      },
                      "indent": []
                    }
                  }
                ],
                "position": {
                  "start": {
                    "line": 1,
                    "column": 1,
                    "offset": 0
                  },
                  "end": {
                    "line": 1,
                    "column": 123,
                    "offset": 122
                  },
                  "indent": []
                }
              }
            ],
            "position": {
              "start": {
                "line": 1,
                "column": 1,
                "offset": 0
              },
              "end": {
                "line": 1,
                "column": 123,
                "offset": 122
              }
            }
          },
          "tags": [
            {
              "title": "type",
              "description": null,
              "lineNumber": 2,
              "type": {
                "type": "NameExpression",
                "name": "boolean"
              }
            }
          ],
          "loc": {
            "start": {
              "line": 147,
              "column": 2
            },
            "end": {
              "line": 150,
              "column": 4
            }
          },
          "context": {
            "loc": {
              "start": {
                "line": 152,
                "column": 2
              },
              "end": {
                "line": 154,
                "column": 3
              }
            },
            "file": "/Library/WebServer/Documents/mt/lib/interfaces/tilt-backup3.js"
          },
          "name": "active",
          "kind": "member",
          "memberof": "Tilt",
          "scope": "instance",
          "members": {
            "instance": [],
            "static": [],
            "events": []
          },
          "path": [
            {
              "name": "Tilt",
              "kind": "class"
            },
            {
              "name": "active",
              "kind": "member",
              "scope": "instance"
            }
          ],
          "namespace": "Tilt#active"
        },
        {
          "description": {
            "type": "root",
            "children": [
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "Whether the interface is on (emitting values) or off (paused & not emitting values). Setting this property will update it.",
                    "position": {
                      "start": {
                        "line": 1,
                        "column": 1,
                        "offset": 0
                      },
                      "end": {
                        "line": 1,
                        "column": 123,
                        "offset": 122
                      },
                      "indent": []
                    }
                  }
                ],
                "position": {
                  "start": {
                    "line": 1,
                    "column": 1,
                    "offset": 0
                  },
                  "end": {
                    "line": 1,
                    "column": 123,
                    "offset": 122
                  },
                  "indent": []
                }
              }
            ],
            "position": {
              "start": {
                "line": 1,
                "column": 1,
                "offset": 0
              },
              "end": {
                "line": 1,
                "column": 123,
                "offset": 122
              }
            }
          },
          "tags": [
            {
              "title": "type",
              "description": null,
              "lineNumber": 2,
              "type": {
                "type": "NameExpression",
                "name": "boolean"
              }
            }
          ],
          "loc": {
            "start": {
              "line": 252,
              "column": 2
            },
            "end": {
              "line": 255,
              "column": 4
            }
          },
          "context": {
            "loc": {
              "start": {
                "line": 257,
                "column": 2
              },
              "end": {
                "line": 259,
                "column": 3
              }
            },
            "file": "/Library/WebServer/Documents/mt/lib/interfaces/tilt-backup4.js"
          },
          "name": "active",
          "kind": "member",
          "memberof": "Tilt",
          "scope": "instance",
          "members": {
            "instance": [],
            "static": [],
            "events": []
          },
          "path": [
            {
              "name": "Tilt",
              "kind": "class"
            },
            {
              "name": "active",
              "kind": "member",
              "scope": "instance"
            }
          ],
          "namespace": "Tilt#active"
        },
        {
          "description": {
            "type": "root",
            "children": [
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "Whether the interface is on (emitting values) or off (paused & not emitting values). Setting this property will update it.",
                    "position": {
                      "start": {
                        "line": 1,
                        "column": 1,
                        "offset": 0
                      },
                      "end": {
                        "line": 1,
                        "column": 123,
                        "offset": 122
                      },
                      "indent": []
                    }
                  }
                ],
                "position": {
                  "start": {
                    "line": 1,
                    "column": 1,
                    "offset": 0
                  },
                  "end": {
                    "line": 1,
                    "column": 123,
                    "offset": 122
                  },
                  "indent": []
                }
              }
            ],
            "position": {
              "start": {
                "line": 1,
                "column": 1,
                "offset": 0
              },
              "end": {
                "line": 1,
                "column": 123,
                "offset": 122
              }
            }
          },
          "tags": [
            {
              "title": "type",
              "description": null,
              "lineNumber": 2,
              "type": {
                "type": "NameExpression",
                "name": "boolean"
              }
            }
          ],
          "loc": {
            "start": {
              "line": 291,
              "column": 2
            },
            "end": {
              "line": 294,
              "column": 4
            }
          },
          "context": {
            "loc": {
              "start": {
                "line": 296,
                "column": 2
              },
              "end": {
                "line": 298,
                "column": 3
              }
            },
            "file": "/Library/WebServer/Documents/mt/lib/interfaces/tilt.js"
          },
          "name": "active",
          "kind": "member",
          "memberof": "Tilt",
          "scope": "instance",
          "members": {
            "instance": [],
            "static": [],
            "events": []
          },
          "path": [
            {
              "name": "Tilt",
              "kind": "class"
            },
            {
              "name": "active",
              "kind": "member",
              "scope": "instance"
            }
          ],
          "namespace": "Tilt#active"
        }
      ],
      "static": [],
      "events": []
    },
    "path": [
      {
        "name": "Tilt",
        "kind": "class"
      }
    ],
    "namespace": "Tilt"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "2- or 3-axis tilt sensor (depending on your device and browser).",
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 65,
                  "offset": 64
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 65,
              "offset": 64
            },
            "indent": []
          }
        }
      ],
      "position": {
        "start": {
          "line": 1,
          "column": 1,
          "offset": 0
        },
        "end": {
          "line": 1,
          "column": 65,
          "offset": 64
        }
      }
    },
    "tags": [
      {
        "title": "description",
        "description": "2- or 3-axis tilt sensor (depending on your device and browser).",
        "lineNumber": 3
      },
      {
        "title": "demo",
        "description": "<span mt='tilt'></span>",
        "lineNumber": 5
      },
      {
        "title": "example",
        "description": "var tilt = new mt.Tilt('#target')",
        "lineNumber": 7
      },
      {
        "title": "output",
        "description": "change\nFires at a regular interval, as long as this interface is active (see the interface's <i>.active</i> property)<br>\nThe event data is an <i>object</i> containing x (number) and y (number) properties which represent the current tilt state of the device.",
        "lineNumber": 10
      },
      {
        "title": "outputexample",
        "description": "tilt.on('change',function(v) {\n  console.log(v);\n})",
        "lineNumber": 15
      }
    ],
    "loc": {
      "start": {
        "line": 7,
        "column": 0
      },
      "end": {
        "line": 28,
        "column": 2
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 30,
          "column": 0
        },
        "end": {
          "line": 154,
          "column": 1
        }
      },
      "file": "/Library/WebServer/Documents/mt/lib/interfaces/tilt-backup2.js"
    },
    "examples": [
      {
        "description": "var tilt = new mt.Tilt('#target')"
      }
    ],
    "name": "Tilt",
    "augments": [
      {
        "title": "augments",
        "name": "Interface"
      }
    ],
    "kind": "class",
    "members": {
      "instance": [
        {
          "description": {
            "type": "root",
            "children": [
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "Whether the interface is on (emitting values) or off (paused & not emitting values). Setting this property will update it.",
                    "position": {
                      "start": {
                        "line": 1,
                        "column": 1,
                        "offset": 0
                      },
                      "end": {
                        "line": 1,
                        "column": 123,
                        "offset": 122
                      },
                      "indent": []
                    }
                  }
                ],
                "position": {
                  "start": {
                    "line": 1,
                    "column": 1,
                    "offset": 0
                  },
                  "end": {
                    "line": 1,
                    "column": 123,
                    "offset": 122
                  },
                  "indent": []
                }
              }
            ],
            "position": {
              "start": {
                "line": 1,
                "column": 1,
                "offset": 0
              },
              "end": {
                "line": 1,
                "column": 123,
                "offset": 122
              }
            }
          },
          "tags": [
            {
              "title": "type",
              "description": null,
              "lineNumber": 2,
              "type": {
                "type": "NameExpression",
                "name": "boolean"
              }
            }
          ],
          "loc": {
            "start": {
              "line": 141,
              "column": 2
            },
            "end": {
              "line": 144,
              "column": 4
            }
          },
          "context": {
            "loc": {
              "start": {
                "line": 146,
                "column": 2
              },
              "end": {
                "line": 148,
                "column": 3
              }
            },
            "file": "/Library/WebServer/Documents/mt/lib/interfaces/tilt-backup.js"
          },
          "name": "active",
          "kind": "member",
          "memberof": "Tilt",
          "scope": "instance",
          "members": {
            "instance": [],
            "static": [],
            "events": []
          },
          "path": [
            {
              "name": "Tilt",
              "kind": "class"
            },
            {
              "name": "active",
              "kind": "member",
              "scope": "instance"
            }
          ],
          "namespace": "Tilt#active"
        },
        {
          "description": {
            "type": "root",
            "children": [
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "Whether the interface is on (emitting values) or off (paused & not emitting values). Setting this property will update it.",
                    "position": {
                      "start": {
                        "line": 1,
                        "column": 1,
                        "offset": 0
                      },
                      "end": {
                        "line": 1,
                        "column": 123,
                        "offset": 122
                      },
                      "indent": []
                    }
                  }
                ],
                "position": {
                  "start": {
                    "line": 1,
                    "column": 1,
                    "offset": 0
                  },
                  "end": {
                    "line": 1,
                    "column": 123,
                    "offset": 122
                  },
                  "indent": []
                }
              }
            ],
            "position": {
              "start": {
                "line": 1,
                "column": 1,
                "offset": 0
              },
              "end": {
                "line": 1,
                "column": 123,
                "offset": 122
              }
            }
          },
          "tags": [
            {
              "title": "type",
              "description": null,
              "lineNumber": 2,
              "type": {
                "type": "NameExpression",
                "name": "boolean"
              }
            }
          ],
          "loc": {
            "start": {
              "line": 140,
              "column": 2
            },
            "end": {
              "line": 143,
              "column": 4
            }
          },
          "context": {
            "loc": {
              "start": {
                "line": 145,
                "column": 2
              },
              "end": {
                "line": 147,
                "column": 3
              }
            },
            "file": "/Library/WebServer/Documents/mt/lib/interfaces/tilt-backup2.js"
          },
          "name": "active",
          "kind": "member",
          "memberof": "Tilt",
          "scope": "instance",
          "members": {
            "instance": [],
            "static": [],
            "events": []
          },
          "path": [
            {
              "name": "Tilt",
              "kind": "class"
            },
            {
              "name": "active",
              "kind": "member",
              "scope": "instance"
            }
          ],
          "namespace": "Tilt#active"
        },
        {
          "description": {
            "type": "root",
            "children": [
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "Whether the interface is on (emitting values) or off (paused & not emitting values). Setting this property will update it.",
                    "position": {
                      "start": {
                        "line": 1,
                        "column": 1,
                        "offset": 0
                      },
                      "end": {
                        "line": 1,
                        "column": 123,
                        "offset": 122
                      },
                      "indent": []
                    }
                  }
                ],
                "position": {
                  "start": {
                    "line": 1,
                    "column": 1,
                    "offset": 0
                  },
                  "end": {
                    "line": 1,
                    "column": 123,
                    "offset": 122
                  },
                  "indent": []
                }
              }
            ],
            "position": {
              "start": {
                "line": 1,
                "column": 1,
                "offset": 0
              },
              "end": {
                "line": 1,
                "column": 123,
                "offset": 122
              }
            }
          },
          "tags": [
            {
              "title": "type",
              "description": null,
              "lineNumber": 2,
              "type": {
                "type": "NameExpression",
                "name": "boolean"
              }
            }
          ],
          "loc": {
            "start": {
              "line": 147,
              "column": 2
            },
            "end": {
              "line": 150,
              "column": 4
            }
          },
          "context": {
            "loc": {
              "start": {
                "line": 152,
                "column": 2
              },
              "end": {
                "line": 154,
                "column": 3
              }
            },
            "file": "/Library/WebServer/Documents/mt/lib/interfaces/tilt-backup3.js"
          },
          "name": "active",
          "kind": "member",
          "memberof": "Tilt",
          "scope": "instance",
          "members": {
            "instance": [],
            "static": [],
            "events": []
          },
          "path": [
            {
              "name": "Tilt",
              "kind": "class"
            },
            {
              "name": "active",
              "kind": "member",
              "scope": "instance"
            }
          ],
          "namespace": "Tilt#active"
        },
        {
          "description": {
            "type": "root",
            "children": [
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "Whether the interface is on (emitting values) or off (paused & not emitting values). Setting this property will update it.",
                    "position": {
                      "start": {
                        "line": 1,
                        "column": 1,
                        "offset": 0
                      },
                      "end": {
                        "line": 1,
                        "column": 123,
                        "offset": 122
                      },
                      "indent": []
                    }
                  }
                ],
                "position": {
                  "start": {
                    "line": 1,
                    "column": 1,
                    "offset": 0
                  },
                  "end": {
                    "line": 1,
                    "column": 123,
                    "offset": 122
                  },
                  "indent": []
                }
              }
            ],
            "position": {
              "start": {
                "line": 1,
                "column": 1,
                "offset": 0
              },
              "end": {
                "line": 1,
                "column": 123,
                "offset": 122
              }
            }
          },
          "tags": [
            {
              "title": "type",
              "description": null,
              "lineNumber": 2,
              "type": {
                "type": "NameExpression",
                "name": "boolean"
              }
            }
          ],
          "loc": {
            "start": {
              "line": 252,
              "column": 2
            },
            "end": {
              "line": 255,
              "column": 4
            }
          },
          "context": {
            "loc": {
              "start": {
                "line": 257,
                "column": 2
              },
              "end": {
                "line": 259,
                "column": 3
              }
            },
            "file": "/Library/WebServer/Documents/mt/lib/interfaces/tilt-backup4.js"
          },
          "name": "active",
          "kind": "member",
          "memberof": "Tilt",
          "scope": "instance",
          "members": {
            "instance": [],
            "static": [],
            "events": []
          },
          "path": [
            {
              "name": "Tilt",
              "kind": "class"
            },
            {
              "name": "active",
              "kind": "member",
              "scope": "instance"
            }
          ],
          "namespace": "Tilt#active"
        },
        {
          "description": {
            "type": "root",
            "children": [
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "Whether the interface is on (emitting values) or off (paused & not emitting values). Setting this property will update it.",
                    "position": {
                      "start": {
                        "line": 1,
                        "column": 1,
                        "offset": 0
                      },
                      "end": {
                        "line": 1,
                        "column": 123,
                        "offset": 122
                      },
                      "indent": []
                    }
                  }
                ],
                "position": {
                  "start": {
                    "line": 1,
                    "column": 1,
                    "offset": 0
                  },
                  "end": {
                    "line": 1,
                    "column": 123,
                    "offset": 122
                  },
                  "indent": []
                }
              }
            ],
            "position": {
              "start": {
                "line": 1,
                "column": 1,
                "offset": 0
              },
              "end": {
                "line": 1,
                "column": 123,
                "offset": 122
              }
            }
          },
          "tags": [
            {
              "title": "type",
              "description": null,
              "lineNumber": 2,
              "type": {
                "type": "NameExpression",
                "name": "boolean"
              }
            }
          ],
          "loc": {
            "start": {
              "line": 291,
              "column": 2
            },
            "end": {
              "line": 294,
              "column": 4
            }
          },
          "context": {
            "loc": {
              "start": {
                "line": 296,
                "column": 2
              },
              "end": {
                "line": 298,
                "column": 3
              }
            },
            "file": "/Library/WebServer/Documents/mt/lib/interfaces/tilt.js"
          },
          "name": "active",
          "kind": "member",
          "memberof": "Tilt",
          "scope": "instance",
          "members": {
            "instance": [],
            "static": [],
            "events": []
          },
          "path": [
            {
              "name": "Tilt",
              "kind": "class"
            },
            {
              "name": "active",
              "kind": "member",
              "scope": "instance"
            }
          ],
          "namespace": "Tilt#active"
        }
      ],
      "static": [],
      "events": []
    },
    "path": [
      {
        "name": "Tilt",
        "kind": "class"
      }
    ],
    "namespace": "Tilt"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "2- or 3-axis tilt sensor (depending on your device and browser).",
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 65,
                  "offset": 64
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 65,
              "offset": 64
            },
            "indent": []
          }
        }
      ],
      "position": {
        "start": {
          "line": 1,
          "column": 1,
          "offset": 0
        },
        "end": {
          "line": 1,
          "column": 65,
          "offset": 64
        }
      }
    },
    "tags": [
      {
        "title": "description",
        "description": "2- or 3-axis tilt sensor (depending on your device and browser).",
        "lineNumber": 3
      },
      {
        "title": "demo",
        "description": "<span nexus-ui='tilt'></span>",
        "lineNumber": 5
      },
      {
        "title": "example",
        "description": "var tilt = new Nexus.Tilt('#target')",
        "lineNumber": 7
      },
      {
        "title": "output",
        "description": "change\nFires at a regular interval, as long as this interface is active (see the interface's <i>.active</i> property)<br>\nThe event data is an <i>object</i> containing x (number) and y (number) properties which represent the current tilt state of the device.",
        "lineNumber": 10
      },
      {
        "title": "outputexample",
        "description": "tilt.on('change',function(v) {\n  console.log(v);\n})",
        "lineNumber": 15
      }
    ],
    "loc": {
      "start": {
        "line": 7,
        "column": 0
      },
      "end": {
        "line": 28,
        "column": 2
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 30,
          "column": 0
        },
        "end": {
          "line": 165,
          "column": 1
        }
      },
      "file": "/Library/WebServer/Documents/mt/lib/interfaces/tilt-backup3.js"
    },
    "examples": [
      {
        "description": "var tilt = new Nexus.Tilt('#target')"
      }
    ],
    "name": "Tilt",
    "augments": [
      {
        "title": "augments",
        "name": "Interface"
      }
    ],
    "kind": "class",
    "members": {
      "instance": [
        {
          "description": {
            "type": "root",
            "children": [
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "Whether the interface is on (emitting values) or off (paused & not emitting values). Setting this property will update it.",
                    "position": {
                      "start": {
                        "line": 1,
                        "column": 1,
                        "offset": 0
                      },
                      "end": {
                        "line": 1,
                        "column": 123,
                        "offset": 122
                      },
                      "indent": []
                    }
                  }
                ],
                "position": {
                  "start": {
                    "line": 1,
                    "column": 1,
                    "offset": 0
                  },
                  "end": {
                    "line": 1,
                    "column": 123,
                    "offset": 122
                  },
                  "indent": []
                }
              }
            ],
            "position": {
              "start": {
                "line": 1,
                "column": 1,
                "offset": 0
              },
              "end": {
                "line": 1,
                "column": 123,
                "offset": 122
              }
            }
          },
          "tags": [
            {
              "title": "type",
              "description": null,
              "lineNumber": 2,
              "type": {
                "type": "NameExpression",
                "name": "boolean"
              }
            }
          ],
          "loc": {
            "start": {
              "line": 141,
              "column": 2
            },
            "end": {
              "line": 144,
              "column": 4
            }
          },
          "context": {
            "loc": {
              "start": {
                "line": 146,
                "column": 2
              },
              "end": {
                "line": 148,
                "column": 3
              }
            },
            "file": "/Library/WebServer/Documents/mt/lib/interfaces/tilt-backup.js"
          },
          "name": "active",
          "kind": "member",
          "memberof": "Tilt",
          "scope": "instance",
          "members": {
            "instance": [],
            "static": [],
            "events": []
          },
          "path": [
            {
              "name": "Tilt",
              "kind": "class"
            },
            {
              "name": "active",
              "kind": "member",
              "scope": "instance"
            }
          ],
          "namespace": "Tilt#active"
        },
        {
          "description": {
            "type": "root",
            "children": [
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "Whether the interface is on (emitting values) or off (paused & not emitting values). Setting this property will update it.",
                    "position": {
                      "start": {
                        "line": 1,
                        "column": 1,
                        "offset": 0
                      },
                      "end": {
                        "line": 1,
                        "column": 123,
                        "offset": 122
                      },
                      "indent": []
                    }
                  }
                ],
                "position": {
                  "start": {
                    "line": 1,
                    "column": 1,
                    "offset": 0
                  },
                  "end": {
                    "line": 1,
                    "column": 123,
                    "offset": 122
                  },
                  "indent": []
                }
              }
            ],
            "position": {
              "start": {
                "line": 1,
                "column": 1,
                "offset": 0
              },
              "end": {
                "line": 1,
                "column": 123,
                "offset": 122
              }
            }
          },
          "tags": [
            {
              "title": "type",
              "description": null,
              "lineNumber": 2,
              "type": {
                "type": "NameExpression",
                "name": "boolean"
              }
            }
          ],
          "loc": {
            "start": {
              "line": 140,
              "column": 2
            },
            "end": {
              "line": 143,
              "column": 4
            }
          },
          "context": {
            "loc": {
              "start": {
                "line": 145,
                "column": 2
              },
              "end": {
                "line": 147,
                "column": 3
              }
            },
            "file": "/Library/WebServer/Documents/mt/lib/interfaces/tilt-backup2.js"
          },
          "name": "active",
          "kind": "member",
          "memberof": "Tilt",
          "scope": "instance",
          "members": {
            "instance": [],
            "static": [],
            "events": []
          },
          "path": [
            {
              "name": "Tilt",
              "kind": "class"
            },
            {
              "name": "active",
              "kind": "member",
              "scope": "instance"
            }
          ],
          "namespace": "Tilt#active"
        },
        {
          "description": {
            "type": "root",
            "children": [
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "Whether the interface is on (emitting values) or off (paused & not emitting values). Setting this property will update it.",
                    "position": {
                      "start": {
                        "line": 1,
                        "column": 1,
                        "offset": 0
                      },
                      "end": {
                        "line": 1,
                        "column": 123,
                        "offset": 122
                      },
                      "indent": []
                    }
                  }
                ],
                "position": {
                  "start": {
                    "line": 1,
                    "column": 1,
                    "offset": 0
                  },
                  "end": {
                    "line": 1,
                    "column": 123,
                    "offset": 122
                  },
                  "indent": []
                }
              }
            ],
            "position": {
              "start": {
                "line": 1,
                "column": 1,
                "offset": 0
              },
              "end": {
                "line": 1,
                "column": 123,
                "offset": 122
              }
            }
          },
          "tags": [
            {
              "title": "type",
              "description": null,
              "lineNumber": 2,
              "type": {
                "type": "NameExpression",
                "name": "boolean"
              }
            }
          ],
          "loc": {
            "start": {
              "line": 147,
              "column": 2
            },
            "end": {
              "line": 150,
              "column": 4
            }
          },
          "context": {
            "loc": {
              "start": {
                "line": 152,
                "column": 2
              },
              "end": {
                "line": 154,
                "column": 3
              }
            },
            "file": "/Library/WebServer/Documents/mt/lib/interfaces/tilt-backup3.js"
          },
          "name": "active",
          "kind": "member",
          "memberof": "Tilt",
          "scope": "instance",
          "members": {
            "instance": [],
            "static": [],
            "events": []
          },
          "path": [
            {
              "name": "Tilt",
              "kind": "class"
            },
            {
              "name": "active",
              "kind": "member",
              "scope": "instance"
            }
          ],
          "namespace": "Tilt#active"
        },
        {
          "description": {
            "type": "root",
            "children": [
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "Whether the interface is on (emitting values) or off (paused & not emitting values). Setting this property will update it.",
                    "position": {
                      "start": {
                        "line": 1,
                        "column": 1,
                        "offset": 0
                      },
                      "end": {
                        "line": 1,
                        "column": 123,
                        "offset": 122
                      },
                      "indent": []
                    }
                  }
                ],
                "position": {
                  "start": {
                    "line": 1,
                    "column": 1,
                    "offset": 0
                  },
                  "end": {
                    "line": 1,
                    "column": 123,
                    "offset": 122
                  },
                  "indent": []
                }
              }
            ],
            "position": {
              "start": {
                "line": 1,
                "column": 1,
                "offset": 0
              },
              "end": {
                "line": 1,
                "column": 123,
                "offset": 122
              }
            }
          },
          "tags": [
            {
              "title": "type",
              "description": null,
              "lineNumber": 2,
              "type": {
                "type": "NameExpression",
                "name": "boolean"
              }
            }
          ],
          "loc": {
            "start": {
              "line": 252,
              "column": 2
            },
            "end": {
              "line": 255,
              "column": 4
            }
          },
          "context": {
            "loc": {
              "start": {
                "line": 257,
                "column": 2
              },
              "end": {
                "line": 259,
                "column": 3
              }
            },
            "file": "/Library/WebServer/Documents/mt/lib/interfaces/tilt-backup4.js"
          },
          "name": "active",
          "kind": "member",
          "memberof": "Tilt",
          "scope": "instance",
          "members": {
            "instance": [],
            "static": [],
            "events": []
          },
          "path": [
            {
              "name": "Tilt",
              "kind": "class"
            },
            {
              "name": "active",
              "kind": "member",
              "scope": "instance"
            }
          ],
          "namespace": "Tilt#active"
        },
        {
          "description": {
            "type": "root",
            "children": [
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "Whether the interface is on (emitting values) or off (paused & not emitting values). Setting this property will update it.",
                    "position": {
                      "start": {
                        "line": 1,
                        "column": 1,
                        "offset": 0
                      },
                      "end": {
                        "line": 1,
                        "column": 123,
                        "offset": 122
                      },
                      "indent": []
                    }
                  }
                ],
                "position": {
                  "start": {
                    "line": 1,
                    "column": 1,
                    "offset": 0
                  },
                  "end": {
                    "line": 1,
                    "column": 123,
                    "offset": 122
                  },
                  "indent": []
                }
              }
            ],
            "position": {
              "start": {
                "line": 1,
                "column": 1,
                "offset": 0
              },
              "end": {
                "line": 1,
                "column": 123,
                "offset": 122
              }
            }
          },
          "tags": [
            {
              "title": "type",
              "description": null,
              "lineNumber": 2,
              "type": {
                "type": "NameExpression",
                "name": "boolean"
              }
            }
          ],
          "loc": {
            "start": {
              "line": 291,
              "column": 2
            },
            "end": {
              "line": 294,
              "column": 4
            }
          },
          "context": {
            "loc": {
              "start": {
                "line": 296,
                "column": 2
              },
              "end": {
                "line": 298,
                "column": 3
              }
            },
            "file": "/Library/WebServer/Documents/mt/lib/interfaces/tilt.js"
          },
          "name": "active",
          "kind": "member",
          "memberof": "Tilt",
          "scope": "instance",
          "members": {
            "instance": [],
            "static": [],
            "events": []
          },
          "path": [
            {
              "name": "Tilt",
              "kind": "class"
            },
            {
              "name": "active",
              "kind": "member",
              "scope": "instance"
            }
          ],
          "namespace": "Tilt#active"
        }
      ],
      "static": [],
      "events": []
    },
    "path": [
      {
        "name": "Tilt",
        "kind": "class"
      }
    ],
    "namespace": "Tilt"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "Device tilt sensor with 2 or 3 axes (depending on your device and browser).",
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 76,
                  "offset": 75
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 76,
              "offset": 75
            },
            "indent": []
          }
        }
      ],
      "position": {
        "start": {
          "line": 1,
          "column": 1,
          "offset": 0
        },
        "end": {
          "line": 1,
          "column": 76,
          "offset": 75
        }
      }
    },
    "tags": [
      {
        "title": "description",
        "description": "Device tilt sensor with 2 or 3 axes (depending on your device and browser).",
        "lineNumber": 3
      },
      {
        "title": "demo",
        "description": "<span nexus-ui='tilt'></span>",
        "lineNumber": 5
      },
      {
        "title": "example",
        "description": "var tilt = new Nexus.Tilt('#target')",
        "lineNumber": 7
      },
      {
        "title": "output",
        "description": "change\nFires at a regular interval, as long as this interface is active (see the interface's <i>.active</i> property)<br>\nThe event data is an <i>object</i> containing x (number) and y (number) properties which represent the current tilt state of the device.",
        "lineNumber": 10
      },
      {
        "title": "outputexample",
        "description": "tilt.on('change',function(v) {\n  console.log(v);\n})",
        "lineNumber": 15
      }
    ],
    "loc": {
      "start": {
        "line": 7,
        "column": 0
      },
      "end": {
        "line": 28,
        "column": 2
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 30,
          "column": 0
        },
        "end": {
          "line": 270,
          "column": 1
        }
      },
      "file": "/Library/WebServer/Documents/mt/lib/interfaces/tilt-backup4.js"
    },
    "examples": [
      {
        "description": "var tilt = new Nexus.Tilt('#target')"
      }
    ],
    "name": "Tilt",
    "augments": [
      {
        "title": "augments",
        "name": "Interface"
      }
    ],
    "kind": "class",
    "members": {
      "instance": [
        {
          "description": {
            "type": "root",
            "children": [
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "Whether the interface is on (emitting values) or off (paused & not emitting values). Setting this property will update it.",
                    "position": {
                      "start": {
                        "line": 1,
                        "column": 1,
                        "offset": 0
                      },
                      "end": {
                        "line": 1,
                        "column": 123,
                        "offset": 122
                      },
                      "indent": []
                    }
                  }
                ],
                "position": {
                  "start": {
                    "line": 1,
                    "column": 1,
                    "offset": 0
                  },
                  "end": {
                    "line": 1,
                    "column": 123,
                    "offset": 122
                  },
                  "indent": []
                }
              }
            ],
            "position": {
              "start": {
                "line": 1,
                "column": 1,
                "offset": 0
              },
              "end": {
                "line": 1,
                "column": 123,
                "offset": 122
              }
            }
          },
          "tags": [
            {
              "title": "type",
              "description": null,
              "lineNumber": 2,
              "type": {
                "type": "NameExpression",
                "name": "boolean"
              }
            }
          ],
          "loc": {
            "start": {
              "line": 141,
              "column": 2
            },
            "end": {
              "line": 144,
              "column": 4
            }
          },
          "context": {
            "loc": {
              "start": {
                "line": 146,
                "column": 2
              },
              "end": {
                "line": 148,
                "column": 3
              }
            },
            "file": "/Library/WebServer/Documents/mt/lib/interfaces/tilt-backup.js"
          },
          "name": "active",
          "kind": "member",
          "memberof": "Tilt",
          "scope": "instance",
          "members": {
            "instance": [],
            "static": [],
            "events": []
          },
          "path": [
            {
              "name": "Tilt",
              "kind": "class"
            },
            {
              "name": "active",
              "kind": "member",
              "scope": "instance"
            }
          ],
          "namespace": "Tilt#active"
        },
        {
          "description": {
            "type": "root",
            "children": [
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "Whether the interface is on (emitting values) or off (paused & not emitting values). Setting this property will update it.",
                    "position": {
                      "start": {
                        "line": 1,
                        "column": 1,
                        "offset": 0
                      },
                      "end": {
                        "line": 1,
                        "column": 123,
                        "offset": 122
                      },
                      "indent": []
                    }
                  }
                ],
                "position": {
                  "start": {
                    "line": 1,
                    "column": 1,
                    "offset": 0
                  },
                  "end": {
                    "line": 1,
                    "column": 123,
                    "offset": 122
                  },
                  "indent": []
                }
              }
            ],
            "position": {
              "start": {
                "line": 1,
                "column": 1,
                "offset": 0
              },
              "end": {
                "line": 1,
                "column": 123,
                "offset": 122
              }
            }
          },
          "tags": [
            {
              "title": "type",
              "description": null,
              "lineNumber": 2,
              "type": {
                "type": "NameExpression",
                "name": "boolean"
              }
            }
          ],
          "loc": {
            "start": {
              "line": 140,
              "column": 2
            },
            "end": {
              "line": 143,
              "column": 4
            }
          },
          "context": {
            "loc": {
              "start": {
                "line": 145,
                "column": 2
              },
              "end": {
                "line": 147,
                "column": 3
              }
            },
            "file": "/Library/WebServer/Documents/mt/lib/interfaces/tilt-backup2.js"
          },
          "name": "active",
          "kind": "member",
          "memberof": "Tilt",
          "scope": "instance",
          "members": {
            "instance": [],
            "static": [],
            "events": []
          },
          "path": [
            {
              "name": "Tilt",
              "kind": "class"
            },
            {
              "name": "active",
              "kind": "member",
              "scope": "instance"
            }
          ],
          "namespace": "Tilt#active"
        },
        {
          "description": {
            "type": "root",
            "children": [
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "Whether the interface is on (emitting values) or off (paused & not emitting values). Setting this property will update it.",
                    "position": {
                      "start": {
                        "line": 1,
                        "column": 1,
                        "offset": 0
                      },
                      "end": {
                        "line": 1,
                        "column": 123,
                        "offset": 122
                      },
                      "indent": []
                    }
                  }
                ],
                "position": {
                  "start": {
                    "line": 1,
                    "column": 1,
                    "offset": 0
                  },
                  "end": {
                    "line": 1,
                    "column": 123,
                    "offset": 122
                  },
                  "indent": []
                }
              }
            ],
            "position": {
              "start": {
                "line": 1,
                "column": 1,
                "offset": 0
              },
              "end": {
                "line": 1,
                "column": 123,
                "offset": 122
              }
            }
          },
          "tags": [
            {
              "title": "type",
              "description": null,
              "lineNumber": 2,
              "type": {
                "type": "NameExpression",
                "name": "boolean"
              }
            }
          ],
          "loc": {
            "start": {
              "line": 147,
              "column": 2
            },
            "end": {
              "line": 150,
              "column": 4
            }
          },
          "context": {
            "loc": {
              "start": {
                "line": 152,
                "column": 2
              },
              "end": {
                "line": 154,
                "column": 3
              }
            },
            "file": "/Library/WebServer/Documents/mt/lib/interfaces/tilt-backup3.js"
          },
          "name": "active",
          "kind": "member",
          "memberof": "Tilt",
          "scope": "instance",
          "members": {
            "instance": [],
            "static": [],
            "events": []
          },
          "path": [
            {
              "name": "Tilt",
              "kind": "class"
            },
            {
              "name": "active",
              "kind": "member",
              "scope": "instance"
            }
          ],
          "namespace": "Tilt#active"
        },
        {
          "description": {
            "type": "root",
            "children": [
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "Whether the interface is on (emitting values) or off (paused & not emitting values). Setting this property will update it.",
                    "position": {
                      "start": {
                        "line": 1,
                        "column": 1,
                        "offset": 0
                      },
                      "end": {
                        "line": 1,
                        "column": 123,
                        "offset": 122
                      },
                      "indent": []
                    }
                  }
                ],
                "position": {
                  "start": {
                    "line": 1,
                    "column": 1,
                    "offset": 0
                  },
                  "end": {
                    "line": 1,
                    "column": 123,
                    "offset": 122
                  },
                  "indent": []
                }
              }
            ],
            "position": {
              "start": {
                "line": 1,
                "column": 1,
                "offset": 0
              },
              "end": {
                "line": 1,
                "column": 123,
                "offset": 122
              }
            }
          },
          "tags": [
            {
              "title": "type",
              "description": null,
              "lineNumber": 2,
              "type": {
                "type": "NameExpression",
                "name": "boolean"
              }
            }
          ],
          "loc": {
            "start": {
              "line": 252,
              "column": 2
            },
            "end": {
              "line": 255,
              "column": 4
            }
          },
          "context": {
            "loc": {
              "start": {
                "line": 257,
                "column": 2
              },
              "end": {
                "line": 259,
                "column": 3
              }
            },
            "file": "/Library/WebServer/Documents/mt/lib/interfaces/tilt-backup4.js"
          },
          "name": "active",
          "kind": "member",
          "memberof": "Tilt",
          "scope": "instance",
          "members": {
            "instance": [],
            "static": [],
            "events": []
          },
          "path": [
            {
              "name": "Tilt",
              "kind": "class"
            },
            {
              "name": "active",
              "kind": "member",
              "scope": "instance"
            }
          ],
          "namespace": "Tilt#active"
        },
        {
          "description": {
            "type": "root",
            "children": [
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "Whether the interface is on (emitting values) or off (paused & not emitting values). Setting this property will update it.",
                    "position": {
                      "start": {
                        "line": 1,
                        "column": 1,
                        "offset": 0
                      },
                      "end": {
                        "line": 1,
                        "column": 123,
                        "offset": 122
                      },
                      "indent": []
                    }
                  }
                ],
                "position": {
                  "start": {
                    "line": 1,
                    "column": 1,
                    "offset": 0
                  },
                  "end": {
                    "line": 1,
                    "column": 123,
                    "offset": 122
                  },
                  "indent": []
                }
              }
            ],
            "position": {
              "start": {
                "line": 1,
                "column": 1,
                "offset": 0
              },
              "end": {
                "line": 1,
                "column": 123,
                "offset": 122
              }
            }
          },
          "tags": [
            {
              "title": "type",
              "description": null,
              "lineNumber": 2,
              "type": {
                "type": "NameExpression",
                "name": "boolean"
              }
            }
          ],
          "loc": {
            "start": {
              "line": 291,
              "column": 2
            },
            "end": {
              "line": 294,
              "column": 4
            }
          },
          "context": {
            "loc": {
              "start": {
                "line": 296,
                "column": 2
              },
              "end": {
                "line": 298,
                "column": 3
              }
            },
            "file": "/Library/WebServer/Documents/mt/lib/interfaces/tilt.js"
          },
          "name": "active",
          "kind": "member",
          "memberof": "Tilt",
          "scope": "instance",
          "members": {
            "instance": [],
            "static": [],
            "events": []
          },
          "path": [
            {
              "name": "Tilt",
              "kind": "class"
            },
            {
              "name": "active",
              "kind": "member",
              "scope": "instance"
            }
          ],
          "namespace": "Tilt#active"
        }
      ],
      "static": [],
      "events": []
    },
    "path": [
      {
        "name": "Tilt",
        "kind": "class"
      }
    ],
    "namespace": "Tilt"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "Device tilt sensor with 2 or 3 axes (depending on your device and browser).",
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 76,
                  "offset": 75
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 76,
              "offset": 75
            },
            "indent": []
          }
        }
      ],
      "position": {
        "start": {
          "line": 1,
          "column": 1,
          "offset": 0
        },
        "end": {
          "line": 1,
          "column": 76,
          "offset": 75
        }
      }
    },
    "tags": [
      {
        "title": "description",
        "description": "Device tilt sensor with 2 or 3 axes (depending on your device and browser).",
        "lineNumber": 3
      },
      {
        "title": "demo",
        "description": "<span nexus-ui='tilt'></span>",
        "lineNumber": 5
      },
      {
        "title": "example",
        "description": "var tilt = new Nexus.Tilt('#target')",
        "lineNumber": 7
      },
      {
        "title": "output",
        "description": "change\nFires at a regular interval, as long as this interface is active (see the interface's <i>.active</i> property)<br>\nThe event data is an <i>object</i> containing x (number) and y (number) properties which represent the current tilt state of the device.",
        "lineNumber": 10
      },
      {
        "title": "outputexample",
        "description": "tilt.on('change',function(v) {\n  console.log(v);\n})",
        "lineNumber": 15
      }
    ],
    "loc": {
      "start": {
        "line": 7,
        "column": 0
      },
      "end": {
        "line": 28,
        "column": 2
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 30,
          "column": 0
        },
        "end": {
          "line": 309,
          "column": 1
        }
      },
      "file": "/Library/WebServer/Documents/mt/lib/interfaces/tilt.js"
    },
    "examples": [
      {
        "description": "var tilt = new Nexus.Tilt('#target')"
      }
    ],
    "name": "Tilt",
    "augments": [
      {
        "title": "augments",
        "name": "Interface"
      }
    ],
    "kind": "class",
    "members": {
      "instance": [
        {
          "description": {
            "type": "root",
            "children": [
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "Whether the interface is on (emitting values) or off (paused & not emitting values). Setting this property will update it.",
                    "position": {
                      "start": {
                        "line": 1,
                        "column": 1,
                        "offset": 0
                      },
                      "end": {
                        "line": 1,
                        "column": 123,
                        "offset": 122
                      },
                      "indent": []
                    }
                  }
                ],
                "position": {
                  "start": {
                    "line": 1,
                    "column": 1,
                    "offset": 0
                  },
                  "end": {
                    "line": 1,
                    "column": 123,
                    "offset": 122
                  },
                  "indent": []
                }
              }
            ],
            "position": {
              "start": {
                "line": 1,
                "column": 1,
                "offset": 0
              },
              "end": {
                "line": 1,
                "column": 123,
                "offset": 122
              }
            }
          },
          "tags": [
            {
              "title": "type",
              "description": null,
              "lineNumber": 2,
              "type": {
                "type": "NameExpression",
                "name": "boolean"
              }
            }
          ],
          "loc": {
            "start": {
              "line": 141,
              "column": 2
            },
            "end": {
              "line": 144,
              "column": 4
            }
          },
          "context": {
            "loc": {
              "start": {
                "line": 146,
                "column": 2
              },
              "end": {
                "line": 148,
                "column": 3
              }
            },
            "file": "/Library/WebServer/Documents/mt/lib/interfaces/tilt-backup.js"
          },
          "name": "active",
          "kind": "member",
          "memberof": "Tilt",
          "scope": "instance",
          "members": {
            "instance": [],
            "static": [],
            "events": []
          },
          "path": [
            {
              "name": "Tilt",
              "kind": "class"
            },
            {
              "name": "active",
              "kind": "member",
              "scope": "instance"
            }
          ],
          "namespace": "Tilt#active"
        },
        {
          "description": {
            "type": "root",
            "children": [
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "Whether the interface is on (emitting values) or off (paused & not emitting values). Setting this property will update it.",
                    "position": {
                      "start": {
                        "line": 1,
                        "column": 1,
                        "offset": 0
                      },
                      "end": {
                        "line": 1,
                        "column": 123,
                        "offset": 122
                      },
                      "indent": []
                    }
                  }
                ],
                "position": {
                  "start": {
                    "line": 1,
                    "column": 1,
                    "offset": 0
                  },
                  "end": {
                    "line": 1,
                    "column": 123,
                    "offset": 122
                  },
                  "indent": []
                }
              }
            ],
            "position": {
              "start": {
                "line": 1,
                "column": 1,
                "offset": 0
              },
              "end": {
                "line": 1,
                "column": 123,
                "offset": 122
              }
            }
          },
          "tags": [
            {
              "title": "type",
              "description": null,
              "lineNumber": 2,
              "type": {
                "type": "NameExpression",
                "name": "boolean"
              }
            }
          ],
          "loc": {
            "start": {
              "line": 140,
              "column": 2
            },
            "end": {
              "line": 143,
              "column": 4
            }
          },
          "context": {
            "loc": {
              "start": {
                "line": 145,
                "column": 2
              },
              "end": {
                "line": 147,
                "column": 3
              }
            },
            "file": "/Library/WebServer/Documents/mt/lib/interfaces/tilt-backup2.js"
          },
          "name": "active",
          "kind": "member",
          "memberof": "Tilt",
          "scope": "instance",
          "members": {
            "instance": [],
            "static": [],
            "events": []
          },
          "path": [
            {
              "name": "Tilt",
              "kind": "class"
            },
            {
              "name": "active",
              "kind": "member",
              "scope": "instance"
            }
          ],
          "namespace": "Tilt#active"
        },
        {
          "description": {
            "type": "root",
            "children": [
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "Whether the interface is on (emitting values) or off (paused & not emitting values). Setting this property will update it.",
                    "position": {
                      "start": {
                        "line": 1,
                        "column": 1,
                        "offset": 0
                      },
                      "end": {
                        "line": 1,
                        "column": 123,
                        "offset": 122
                      },
                      "indent": []
                    }
                  }
                ],
                "position": {
                  "start": {
                    "line": 1,
                    "column": 1,
                    "offset": 0
                  },
                  "end": {
                    "line": 1,
                    "column": 123,
                    "offset": 122
                  },
                  "indent": []
                }
              }
            ],
            "position": {
              "start": {
                "line": 1,
                "column": 1,
                "offset": 0
              },
              "end": {
                "line": 1,
                "column": 123,
                "offset": 122
              }
            }
          },
          "tags": [
            {
              "title": "type",
              "description": null,
              "lineNumber": 2,
              "type": {
                "type": "NameExpression",
                "name": "boolean"
              }
            }
          ],
          "loc": {
            "start": {
              "line": 147,
              "column": 2
            },
            "end": {
              "line": 150,
              "column": 4
            }
          },
          "context": {
            "loc": {
              "start": {
                "line": 152,
                "column": 2
              },
              "end": {
                "line": 154,
                "column": 3
              }
            },
            "file": "/Library/WebServer/Documents/mt/lib/interfaces/tilt-backup3.js"
          },
          "name": "active",
          "kind": "member",
          "memberof": "Tilt",
          "scope": "instance",
          "members": {
            "instance": [],
            "static": [],
            "events": []
          },
          "path": [
            {
              "name": "Tilt",
              "kind": "class"
            },
            {
              "name": "active",
              "kind": "member",
              "scope": "instance"
            }
          ],
          "namespace": "Tilt#active"
        },
        {
          "description": {
            "type": "root",
            "children": [
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "Whether the interface is on (emitting values) or off (paused & not emitting values). Setting this property will update it.",
                    "position": {
                      "start": {
                        "line": 1,
                        "column": 1,
                        "offset": 0
                      },
                      "end": {
                        "line": 1,
                        "column": 123,
                        "offset": 122
                      },
                      "indent": []
                    }
                  }
                ],
                "position": {
                  "start": {
                    "line": 1,
                    "column": 1,
                    "offset": 0
                  },
                  "end": {
                    "line": 1,
                    "column": 123,
                    "offset": 122
                  },
                  "indent": []
                }
              }
            ],
            "position": {
              "start": {
                "line": 1,
                "column": 1,
                "offset": 0
              },
              "end": {
                "line": 1,
                "column": 123,
                "offset": 122
              }
            }
          },
          "tags": [
            {
              "title": "type",
              "description": null,
              "lineNumber": 2,
              "type": {
                "type": "NameExpression",
                "name": "boolean"
              }
            }
          ],
          "loc": {
            "start": {
              "line": 252,
              "column": 2
            },
            "end": {
              "line": 255,
              "column": 4
            }
          },
          "context": {
            "loc": {
              "start": {
                "line": 257,
                "column": 2
              },
              "end": {
                "line": 259,
                "column": 3
              }
            },
            "file": "/Library/WebServer/Documents/mt/lib/interfaces/tilt-backup4.js"
          },
          "name": "active",
          "kind": "member",
          "memberof": "Tilt",
          "scope": "instance",
          "members": {
            "instance": [],
            "static": [],
            "events": []
          },
          "path": [
            {
              "name": "Tilt",
              "kind": "class"
            },
            {
              "name": "active",
              "kind": "member",
              "scope": "instance"
            }
          ],
          "namespace": "Tilt#active"
        },
        {
          "description": {
            "type": "root",
            "children": [
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "Whether the interface is on (emitting values) or off (paused & not emitting values). Setting this property will update it.",
                    "position": {
                      "start": {
                        "line": 1,
                        "column": 1,
                        "offset": 0
                      },
                      "end": {
                        "line": 1,
                        "column": 123,
                        "offset": 122
                      },
                      "indent": []
                    }
                  }
                ],
                "position": {
                  "start": {
                    "line": 1,
                    "column": 1,
                    "offset": 0
                  },
                  "end": {
                    "line": 1,
                    "column": 123,
                    "offset": 122
                  },
                  "indent": []
                }
              }
            ],
            "position": {
              "start": {
                "line": 1,
                "column": 1,
                "offset": 0
              },
              "end": {
                "line": 1,
                "column": 123,
                "offset": 122
              }
            }
          },
          "tags": [
            {
              "title": "type",
              "description": null,
              "lineNumber": 2,
              "type": {
                "type": "NameExpression",
                "name": "boolean"
              }
            }
          ],
          "loc": {
            "start": {
              "line": 291,
              "column": 2
            },
            "end": {
              "line": 294,
              "column": 4
            }
          },
          "context": {
            "loc": {
              "start": {
                "line": 296,
                "column": 2
              },
              "end": {
                "line": 298,
                "column": 3
              }
            },
            "file": "/Library/WebServer/Documents/mt/lib/interfaces/tilt.js"
          },
          "name": "active",
          "kind": "member",
          "memberof": "Tilt",
          "scope": "instance",
          "members": {
            "instance": [],
            "static": [],
            "events": []
          },
          "path": [
            {
              "name": "Tilt",
              "kind": "class"
            },
            {
              "name": "active",
              "kind": "member",
              "scope": "instance"
            }
          ],
          "namespace": "Tilt#active"
        }
      ],
      "static": [],
      "events": []
    },
    "path": [
      {
        "name": "Tilt",
        "kind": "class"
      }
    ],
    "namespace": "Tilt"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "Binary switch",
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 14,
                  "offset": 13
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 14,
              "offset": 13
            },
            "indent": []
          }
        }
      ],
      "position": {
        "start": {
          "line": 1,
          "column": 1,
          "offset": 0
        },
        "end": {
          "line": 1,
          "column": 14,
          "offset": 13
        }
      }
    },
    "tags": [
      {
        "title": "description",
        "description": "Binary switch",
        "lineNumber": 3
      },
      {
        "title": "demo",
        "description": "<span nexus-ui=\"toggle\"></span>",
        "lineNumber": 5
      },
      {
        "title": "example",
        "description": "var toggle = new Nexus.Toggle('#target')",
        "lineNumber": 7
      },
      {
        "title": "example",
        "description": "var toggle = new Nexus.Toggle('#target',{\n    'size': [40,20],\n    'value': 0\n})",
        "lineNumber": 10
      },
      {
        "title": "output",
        "description": "change\nFires any time the interface's value changes. <br>\nParameter: The boolean state of the interface.",
        "lineNumber": 16
      },
      {
        "title": "outputexample",
        "description": "toggle.on('change',function(v) {\n  console.log(v);\n})",
        "lineNumber": 21
      }
    ],
    "loc": {
      "start": {
        "line": 7,
        "column": 0
      },
      "end": {
        "line": 34,
        "column": 2
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 35,
          "column": 0
        },
        "end": {
          "line": 131,
          "column": 1
        }
      },
      "file": "/Library/WebServer/Documents/mt/lib/interfaces/toggle.js"
    },
    "examples": [
      {
        "description": "var toggle = new Nexus.Toggle('#target')"
      },
      {
        "description": "var toggle = new Nexus.Toggle('#target',{\n    'size': [40,20],\n    'value': 0\n})"
      }
    ],
    "name": "Toggle",
    "augments": [
      {
        "title": "augments",
        "name": "Interface"
      }
    ],
    "kind": "class",
    "members": {
      "instance": [
        {
          "description": {
            "type": "root",
            "children": [
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "Whether the toggle is currently on or off. Setting this property will update the toggle interface and trigger the output event.",
                    "position": {
                      "start": {
                        "line": 1,
                        "column": 1,
                        "offset": 0
                      },
                      "end": {
                        "line": 1,
                        "column": 128,
                        "offset": 127
                      },
                      "indent": []
                    }
                  }
                ],
                "position": {
                  "start": {
                    "line": 1,
                    "column": 1,
                    "offset": 0
                  },
                  "end": {
                    "line": 1,
                    "column": 128,
                    "offset": 127
                  },
                  "indent": []
                }
              }
            ],
            "position": {
              "start": {
                "line": 1,
                "column": 1,
                "offset": 0
              },
              "end": {
                "line": 1,
                "column": 128,
                "offset": 127
              }
            }
          },
          "tags": [
            {
              "title": "type",
              "description": null,
              "lineNumber": 2,
              "type": {
                "type": "NameExpression",
                "name": "boolean"
              }
            },
            {
              "title": "example",
              "description": "toggle.state = false;",
              "lineNumber": 3
            }
          ],
          "loc": {
            "start": {
              "line": 106,
              "column": 2
            },
            "end": {
              "line": 110,
              "column": 4
            }
          },
          "context": {
            "loc": {
              "start": {
                "line": 111,
                "column": 2
              },
              "end": {
                "line": 113,
                "column": 3
              }
            },
            "file": "/Library/WebServer/Documents/mt/lib/interfaces/toggle.js"
          },
          "examples": [
            {
              "description": "toggle.state = false;"
            }
          ],
          "name": "state",
          "kind": "member",
          "memberof": "Toggle",
          "scope": "instance",
          "members": {
            "instance": [],
            "static": [],
            "events": []
          },
          "path": [
            {
              "name": "Toggle",
              "kind": "class"
            },
            {
              "name": "state",
              "kind": "member",
              "scope": "instance"
            }
          ],
          "namespace": "Toggle#state"
        },
        {
          "description": {
            "type": "root",
            "children": [
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "Switch the toggle state to its opposite state",
                    "position": {
                      "start": {
                        "line": 1,
                        "column": 1,
                        "offset": 0
                      },
                      "end": {
                        "line": 1,
                        "column": 46,
                        "offset": 45
                      },
                      "indent": []
                    }
                  }
                ],
                "position": {
                  "start": {
                    "line": 1,
                    "column": 1,
                    "offset": 0
                  },
                  "end": {
                    "line": 1,
                    "column": 46,
                    "offset": 45
                  },
                  "indent": []
                }
              }
            ],
            "position": {
              "start": {
                "line": 1,
                "column": 1,
                "offset": 0
              },
              "end": {
                "line": 1,
                "column": 46,
                "offset": 45
              }
            }
          },
          "tags": [
            {
              "title": "example",
              "description": "toggle.flip();",
              "lineNumber": 2
            }
          ],
          "loc": {
            "start": {
              "line": 121,
              "column": 2
            },
            "end": {
              "line": 125,
              "column": 4
            }
          },
          "context": {
            "loc": {
              "start": {
                "line": 126,
                "column": 2
              },
              "end": {
                "line": 129,
                "column": 3
              }
            },
            "file": "/Library/WebServer/Documents/mt/lib/interfaces/toggle.js"
          },
          "examples": [
            {
              "description": "toggle.flip();"
            }
          ],
          "name": "flip",
          "kind": "function",
          "memberof": "Toggle",
          "scope": "instance",
          "members": {
            "instance": [],
            "static": [],
            "events": []
          },
          "path": [
            {
              "name": "Toggle",
              "kind": "class"
            },
            {
              "name": "flip",
              "kind": "function",
              "scope": "instance"
            }
          ],
          "namespace": "Toggle#flip"
        }
      ],
      "static": [],
      "events": []
    },
    "path": [
      {
        "name": "Toggle",
        "kind": "class"
      }
    ],
    "namespace": "Toggle"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "Audio waveform visualization with region selection",
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 51,
                  "offset": 50
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 51,
              "offset": 50
            },
            "indent": []
          }
        }
      ],
      "position": {
        "start": {
          "line": 1,
          "column": 1,
          "offset": 0
        },
        "end": {
          "line": 1,
          "column": 51,
          "offset": 50
        }
      }
    },
    "tags": [
      {
        "title": "description",
        "description": "Audio waveform visualization with region selection",
        "lineNumber": 3
      },
      {
        "title": "demo",
        "description": "<span nexus-ui=\"waveform\"></span>",
        "lineNumber": 5
      },
      {
        "title": "example",
        "description": "var waveform = new Nexus.waveform('#target',buffer);",
        "lineNumber": 7
      },
      {
        "title": "output",
        "description": "change\nFires any time the interface's value changes. <br>\nThe event data is the number value of the interface.",
        "lineNumber": 10
      },
      {
        "title": "outputexample",
        "description": "dial.on('change',function(v) {\n  console.log(v);\n})",
        "lineNumber": 15
      }
    ],
    "loc": {
      "start": {
        "line": 10,
        "column": 0
      },
      "end": {
        "line": 31,
        "column": 2
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 34,
          "column": 0
        },
        "end": {
          "line": 256,
          "column": 1
        }
      },
      "file": "/Library/WebServer/Documents/mt/lib/interfaces/waveform.js"
    },
    "examples": [
      {
        "description": "var waveform = new Nexus.waveform('#target',buffer);"
      }
    ],
    "name": "Waveform",
    "augments": [
      {
        "title": "augments",
        "name": "Interface"
      }
    ],
    "kind": "class",
    "members": {
      "instance": [],
      "static": [],
      "events": []
    },
    "path": [
      {
        "name": "Waveform",
        "kind": "class"
      }
    ],
    "namespace": "Waveform"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "NexusUI => created as Nexus",
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 28,
                  "offset": 27
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 28,
              "offset": 27
            },
            "indent": []
          }
        }
      ],
      "position": {
        "start": {
          "line": 1,
          "column": 1,
          "offset": 0
        },
        "end": {
          "line": 1,
          "column": 28,
          "offset": 27
        }
      }
    },
    "tags": [],
    "loc": {
      "start": {
        "line": 19,
        "column": 0
      },
      "end": {
        "line": 21,
        "column": 2
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 23,
          "column": 0
        },
        "end": {
          "line": 80,
          "column": 1
        }
      },
      "file": "/Library/WebServer/Documents/mt/lib/main.js"
    },
    "name": "NexusUI",
    "kind": "class",
    "members": {
      "instance": [],
      "static": [],
      "events": []
    },
    "path": [
      {
        "name": "NexusUI",
        "kind": "class"
      }
    ],
    "namespace": "NexusUI"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "Creates a steppable value with minimum, maximum, and step size. This is used in many interfaces to constrict their values to certain ranges.",
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 141,
                  "offset": 140
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 141,
              "offset": 140
            },
            "indent": []
          }
        }
      ],
      "position": {
        "start": {
          "line": 1,
          "column": 1,
          "offset": 0
        },
        "end": {
          "line": 1,
          "column": 141,
          "offset": 140
        }
      }
    },
    "tags": [
      {
        "title": "param",
        "description": "minimum",
        "lineNumber": 2,
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "number"
          }
        },
        "name": "min",
        "default": "0"
      },
      {
        "title": "param",
        "description": "maximum",
        "lineNumber": 3,
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "number"
          }
        },
        "name": "max",
        "default": "1"
      },
      {
        "title": "param",
        "description": null,
        "lineNumber": 4,
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "number"
          }
        },
        "name": "step",
        "default": "0"
      },
      {
        "title": "param",
        "description": "initial value",
        "lineNumber": 5,
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "number"
          }
        },
        "name": "value",
        "default": "0"
      },
      {
        "title": "returns",
        "description": "Step",
        "lineNumber": 6,
        "type": {
          "type": "NameExpression",
          "name": "Object"
        }
      }
    ],
    "loc": {
      "start": {
        "line": 5,
        "column": 0
      },
      "end": {
        "line": 12,
        "column": 2
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 14,
          "column": 0
        },
        "end": {
          "line": 66,
          "column": 1
        }
      },
      "file": "/Library/WebServer/Documents/mt/lib/models/step.js"
    },
    "params": [
      {
        "name": "min",
        "lineNumber": 2,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "minimum",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 8,
                      "offset": 7
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 8,
                  "offset": 7
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 8,
              "offset": 7
            }
          }
        },
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "number"
          }
        },
        "default": "0"
      },
      {
        "name": "max",
        "lineNumber": 3,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "maximum",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 8,
                      "offset": 7
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 8,
                  "offset": 7
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 8,
              "offset": 7
            }
          }
        },
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "number"
          }
        },
        "default": "1"
      },
      {
        "name": "step",
        "lineNumber": 4,
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "number"
          }
        },
        "default": "0"
      },
      {
        "name": "value",
        "lineNumber": 5,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "initial value",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 14,
                      "offset": 13
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 14,
                  "offset": 13
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 14,
              "offset": 13
            }
          }
        },
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "number"
          }
        },
        "default": "0"
      }
    ],
    "returns": [
      {
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "Step",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 5,
                      "offset": 4
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 5,
                  "offset": 4
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 5,
              "offset": 4
            }
          }
        },
        "type": {
          "type": "NameExpression",
          "name": "Object"
        }
      }
    ],
    "name": "Step",
    "kind": "class",
    "members": {
      "instance": [
        {
          "description": {
            "type": "root",
            "children": [
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "Update with a new value. The value will be auto-adjusted to fit the min/max/step.",
                    "position": {
                      "start": {
                        "line": 1,
                        "column": 1,
                        "offset": 0
                      },
                      "end": {
                        "line": 1,
                        "column": 82,
                        "offset": 81
                      },
                      "indent": []
                    }
                  }
                ],
                "position": {
                  "start": {
                    "line": 1,
                    "column": 1,
                    "offset": 0
                  },
                  "end": {
                    "line": 1,
                    "column": 82,
                    "offset": 81
                  },
                  "indent": []
                }
              }
            ],
            "position": {
              "start": {
                "line": 1,
                "column": 1,
                "offset": 0
              },
              "end": {
                "line": 1,
                "column": 82,
                "offset": 81
              }
            }
          },
          "tags": [
            {
              "title": "param",
              "description": null,
              "lineNumber": 2,
              "type": {
                "type": "NameExpression",
                "name": "number"
              },
              "name": "value"
            }
          ],
          "loc": {
            "start": {
              "line": 29,
              "column": 2
            },
            "end": {
              "line": 32,
              "column": 4
            }
          },
          "context": {
            "loc": {
              "start": {
                "line": 34,
                "column": 2
              },
              "end": {
                "line": 48,
                "column": 3
              }
            },
            "file": "/Library/WebServer/Documents/mt/lib/models/step.js"
          },
          "params": [
            {
              "name": "value",
              "lineNumber": 2,
              "type": {
                "type": "NameExpression",
                "name": "number"
              }
            }
          ],
          "name": "update",
          "kind": "function",
          "memberof": "Step",
          "scope": "instance",
          "members": {
            "instance": [],
            "static": [],
            "events": []
          },
          "path": [
            {
              "name": "Step",
              "kind": "class"
            },
            {
              "name": "update",
              "kind": "function",
              "scope": "instance"
            }
          ],
          "namespace": "Step#update"
        },
        {
          "description": {
            "type": "root",
            "children": [
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "Update with a normalized value 0-1.",
                    "position": {
                      "start": {
                        "line": 1,
                        "column": 1,
                        "offset": 0
                      },
                      "end": {
                        "line": 1,
                        "column": 36,
                        "offset": 35
                      },
                      "indent": []
                    }
                  }
                ],
                "position": {
                  "start": {
                    "line": 1,
                    "column": 1,
                    "offset": 0
                  },
                  "end": {
                    "line": 1,
                    "column": 36,
                    "offset": 35
                  },
                  "indent": []
                }
              }
            ],
            "position": {
              "start": {
                "line": 1,
                "column": 1,
                "offset": 0
              },
              "end": {
                "line": 1,
                "column": 36,
                "offset": 35
              }
            }
          },
          "tags": [
            {
              "title": "param",
              "description": null,
              "lineNumber": 2,
              "type": {
                "type": "NameExpression",
                "name": "number"
              },
              "name": "value"
            }
          ],
          "loc": {
            "start": {
              "line": 50,
              "column": 2
            },
            "end": {
              "line": 53,
              "column": 4
            }
          },
          "context": {
            "loc": {
              "start": {
                "line": 54,
                "column": 2
              },
              "end": {
                "line": 57,
                "column": 3
              }
            },
            "file": "/Library/WebServer/Documents/mt/lib/models/step.js"
          },
          "params": [
            {
              "name": "value",
              "lineNumber": 2,
              "type": {
                "type": "NameExpression",
                "name": "number"
              }
            }
          ],
          "name": "updateNormal",
          "kind": "function",
          "memberof": "Step",
          "scope": "instance",
          "members": {
            "instance": [],
            "static": [],
            "events": []
          },
          "path": [
            {
              "name": "Step",
              "kind": "class"
            },
            {
              "name": "updateNormal",
              "kind": "function",
              "scope": "instance"
            }
          ],
          "namespace": "Step#updateNormal"
        },
        {
          "description": {
            "type": "root",
            "children": [
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "Get a normalized version of this.value . Not settable.",
                    "position": {
                      "start": {
                        "line": 1,
                        "column": 1,
                        "offset": 0
                      },
                      "end": {
                        "line": 1,
                        "column": 55,
                        "offset": 54
                      },
                      "indent": []
                    }
                  }
                ],
                "position": {
                  "start": {
                    "line": 1,
                    "column": 1,
                    "offset": 0
                  },
                  "end": {
                    "line": 1,
                    "column": 55,
                    "offset": 54
                  },
                  "indent": []
                }
              }
            ],
            "position": {
              "start": {
                "line": 1,
                "column": 1,
                "offset": 0
              },
              "end": {
                "line": 1,
                "column": 55,
                "offset": 54
              }
            }
          },
          "tags": [],
          "loc": {
            "start": {
              "line": 59,
              "column": 2
            },
            "end": {
              "line": 61,
              "column": 4
            }
          },
          "context": {
            "loc": {
              "start": {
                "line": 62,
                "column": 2
              },
              "end": {
                "line": 64,
                "column": 3
              }
            },
            "file": "/Library/WebServer/Documents/mt/lib/models/step.js"
          },
          "name": "normalized",
          "kind": "member",
          "memberof": "Step",
          "scope": "instance",
          "members": {
            "instance": [],
            "static": [],
            "events": []
          },
          "path": [
            {
              "name": "Step",
              "kind": "class"
            },
            {
              "name": "normalized",
              "kind": "member",
              "scope": "instance"
            }
          ],
          "namespace": "Step#normalized"
        }
      ],
      "static": [],
      "events": []
    },
    "path": [
      {
        "name": "Step",
        "kind": "class"
      }
    ],
    "namespace": "Step"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "Limit a number to within a minimum and maximum",
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 47,
                  "offset": 46
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 47,
              "offset": 46
            },
            "indent": []
          }
        }
      ],
      "position": {
        "start": {
          "line": 1,
          "column": 1,
          "offset": 0
        },
        "end": {
          "line": 1,
          "column": 47,
          "offset": 46
        }
      }
    },
    "tags": [
      {
        "title": "param",
        "description": "Input value",
        "lineNumber": 2,
        "type": {
          "type": "NameExpression",
          "name": "number"
        },
        "name": "value"
      },
      {
        "title": "param",
        "description": "Lower limit",
        "lineNumber": 3,
        "type": {
          "type": "NameExpression",
          "name": "number"
        },
        "name": "min"
      },
      {
        "title": "param",
        "description": "Upper limit",
        "lineNumber": 4,
        "type": {
          "type": "NameExpression",
          "name": "number"
        },
        "name": "max"
      },
      {
        "title": "return",
        "description": "The input value constrained within the lower and upper limits",
        "lineNumber": 5,
        "type": {
          "type": "NameExpression",
          "name": "number"
        }
      },
      {
        "title": "example",
        "description": "Nexus.clip(11,0,10)   // returns 10\nNexus.clip(-1,0,10)   // returns 0\nNexus.clip(5,0,10)    // returns 5",
        "lineNumber": 6
      }
    ],
    "loc": {
      "start": {
        "line": 3,
        "column": 0
      },
      "end": {
        "line": 13,
        "column": 3
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 15,
          "column": 0
        },
        "end": {
          "line": 17,
          "column": 2
        }
      },
      "file": "/Library/WebServer/Documents/mt/lib/util/math.js"
    },
    "params": [
      {
        "name": "value",
        "lineNumber": 2,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "Input value",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 12,
                      "offset": 11
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 12,
                  "offset": 11
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 12,
              "offset": 11
            }
          }
        },
        "type": {
          "type": "NameExpression",
          "name": "number"
        }
      },
      {
        "name": "min",
        "lineNumber": 3,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "Lower limit",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 12,
                      "offset": 11
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 12,
                  "offset": 11
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 12,
              "offset": 11
            }
          }
        },
        "type": {
          "type": "NameExpression",
          "name": "number"
        }
      },
      {
        "name": "max",
        "lineNumber": 4,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "Upper limit",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 12,
                      "offset": 11
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 12,
                  "offset": 11
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 12,
              "offset": 11
            }
          }
        },
        "type": {
          "type": "NameExpression",
          "name": "number"
        }
      }
    ],
    "returns": [
      {
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "The input value constrained within the lower and upper limits",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 62,
                      "offset": 61
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 62,
                  "offset": 61
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 62,
              "offset": 61
            }
          }
        },
        "type": {
          "type": "NameExpression",
          "name": "number"
        }
      }
    ],
    "examples": [
      {
        "description": "Nexus.clip(11,0,10)   // returns 10\nNexus.clip(-1,0,10)   // returns 0\nNexus.clip(5,0,10)    // returns 5"
      }
    ],
    "name": "clip",
    "kind": "function",
    "memberof": "math",
    "scope": "static",
    "members": {
      "instance": [],
      "static": [],
      "events": []
    },
    "path": [
      {
        "name": "clip",
        "kind": "function",
        "scope": "static"
      }
    ],
    "namespace": ".clip"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "Scale a value from one range to another range.",
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 47,
                  "offset": 46
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 47,
              "offset": 46
            },
            "indent": []
          }
        }
      ],
      "position": {
        "start": {
          "line": 1,
          "column": 1,
          "offset": 0
        },
        "end": {
          "line": 1,
          "column": 47,
          "offset": 46
        }
      }
    },
    "tags": [
      {
        "title": "param",
        "description": "Input value",
        "lineNumber": 2,
        "type": {
          "type": "NameExpression",
          "name": "number"
        },
        "name": "inNum"
      },
      {
        "title": "param",
        "description": "Input range minimum",
        "lineNumber": 3,
        "type": {
          "type": "NameExpression",
          "name": "number"
        },
        "name": "inMin"
      },
      {
        "title": "param",
        "description": "Input range maximum",
        "lineNumber": 4,
        "type": {
          "type": "NameExpression",
          "name": "number"
        },
        "name": "inMax"
      },
      {
        "title": "param",
        "description": "Output range minimum",
        "lineNumber": 5,
        "type": {
          "type": "NameExpression",
          "name": "number"
        },
        "name": "outMin"
      },
      {
        "title": "param",
        "description": "Output range maximum",
        "lineNumber": 6,
        "type": {
          "type": "NameExpression",
          "name": "number"
        },
        "name": "outMax"
      },
      {
        "title": "return",
        "description": "The input value scaled to its new range",
        "lineNumber": 7,
        "type": {
          "type": "NameExpression",
          "name": "number"
        }
      },
      {
        "title": "example",
        "description": "Nexus.scale(0.5,0,1,0,10)   // returns 5\nNexus.scale(0.9,0,1,1,0)    // returns 0.1",
        "lineNumber": 8
      }
    ],
    "loc": {
      "start": {
        "line": 23,
        "column": 0
      },
      "end": {
        "line": 34,
        "column": 3
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 35,
          "column": 0
        },
        "end": {
          "line": 40,
          "column": 2
        }
      },
      "file": "/Library/WebServer/Documents/mt/lib/util/math.js"
    },
    "params": [
      {
        "name": "inNum",
        "lineNumber": 2,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "Input value",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 12,
                      "offset": 11
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 12,
                  "offset": 11
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 12,
              "offset": 11
            }
          }
        },
        "type": {
          "type": "NameExpression",
          "name": "number"
        }
      },
      {
        "name": "inMin",
        "lineNumber": 3,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "Input range minimum",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 20,
                      "offset": 19
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 20,
                  "offset": 19
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 20,
              "offset": 19
            }
          }
        },
        "type": {
          "type": "NameExpression",
          "name": "number"
        }
      },
      {
        "name": "inMax",
        "lineNumber": 4,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "Input range maximum",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 20,
                      "offset": 19
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 20,
                  "offset": 19
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 20,
              "offset": 19
            }
          }
        },
        "type": {
          "type": "NameExpression",
          "name": "number"
        }
      },
      {
        "name": "outMin",
        "lineNumber": 5,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "Output range minimum",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 21,
                      "offset": 20
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 21,
                  "offset": 20
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 21,
              "offset": 20
            }
          }
        },
        "type": {
          "type": "NameExpression",
          "name": "number"
        }
      },
      {
        "name": "outMax",
        "lineNumber": 6,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "Output range maximum",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 21,
                      "offset": 20
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 21,
                  "offset": 20
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 21,
              "offset": 20
            }
          }
        },
        "type": {
          "type": "NameExpression",
          "name": "number"
        }
      }
    ],
    "returns": [
      {
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "The input value scaled to its new range",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 40,
                      "offset": 39
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 40,
                  "offset": 39
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 40,
              "offset": 39
            }
          }
        },
        "type": {
          "type": "NameExpression",
          "name": "number"
        }
      }
    ],
    "examples": [
      {
        "description": "Nexus.scale(0.5,0,1,0,10)   // returns 5\nNexus.scale(0.9,0,1,1,0)    // returns 0.1"
      }
    ],
    "name": "scale",
    "kind": "function",
    "memberof": "math",
    "scope": "static",
    "members": {
      "instance": [],
      "static": [],
      "events": []
    },
    "path": [
      {
        "name": "scale",
        "kind": "function",
        "scope": "static"
      }
    ],
    "namespace": ".scale"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "Convert a MIDi note number to a frequency value in equal temperament.",
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 70,
                  "offset": 69
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 70,
              "offset": 69
            },
            "indent": []
          }
        }
      ],
      "position": {
        "start": {
          "line": 1,
          "column": 1,
          "offset": 0
        },
        "end": {
          "line": 1,
          "column": 70,
          "offset": 69
        }
      }
    },
    "tags": [
      {
        "title": "param",
        "description": "MIDI note value",
        "lineNumber": 2,
        "type": {
          "type": "NameExpression",
          "name": "number"
        },
        "name": "midi"
      },
      {
        "title": "return",
        "description": "Frequence value",
        "lineNumber": 3,
        "type": {
          "type": "NameExpression",
          "name": "number"
        }
      },
      {
        "title": "example",
        "description": "Nexus.mtof(60)  // returns the frequency number of Middle C",
        "lineNumber": 4
      }
    ],
    "loc": {
      "start": {
        "line": 77,
        "column": 0
      },
      "end": {
        "line": 83,
        "column": 3
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 84,
          "column": 0
        },
        "end": {
          "line": 86,
          "column": 2
        }
      },
      "file": "/Library/WebServer/Documents/mt/lib/util/math.js"
    },
    "params": [
      {
        "name": "midi",
        "lineNumber": 2,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "MIDI note value",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 16,
                      "offset": 15
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 16,
                  "offset": 15
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 16,
              "offset": 15
            }
          }
        },
        "type": {
          "type": "NameExpression",
          "name": "number"
        }
      }
    ],
    "returns": [
      {
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "Frequence value",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 16,
                      "offset": 15
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 16,
                  "offset": 15
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 16,
              "offset": 15
            }
          }
        },
        "type": {
          "type": "NameExpression",
          "name": "number"
        }
      }
    ],
    "examples": [
      {
        "description": "Nexus.mtof(60)  // returns the frequency number of Middle C"
      }
    ],
    "name": "mtof",
    "kind": "function",
    "memberof": "math",
    "scope": "static",
    "members": {
      "instance": [],
      "static": [],
      "events": []
    },
    "path": [
      {
        "name": "mtof",
        "kind": "function",
        "scope": "static"
      }
    ],
    "namespace": ".mtof"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "Interpolate between two numbers",
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 32,
                  "offset": 31
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 32,
              "offset": 31
            },
            "indent": []
          }
        }
      ],
      "position": {
        "start": {
          "line": 1,
          "column": 1,
          "offset": 0
        },
        "end": {
          "line": 1,
          "column": 32,
          "offset": 31
        }
      }
    },
    "tags": [
      {
        "title": "param",
        "description": "Interpolation index (0-1)",
        "lineNumber": 2,
        "type": {
          "type": "NameExpression",
          "name": "number"
        },
        "name": "loc"
      },
      {
        "title": "param",
        "description": "Lower value",
        "lineNumber": 3,
        "type": {
          "type": "NameExpression",
          "name": "number"
        },
        "name": "min"
      },
      {
        "title": "param",
        "description": "Upper value",
        "lineNumber": 4,
        "type": {
          "type": "NameExpression",
          "name": "number"
        },
        "name": "max"
      },
      {
        "title": "return",
        "description": "Interpolated value",
        "lineNumber": 5,
        "type": {
          "type": "NameExpression",
          "name": "number"
        }
      },
      {
        "title": "example",
        "description": "Nexus.interp(0.5,2,4)   // returns 3\nNexus.interp(0.1,0,10)     // returns 1",
        "lineNumber": 6
      }
    ],
    "loc": {
      "start": {
        "line": 88,
        "column": 0
      },
      "end": {
        "line": 97,
        "column": 3
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 98,
          "column": 0
        },
        "end": {
          "line": 100,
          "column": 2
        }
      },
      "file": "/Library/WebServer/Documents/mt/lib/util/math.js"
    },
    "params": [
      {
        "name": "loc",
        "lineNumber": 2,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "Interpolation index (0-1)",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 26,
                      "offset": 25
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 26,
                  "offset": 25
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 26,
              "offset": 25
            }
          }
        },
        "type": {
          "type": "NameExpression",
          "name": "number"
        }
      },
      {
        "name": "min",
        "lineNumber": 3,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "Lower value",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 12,
                      "offset": 11
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 12,
                  "offset": 11
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 12,
              "offset": 11
            }
          }
        },
        "type": {
          "type": "NameExpression",
          "name": "number"
        }
      },
      {
        "name": "max",
        "lineNumber": 4,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "Upper value",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 12,
                      "offset": 11
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 12,
                  "offset": 11
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 12,
              "offset": 11
            }
          }
        },
        "type": {
          "type": "NameExpression",
          "name": "number"
        }
      }
    ],
    "returns": [
      {
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "Interpolated value",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 19,
                      "offset": 18
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 19,
                  "offset": 18
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 19,
              "offset": 18
            }
          }
        },
        "type": {
          "type": "NameExpression",
          "name": "number"
        }
      }
    ],
    "examples": [
      {
        "description": "Nexus.interp(0.5,2,4)   // returns 3\nNexus.interp(0.1,0,10)     // returns 1"
      }
    ],
    "name": "interp",
    "kind": "function",
    "memberof": "math",
    "scope": "static",
    "members": {
      "instance": [],
      "static": [],
      "events": []
    },
    "path": [
      {
        "name": "interp",
        "kind": "function",
        "scope": "static"
      }
    ],
    "namespace": ".interp"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "Return a random choice from a list of arguments",
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 48,
                  "offset": 47
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 48,
              "offset": 47
            },
            "indent": []
          }
        }
      ],
      "position": {
        "start": {
          "line": 1,
          "column": 1,
          "offset": 0
        },
        "end": {
          "line": 1,
          "column": 48,
          "offset": 47
        }
      }
    },
    "tags": [
      {
        "title": "return",
        "description": "One random argument",
        "lineNumber": 2,
        "type": {
          "type": "NameExpression",
          "name": "various"
        }
      },
      {
        "title": "example",
        "description": "Nexus.pick(1,2,3,4)   // returns 1, 2, 3, or 4\nNexus.pick(function1,function2)   // returns either function1 or function2",
        "lineNumber": 3
      }
    ],
    "loc": {
      "start": {
        "line": 102,
        "column": 0
      },
      "end": {
        "line": 108,
        "column": 3
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 109,
          "column": 0
        },
        "end": {
          "line": 111,
          "column": 2
        }
      },
      "file": "/Library/WebServer/Documents/mt/lib/util/math.js"
    },
    "returns": [
      {
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "One random argument",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 20,
                      "offset": 19
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 20,
                  "offset": 19
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 20,
              "offset": 19
            }
          }
        },
        "type": {
          "type": "NameExpression",
          "name": "various"
        }
      }
    ],
    "examples": [
      {
        "description": "Nexus.pick(1,2,3,4)   // returns 1, 2, 3, or 4\nNexus.pick(function1,function2)   // returns either function1 or function2"
      }
    ],
    "name": "pick",
    "kind": "function",
    "memberof": "math",
    "scope": "static",
    "members": {
      "instance": [],
      "static": [],
      "events": []
    },
    "path": [
      {
        "name": "pick",
        "kind": "function",
        "scope": "static"
      }
    ],
    "namespace": ".pick"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "Returns an octave multiplier for frequency values",
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 50,
                  "offset": 49
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 50,
              "offset": 49
            },
            "indent": []
          }
        }
      ],
      "position": {
        "start": {
          "line": 1,
          "column": 1,
          "offset": 0
        },
        "end": {
          "line": 1,
          "column": 50,
          "offset": 49
        }
      }
    },
    "tags": [
      {
        "title": "param",
        "description": "Relative octave number (e.g. -1 for one octave down, 1 for one octave up)",
        "lineNumber": 2,
        "type": {
          "type": "NameExpression",
          "name": "number"
        },
        "name": "num"
      },
      {
        "title": "return",
        "description": "Octave multiplier",
        "lineNumber": 3,
        "type": {
          "type": "NameExpression",
          "name": "number"
        }
      },
      {
        "title": "example",
        "description": "Nexus.octave(-1)  // returns 0.5\nNexus.octave(0)   // returns 1\nNexus.octave(1)   // returns 2\nNexus.octave(2)   // returns 4",
        "lineNumber": 4
      }
    ],
    "loc": {
      "start": {
        "line": 113,
        "column": 0
      },
      "end": {
        "line": 122,
        "column": 3
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 123,
          "column": 0
        },
        "end": {
          "line": 125,
          "column": 2
        }
      },
      "file": "/Library/WebServer/Documents/mt/lib/util/math.js"
    },
    "params": [
      {
        "name": "num",
        "lineNumber": 2,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "Relative octave number (e.g. -1 for one octave down, 1 for one octave up)",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 74,
                      "offset": 73
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 74,
                  "offset": 73
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 74,
              "offset": 73
            }
          }
        },
        "type": {
          "type": "NameExpression",
          "name": "number"
        }
      }
    ],
    "returns": [
      {
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "Octave multiplier",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 18,
                      "offset": 17
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 18,
                  "offset": 17
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 18,
              "offset": 17
            }
          }
        },
        "type": {
          "type": "NameExpression",
          "name": "number"
        }
      }
    ],
    "examples": [
      {
        "description": "Nexus.octave(-1)  // returns 0.5\nNexus.octave(0)   // returns 1\nNexus.octave(1)   // returns 2\nNexus.octave(2)   // returns 4"
      }
    ],
    "name": "octave",
    "kind": "function",
    "memberof": "math",
    "scope": "static",
    "members": {
      "instance": [],
      "static": [],
      "events": []
    },
    "path": [
      {
        "name": "octave",
        "kind": "function",
        "scope": "static"
      }
    ],
    "namespace": ".octave"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "Random integer generator. If no second argument is given, will return random integer from 0 to bound1.",
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 103,
                  "offset": 102
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 103,
              "offset": 102
            },
            "indent": []
          }
        }
      ],
      "position": {
        "start": {
          "line": 1,
          "column": 1,
          "offset": 0
        },
        "end": {
          "line": 1,
          "column": 103,
          "offset": 102
        }
      }
    },
    "tags": [
      {
        "title": "param",
        "description": "Minimum random value",
        "lineNumber": 2,
        "type": {
          "type": "NameExpression",
          "name": "number"
        },
        "name": "bound1"
      },
      {
        "title": "param",
        "description": "Maximum random value",
        "lineNumber": 3,
        "type": {
          "type": "NameExpression",
          "name": "number"
        },
        "name": "bound2"
      },
      {
        "title": "return",
        "description": "Random integer between lower and upper boundary",
        "lineNumber": 4,
        "type": {
          "type": "NameExpression",
          "name": "number"
        }
      },
      {
        "title": "example",
        "description": "Nexus.ri(10)    // returns random int from 0 to 10\nNexus.ri(20,2000) // returns random int from 20 to 2000",
        "lineNumber": 5
      }
    ],
    "loc": {
      "start": {
        "line": 127,
        "column": 0
      },
      "end": {
        "line": 135,
        "column": 3
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 136,
          "column": 0
        },
        "end": {
          "line": 144,
          "column": 2
        }
      },
      "file": "/Library/WebServer/Documents/mt/lib/util/math.js"
    },
    "params": [
      {
        "name": "bound1",
        "lineNumber": 2,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "Minimum random value",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 21,
                      "offset": 20
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 21,
                  "offset": 20
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 21,
              "offset": 20
            }
          }
        },
        "type": {
          "type": "NameExpression",
          "name": "number"
        }
      },
      {
        "name": "bound2",
        "lineNumber": 3,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "Maximum random value",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 21,
                      "offset": 20
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 21,
                  "offset": 20
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 21,
              "offset": 20
            }
          }
        },
        "type": {
          "type": "NameExpression",
          "name": "number"
        }
      }
    ],
    "returns": [
      {
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "Random integer between lower and upper boundary",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 48,
                      "offset": 47
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 48,
                  "offset": 47
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 48,
              "offset": 47
            }
          }
        },
        "type": {
          "type": "NameExpression",
          "name": "number"
        }
      }
    ],
    "examples": [
      {
        "description": "Nexus.ri(10)    // returns random int from 0 to 10\nNexus.ri(20,2000) // returns random int from 20 to 2000"
      }
    ],
    "name": "ri",
    "kind": "function",
    "memberof": "math",
    "scope": "static",
    "members": {
      "instance": [],
      "static": [],
      "events": []
    },
    "path": [
      {
        "name": "ri",
        "kind": "function",
        "scope": "static"
      }
    ],
    "namespace": ".ri"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "Random float number generator. If no second argument is given, will return random float from 0 to bound1.",
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 106,
                  "offset": 105
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 106,
              "offset": 105
            },
            "indent": []
          }
        }
      ],
      "position": {
        "start": {
          "line": 1,
          "column": 1,
          "offset": 0
        },
        "end": {
          "line": 1,
          "column": 106,
          "offset": 105
        }
      }
    },
    "tags": [
      {
        "title": "param",
        "description": "Minimum random value",
        "lineNumber": 2,
        "type": {
          "type": "NameExpression",
          "name": "number"
        },
        "name": "bound1"
      },
      {
        "title": "param",
        "description": "Maximum random value",
        "lineNumber": 3,
        "type": {
          "type": "NameExpression",
          "name": "number"
        },
        "name": "bound2"
      },
      {
        "title": "return",
        "description": "Random float between lower and upper boundary",
        "lineNumber": 4,
        "type": {
          "type": "NameExpression",
          "name": "number"
        }
      },
      {
        "title": "example",
        "description": "Nexus.rf(1)    // returns random float from 0 to 1\nNexus.rf(1,2) // returns random float from 1 to 2",
        "lineNumber": 5
      }
    ],
    "loc": {
      "start": {
        "line": 146,
        "column": 0
      },
      "end": {
        "line": 154,
        "column": 3
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 155,
          "column": 0
        },
        "end": {
          "line": 163,
          "column": 2
        }
      },
      "file": "/Library/WebServer/Documents/mt/lib/util/math.js"
    },
    "params": [
      {
        "name": "bound1",
        "lineNumber": 2,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "Minimum random value",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 21,
                      "offset": 20
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 21,
                  "offset": 20
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 21,
              "offset": 20
            }
          }
        },
        "type": {
          "type": "NameExpression",
          "name": "number"
        }
      },
      {
        "name": "bound2",
        "lineNumber": 3,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "Maximum random value",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 21,
                      "offset": 20
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 21,
                  "offset": 20
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 21,
              "offset": 20
            }
          }
        },
        "type": {
          "type": "NameExpression",
          "name": "number"
        }
      }
    ],
    "returns": [
      {
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "Random float between lower and upper boundary",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 46,
                      "offset": 45
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 46,
                  "offset": 45
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 46,
              "offset": 45
            }
          }
        },
        "type": {
          "type": "NameExpression",
          "name": "number"
        }
      }
    ],
    "examples": [
      {
        "description": "Nexus.rf(1)    // returns random float from 0 to 1\nNexus.rf(1,2) // returns random float from 1 to 2"
      }
    ],
    "name": "rf",
    "kind": "function",
    "memberof": "math",
    "scope": "static",
    "members": {
      "instance": [],
      "static": [],
      "events": []
    },
    "path": [
      {
        "name": "rf",
        "kind": "function",
        "scope": "static"
      }
    ],
    "namespace": ".rf"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "Average an array of numbers",
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 28,
                  "offset": 27
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 28,
              "offset": 27
            },
            "indent": []
          }
        }
      ],
      "position": {
        "start": {
          "line": 1,
          "column": 1,
          "offset": 0
        },
        "end": {
          "line": 1,
          "column": 28,
          "offset": 27
        }
      }
    },
    "tags": [
      {
        "title": "param",
        "description": "Array of numbers to average",
        "lineNumber": 2,
        "type": {
          "type": "NameExpression",
          "name": "Array"
        },
        "name": "data"
      },
      {
        "title": "return",
        "description": "Average of the input data",
        "lineNumber": 3,
        "type": {
          "type": "NameExpression",
          "name": "number"
        }
      },
      {
        "title": "example",
        "description": "Nexus.average([0,2,4,6,8,10])   // returns 5",
        "lineNumber": 4
      }
    ],
    "loc": {
      "start": {
        "line": 174,
        "column": 0
      },
      "end": {
        "line": 180,
        "column": 3
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 181,
          "column": 0
        },
        "end": {
          "line": 187,
          "column": 2
        }
      },
      "file": "/Library/WebServer/Documents/mt/lib/util/math.js"
    },
    "params": [
      {
        "name": "data",
        "lineNumber": 2,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "Array of numbers to average",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 28,
                      "offset": 27
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 28,
                  "offset": 27
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 28,
              "offset": 27
            }
          }
        },
        "type": {
          "type": "NameExpression",
          "name": "Array"
        }
      }
    ],
    "returns": [
      {
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "Average of the input data",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 26,
                      "offset": 25
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 26,
                  "offset": 25
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 26,
              "offset": 25
            }
          }
        },
        "type": {
          "type": "NameExpression",
          "name": "number"
        }
      }
    ],
    "examples": [
      {
        "description": "Nexus.average([0,2,4,6,8,10])   // returns 5"
      }
    ],
    "name": "average",
    "kind": "function",
    "memberof": "math",
    "scope": "static",
    "members": {
      "instance": [],
      "static": [],
      "events": []
    },
    "path": [
      {
        "name": "average",
        "kind": "function",
        "scope": "static"
      }
    ],
    "namespace": ".average"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "Get the distance from one (x,y) point to another (x,y) point",
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 61,
                  "offset": 60
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 61,
              "offset": 60
            },
            "indent": []
          }
        }
      ],
      "position": {
        "start": {
          "line": 1,
          "column": 1,
          "offset": 0
        },
        "end": {
          "line": 1,
          "column": 61,
          "offset": 60
        }
      }
    },
    "tags": [
      {
        "title": "param",
        "description": "x of first point",
        "lineNumber": 2,
        "type": {
          "type": "NameExpression",
          "name": "number"
        },
        "name": "x1"
      },
      {
        "title": "param",
        "description": "y of first point",
        "lineNumber": 3,
        "type": {
          "type": "NameExpression",
          "name": "number"
        },
        "name": "y1"
      },
      {
        "title": "param",
        "description": "x of second point",
        "lineNumber": 4,
        "type": {
          "type": "NameExpression",
          "name": "number"
        },
        "name": "x2"
      },
      {
        "title": "param",
        "description": "y of second poiny",
        "lineNumber": 5,
        "type": {
          "type": "NameExpression",
          "name": "number"
        },
        "name": "y2"
      },
      {
        "title": "return",
        "description": "Distance",
        "lineNumber": 6,
        "type": {
          "type": "NameExpression",
          "name": "number"
        }
      },
      {
        "title": "example",
        "description": "Nexus.distance(0,0,3,4)   // returns 5",
        "lineNumber": 7
      }
    ],
    "loc": {
      "start": {
        "line": 189,
        "column": 0
      },
      "end": {
        "line": 198,
        "column": 3
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 199,
          "column": 0
        },
        "end": {
          "line": 203,
          "column": 2
        }
      },
      "file": "/Library/WebServer/Documents/mt/lib/util/math.js"
    },
    "params": [
      {
        "name": "x1",
        "lineNumber": 2,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "x of first point",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 17,
                      "offset": 16
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 17,
                  "offset": 16
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 17,
              "offset": 16
            }
          }
        },
        "type": {
          "type": "NameExpression",
          "name": "number"
        }
      },
      {
        "name": "y1",
        "lineNumber": 3,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "y of first point",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 17,
                      "offset": 16
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 17,
                  "offset": 16
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 17,
              "offset": 16
            }
          }
        },
        "type": {
          "type": "NameExpression",
          "name": "number"
        }
      },
      {
        "name": "x2",
        "lineNumber": 4,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "x of second point",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 18,
                      "offset": 17
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 18,
                  "offset": 17
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 18,
              "offset": 17
            }
          }
        },
        "type": {
          "type": "NameExpression",
          "name": "number"
        }
      },
      {
        "name": "y2",
        "lineNumber": 5,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "y of second poiny",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 18,
                      "offset": 17
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 18,
                  "offset": 17
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 18,
              "offset": 17
            }
          }
        },
        "type": {
          "type": "NameExpression",
          "name": "number"
        }
      }
    ],
    "returns": [
      {
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "Distance",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 9,
                      "offset": 8
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 9,
                  "offset": 8
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 9,
              "offset": 8
            }
          }
        },
        "type": {
          "type": "NameExpression",
          "name": "number"
        }
      }
    ],
    "examples": [
      {
        "description": "Nexus.distance(0,0,3,4)   // returns 5"
      }
    ],
    "name": "distance",
    "kind": "function",
    "memberof": "math",
    "scope": "static",
    "members": {
      "instance": [],
      "static": [],
      "events": []
    },
    "path": [
      {
        "name": "distance",
        "kind": "function",
        "scope": "static"
      }
    ],
    "namespace": ".distance"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "Flip a coin, returning either 0 or 1 according to a probability",
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 64,
                  "offset": 63
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 64,
              "offset": 63
            },
            "indent": []
          }
        }
      ],
      "position": {
        "start": {
          "line": 1,
          "column": 1,
          "offset": 0
        },
        "end": {
          "line": 1,
          "column": 64,
          "offset": 63
        }
      }
    },
    "tags": [
      {
        "title": "param",
        "description": "Likelihood of returning 1",
        "lineNumber": 2,
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "number"
          }
        },
        "name": "odds",
        "default": "0.5"
      },
      {
        "title": "return",
        "description": "1 or 0",
        "lineNumber": 3,
        "type": {
          "type": "NameExpression",
          "name": "number"
        }
      },
      {
        "title": "example",
        "description": "Nexus.coin(0.1)   // returns 1 (10% of the time) or 0 (90% of the time)",
        "lineNumber": 4
      }
    ],
    "loc": {
      "start": {
        "line": 209,
        "column": 0
      },
      "end": {
        "line": 215,
        "column": 3
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 216,
          "column": 0
        },
        "end": {
          "line": 222,
          "column": 2
        }
      },
      "file": "/Library/WebServer/Documents/mt/lib/util/math.js"
    },
    "params": [
      {
        "name": "odds",
        "lineNumber": 2,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "Likelihood of returning 1",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 26,
                      "offset": 25
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 26,
                  "offset": 25
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 26,
              "offset": 25
            }
          }
        },
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "number"
          }
        },
        "default": "0.5"
      }
    ],
    "returns": [
      {
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "1 or 0",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 7,
                      "offset": 6
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 7,
                  "offset": 6
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 7,
              "offset": 6
            }
          }
        },
        "type": {
          "type": "NameExpression",
          "name": "number"
        }
      }
    ],
    "examples": [
      {
        "description": "Nexus.coin(0.1)   // returns 1 (10% of the time) or 0 (90% of the time)"
      }
    ],
    "name": "coin",
    "kind": "function",
    "memberof": "math",
    "scope": "static",
    "members": {
      "instance": [],
      "static": [],
      "events": []
    },
    "path": [
      {
        "name": "coin",
        "kind": "function",
        "scope": "static"
      }
    ],
    "namespace": ".coin"
  }
]